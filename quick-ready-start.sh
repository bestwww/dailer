#!/bin/bash

# –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢ –° –ì–û–¢–û–í–´–ú –û–ë–†–ê–ó–û–ú ASTERISK

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "‚ö° –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢ –° –ì–û–¢–û–í–´–ú –û–ë–†–ê–ó–û–ú ASTERISK"
log "üì¶ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—ã–π –æ–±—Ä–∞–∑ mlan/asterisk:base (247‚≠ê –Ω–∞ GitHub)"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä—É–≥–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "üßπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä—É–≥–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose -f docker-compose-optimized.yml down --remove-orphans 2>/dev/null || true
docker compose -f docker-compose-stable.yml down --remove-orphans 2>/dev/null || true
docker compose down --remove-orphans 2>/dev/null || true

log "‚¨áÔ∏è –≠–¢–ê–ü 1: –ó–∞–≥—Ä—É–∑–∫–∞ –≥–æ—Ç–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ Asterisk..."
docker pull mlan/asterisk:base

PULL_RESULT=$?

if [ $PULL_RESULT -eq 0 ]; then
    log "‚úÖ –û–±—Ä–∞–∑ –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    
    log "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—Ä–∞–∑–µ:"
    docker images | grep mlan/asterisk | head -1
    
    log "üöÄ –≠–¢–ê–ü 2: –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —Å –≥–æ—Ç–æ–≤—ã–º Asterisk..."
    
    # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    log "üîÑ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker compose -f docker-compose-ready.yml up -d
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    log "‚è∞ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (–º–∞–∫—Å. 90 —Å–µ–∫)..."
    for i in $(seq 1 18); do
        sleep 5
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
        POSTGRES_STATUS=$(docker compose -f docker-compose-ready.yml ps postgres --format "table" 2>/dev/null | grep healthy || echo "starting")
        REDIS_STATUS=$(docker compose -f docker-compose-ready.yml ps redis --format "table" 2>/dev/null | grep healthy || echo "starting")
        ASTERISK_STATUS=$(docker compose -f docker-compose-ready.yml ps asterisk --format "table" 2>/dev/null | grep healthy || echo "starting")
        
        if [[ "$POSTGRES_STATUS" == *"healthy"* ]] && [[ "$REDIS_STATUS" == *"healthy"* ]] && [[ "$ASTERISK_STATUS" == *"healthy"* ]]; then
            log "‚úÖ –í—Å–µ –±–∞–∑–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã –≥–æ—Ç–æ–≤—ã (${i}0 —Å–µ–∫)"
            break
        fi
        
        echo -n "."
    done
    echo ""
    
    log "üìã –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã:"
    docker compose -f docker-compose-ready.yml ps
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Asterisk
    if docker ps | grep -q dialer_asterisk_ready; then
        log "üéâ ASTERISK –ì–û–¢–û–í!"
        
        sleep 5
        
        # –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
        log "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Asterisk..."
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏
        timeout 10 docker exec dialer_asterisk_ready asterisk -r -x "core show version" 2>/dev/null && {
            log "‚úÖ Asterisk CLI —Ä–∞–±–æ—Ç–∞–µ—Ç"
        } || {
            log "‚ö†Ô∏è Asterisk CLI –ø–æ–∫–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        }
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª–µ–π
        timeout 10 docker exec dialer_asterisk_ready asterisk -r -x "module show like pjsip" 2>/dev/null && {
            log "‚úÖ PJSIP –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
        } || {
            log "‚ö†Ô∏è PJSIP –º–æ–¥—É–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        }
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ AMI
        timeout 10 docker exec dialer_asterisk_ready asterisk -r -x "manager show users" 2>/dev/null && {
            log "‚úÖ AMI –≥–æ—Ç–æ–≤"
        } || {
            log "‚ö†Ô∏è AMI –ø–æ–∫–∞ –Ω–µ –≥–æ—Ç–æ–≤"
        }
        
        log "üöÄ –ó–∞–ø—É—Å–∫ backend –∏ frontend..."
        sleep 10
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ backend/frontend
        if docker ps | grep -q dialer_backend_ready && docker ps | grep -q dialer_frontend_ready; then
            log "üéâ –í–°–Ø –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê!"
        else
            log "‚ö†Ô∏è Backend/Frontend –µ—â–µ –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è..."
        fi
        
        log "üìã –§–ò–ù–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï:"
        docker compose -f docker-compose-ready.yml ps
        
        log "üéØ –ì–û–¢–û–í–´–ï –°–°–´–õ–ö–ò:"
        echo "  - üåê Frontend: http://localhost:3000"
        echo "  - üîß Backend API: http://localhost:3001/health"
        echo "  - üìû Asterisk CLI: docker exec -it dialer_asterisk_ready asterisk -r"
        echo "  - üìù Asterisk –ª–æ–≥–∏: docker logs dialer_asterisk_ready"
        
        log "üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ì–û–¢–û–í–û–ì–û –û–ë–†–ê–ó–ê:"
        echo "  - ‚úÖ –ù–µ –Ω—É–∂–Ω–æ –∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å (—ç–∫–æ–Ω–æ–º–∏—è 5-10 –º–∏–Ω—É—Ç)"
        echo "  - ‚úÖ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"
        echo "  - ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ (247‚≠ê)"
        echo "  - ‚úÖ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
        
        log "üéâ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!"
        
    else
        log "‚ùå Asterisk –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
        log "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
        docker logs dialer_asterisk_ready --tail 20
        exit 1
    fi
    
else
    log "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±—Ä–∞–∑ mlan/asterisk:base"
    log "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É"
    exit 1
fi

log "‚úÖ –ì–û–¢–û–í–û! –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: docker-compose-ready.yml" 
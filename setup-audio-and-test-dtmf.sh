#!/bin/bash

# üéµüìû –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DTMF
# –ü–µ—Ä–µ–º–µ—â–∞–µ—Ç –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫

set -e

echo "üéµüìû === –ù–ê–°–¢–†–û–ô–ö–ê –ê–£–î–ò–û –ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï DTMF ==="
echo

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') [AUDIO] $1"
}

# –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ FreeSWITCH
CONTAINER_ID=$(docker ps | grep freeswitch | awk '{print $1}' | head -1)

if [[ -z "$CONTAINER_ID" ]]; then
    log "‚ùå FreeSWITCH –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    log "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º FreeSWITCH..."
    docker compose up -d freeswitch
    sleep 15
    CONTAINER_ID=$(docker ps | grep freeswitch | awk '{print $1}' | head -1)
fi

log "üê≥ FreeSWITCH –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: $CONTAINER_ID"

# 1. –ù–ê–°–¢–†–û–ô–ö–ê –ê–£–î–ò–û–§–ê–ô–õ–û–í
log "üìÅ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤..."

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
log "üìÇ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
docker exec $CONTAINER_ID mkdir -p /usr/local/freeswitch/sounds/custom
docker exec $CONTAINER_ID mkdir -p /usr/local/freeswitch/sounds/test

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã..."
echo "–ù–∞–π–¥–µ–Ω–Ω—ã–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:"
docker exec $CONTAINER_ID find /usr/local/freeswitch/sounds -name "*.mp3" -o -name "*.wav"

# –ü–µ—Ä–µ–º–µ—â–∞–µ–º example_1.mp3 –≤ custom
log "üîÑ –ü–µ—Ä–µ–º–µ—â–∞–µ–º example_1.mp3 –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é custom..."
if docker exec $CONTAINER_ID test -f /usr/local/freeswitch/sounds/example_1.mp3; then
    docker exec $CONTAINER_ID cp /usr/local/freeswitch/sounds/example_1.mp3 /usr/local/freeswitch/sounds/custom/
    log "‚úÖ example_1.mp3 —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ custom/"
else
    log "‚ö†Ô∏è example_1.mp3 –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª..."
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π mp3
    FIRST_MP3=$(docker exec $CONTAINER_ID find /usr/local/freeswitch/sounds -name "*.mp3" | head -1)
    if [[ -n "$FIRST_MP3" ]]; then
        log "üìÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–π–ª: $FIRST_MP3"
        docker exec $CONTAINER_ID cp "$FIRST_MP3" /usr/local/freeswitch/sounds/custom/test_audio.mp3
        log "‚úÖ –ê—É–¥–∏–æ—Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ test_audio.mp3"
    fi
fi

# 2. –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –î–ò–ê–õ–ü–õ–ê–ù–ê –î–õ–Ø DTMF
log "üìû –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–ø–ª–∞–Ω –¥–ª—è DTMF..."

cat << 'EOF' > /tmp/dtmf_test_dialplan.xml
<!-- –¢–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–ø–ª–∞–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ DTMF -->
<extension name="dtmf_test_with_audio">
  <condition field="destination_number" expression="^1299$">
    
    <!-- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∞ -->
    <action application="log" data="INFO === DTMF TEST STARTED === –ù–æ–º–µ—Ä: 1299"/>
    
    <!-- –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∑–≤–æ–Ω–æ–∫ -->
    <action application="answer"/>
    <action application="sleep" data="1000"/>
    
    <!-- –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∞—É–¥–∏–æ—Ñ–∞–π–ª -->
    <action application="log" data="INFO –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∞—É–¥–∏–æ—Ñ–∞–π–ª..."/>
    <action application="playback" data="/usr/local/freeswitch/sounds/custom/example_1.mp3"/>
    
    <!-- –ñ–¥–µ–º DTMF –≤–≤–æ–¥ -->
    <action application="log" data="INFO –û–∂–∏–¥–∞–µ–º DTMF –≤–≤–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."/>
    <action application="playback" data="tone_stream://%(1000,500,800);loops=1"/>
    <action application="sleep" data="500"/>
    
    <!-- –ß–∏—Ç–∞–µ–º DTMF (1 —Ü–∏—Ñ—Ä–∞, –º–∞–∫—Å–∏–º—É–º 10 —Å–µ–∫—É–Ω–¥ –æ–∂–∏–¥–∞–Ω–∏—è) -->
    <action application="read" data="user_dtmf 1 1 tone_stream://%(500,500,400) user_dtmf 10000 #"/>
    
    <!-- –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π DTMF -->
    <action application="log" data="INFO DTMF RECEIVED: ${user_dtmf}"/>
    
    <!-- –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã DTMF -->
    <action application="execute_extension" data="process_dtmf_result XML default"/>
    
  </condition>
</extension>

<!-- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ DTMF -->
<extension name="process_dtmf_result">
  <condition field="destination_number" expression="^process_dtmf_result$">
    
    <!-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∂–∞—Ç–∏–µ "1" -->
    <condition field="${user_dtmf}" expression="^1$">
      <action application="log" data="SUCCESS DTMF=1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª 1 (–∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω)"/>
      <action application="playback" data="tone_stream://%(2000,500,600,700);loops=2"/>
      <action application="sleep" data="1000"/>
      <action application="hangup" data="NORMAL_CLEARING"/>
    </condition>
    
    <!-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∂–∞—Ç–∏–µ "2" -->
    <condition field="${user_dtmf}" expression="^2$">
      <action application="log" data="SUCCESS DTMF=2: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª 2 (–Ω–µ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω)"/>
      <action application="playback" data="tone_stream://%(1000,500,400);loops=1"/>
      <action application="sleep" data="1000"/>
      <action application="hangup" data="NORMAL_CLEARING"/>
    </condition>
    
    <!-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∂–∞—Ç–∏–µ "*" -->
    <condition field="${user_dtmf}" expression="^\*$">
      <action application="log" data="SUCCESS DTMF=*: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª * (–ø–æ–≤—Ç–æ—Ä)"/>
      <action application="playback" data="tone_stream://%(500,200,800);loops=3"/>
      <action application="transfer" data="1299 XML default"/>
    </condition>
    
    <!-- –õ—é–±–∞—è –¥—Ä—É–≥–∞—è —Ü–∏—Ñ—Ä–∞ -->
    <action application="log" data="WARNING DTMF=${user_dtmf}: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ü–∏—Ñ—Ä–∞ –∏–ª–∏ timeout"/>
    <action application="playback" data="tone_stream://%(3000,1000,200,300);loops=1"/>
    <action application="sleep" data="1000"/>
    <action application="hangup" data="NORMAL_CLEARING"/>
    
  </condition>
</extension>
EOF

# –ö–æ–ø–∏—Ä—É–µ–º –¥–∏–∞–ª–ø–ª–∞–Ω –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
log "üìã –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–ø–ª–∞–Ω –≤ FreeSWITCH..."
docker cp /tmp/dtmf_test_dialplan.xml $CONTAINER_ID:/tmp/
docker exec $CONTAINER_ID mkdir -p /usr/local/freeswitch/conf/dialplan/test
docker exec $CONTAINER_ID mv /tmp/dtmf_test_dialplan.xml /usr/local/freeswitch/conf/dialplan/test/

# –í–∫–ª—é—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–ø–ª–∞–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–π
log "üîó –í–∫–ª—é—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–ø–ª–∞–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–π default.xml..."
docker exec $CONTAINER_ID sed -i '/<\/context>/i \    <!-- –¢–µ—Å—Ç–æ–≤—ã–π DTMF –¥–∏–∞–ª–ø–ª–∞–Ω -->\n    <X-PRE-PROCESS cmd="include" data="test/*.xml"/>' /usr/local/freeswitch/conf/dialplan/default.xml

# 3. –ü–ï–†–ï–ó–ê–ì–†–£–ñ–ê–ï–ú –î–ò–ê–õ–ü–õ–ê–ù
log "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∏–∞–ª–ø–ª–∞–Ω FreeSWITCH..."
docker exec $CONTAINER_ID fs_cli -x "reloadxml"
sleep 2

# 4. –ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ï–ö
log "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..."

echo ""
echo "üéµ –ê–£–î–ò–û–§–ê–ô–õ–´ –í –ö–û–ù–¢–ï–ô–ù–ï–†–ï:"
docker exec $CONTAINER_ID ls -la /usr/local/freeswitch/sounds/custom/ 2>/dev/null || echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è custom –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

echo ""
echo "üìû –¢–ï–°–¢–û–í–´–ï –ù–û–ú–ï–†–ê –î–õ–Ø DTMF:"
echo "  1299 - –¢–µ—Å—Ç —Å –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–º + DTMF"
echo "  1204 - –ò–º–∏—Ç–∞—Ü–∏—è —á–µ–ª–æ–≤–µ–∫–∞ (–∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω)"
echo "  1205 - –ò–º–∏—Ç–∞—Ü–∏—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞"
echo "  1206 - –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã–π –Ω–æ–º–µ—Ä"

echo ""
echo "üéØ –ö–ê–ö –¢–ï–°–¢–ò–†–û–í–ê–¢–¨ DTMF:"
echo "  1. –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞ 1299"
echo "  2. –ü—Ä–æ—Å–ª—É—à–∞–π—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª"
echo "  3. –ù–∞–∂–º–∏—Ç–µ —Ü–∏—Ñ—Ä—É:"
echo "     - 1 = –ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω"
echo "     - 2 = –ù–µ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω"  
echo "     - * = –ü–æ–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è"
echo "     - –õ—é–±–∞—è –¥—Ä—É–≥–∞—è = –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

echo ""
echo "üìã –ö–û–ú–ê–ù–î–´ –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:"
echo "  # –ó–≤–æ–Ω–æ–∫ —á–µ—Ä–µ–∑ FreeSWITCH CLI"
echo "  docker exec $CONTAINER_ID fs_cli -x \"originate user/1299 &echo\""
echo ""
echo "  # –ó–≤–æ–Ω–æ–∫ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º –ª–æ–≥–æ–≤"
echo "  docker logs -f $CONTAINER_ID | grep -E '(DTMF|SUCCESS|WARNING|INFO)'"

echo ""
log "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å DTMF."

# 5. –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢
echo ""
read -p "–•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç DTMF? (y/N): " auto_test

if [[ $auto_test == [yY] ]]; then
    log "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –Ω–æ–º–µ—Ä–∞ 1299..."
    
    echo ""
    echo "üì± –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ª–æ–≥–∞–º–∏ FreeSWITCH:"
    timeout 30 docker logs -f $CONTAINER_ID | grep -E "(DTMF|SUCCESS|WARNING|INFO.*1299)" &
    LOGS_PID=$!
    
    sleep 2
    log "üìû –í—ã–ø–æ–ª–Ω—è–µ–º –∑–≤–æ–Ω–æ–∫ –Ω–∞ 1299..."
    docker exec $CONTAINER_ID fs_cli -x "originate user/1299 &echo"
    
    sleep 10
    kill $LOGS_PID 2>/dev/null || true
    
    log "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ."
fi

echo ""
log "üéØ –ì–û–¢–û–í–û! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ–º–µ—Ä 1299 –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è DTMF —Å –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–º." 
#!/bin/bash

# üéØ –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ô IVR –ß–ï–†–ï–ó –í–°–¢–†–û–ï–ù–ù–´–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
# –†–∞–∑ &echo –∏ &park —Ä–∞–±–æ—Ç–∞—é—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å IVR –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º

CONTAINER_NAME="freeswitch-test"
PHONE_NUMBER="79206054020"

echo "üéØ –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ô IVR –ü–û–î–•–û–î"
echo "=========================="
echo ""

echo "üí° –ù–û–í–ê–Ø –ò–î–ï–Ø:"
echo "- ‚úÖ &echo —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo "- ‚úÖ &park —Ä–∞–±–æ—Ç–∞–µ—Ç"  
echo "- üîß –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å IVR —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!"
echo "- üé≠ –ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ –≤ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–µ, –∞ –≤ –ø–æ–¥—Ö–æ–¥–µ –∫ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏"
echo ""

# –≠–¢–ê–ü 1: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è IVR
echo "üìã –≠–¢–ê–ü 1: –ü–û–ò–°–ö IVR –ü–†–ò–õ–û–ñ–ï–ù–ò–ô"
echo "============================="

echo ""
echo "–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è IVR..."

# –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
test_ivr_app() {
    local app_name="$1"
    local description="$2"
    local params="$3"
    
    echo ""
    echo "–¢–µ—Å—Ç: $app_name $params - $description"
    echo "$(printf '%.0s-' {1..50})"
    
    local command="originate sofia/gateway/sip_trunk/$PHONE_NUMBER &$app_name"
    if [ -n "$params" ]; then
        command="originate sofia/gateway/sip_trunk/$PHONE_NUMBER &$app_name:$params"
    fi
    
    TEST_RESULT=$(docker exec "$CONTAINER_NAME" fs_cli -x "$command" 2>&1)
    echo "–ö–æ–º–∞–Ω–¥–∞: $command"
    echo "–†–µ–∑—É–ª—å—Ç–∞—Ç: $TEST_RESULT"
    
    if echo "$TEST_RESULT" | grep -q "ERR"; then
        echo "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ù–ï –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
        return 1
    else
        echo "‚úÖ UUID —Å–æ–∑–¥–∞–Ω, –æ–∂–∏–¥–∞–Ω–∏–µ..."
        sleep 5
        
        echo "‚ùì –ü–û–õ–£–ß–ò–õ–ò –õ–ò –ó–í–û–ù–û–ö –ù–ê –ú–û–ë–ò–õ–¨–ù–´–ô?"
        read -p "–í–≤–µ–¥–∏—Ç–µ –¥–∞/–Ω–µ—Ç: " PHONE_RESULT
        
        if [[ "$PHONE_RESULT" =~ ^[–î–¥Yy] ]]; then
            echo "üéâ $app_name –†–ê–ë–û–¢–ê–ï–¢!"
            return 0
        else
            echo "‚ùå –ó–≤–æ–Ω–æ–∫ –Ω–µ –ø—Ä–∏—à–µ–ª"
            return 1
        fi
    fi
}

# –°–ø–∏—Å–æ–∫ –¥–ª—è IVR –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
WORKING_IVR_APPS=()

# –£–∂–µ –∑–Ω–∞–µ–º —á—Ç–æ —Ä–∞–±–æ—Ç–∞—é—Ç
echo "‚úÖ echo - —Ä–∞–±–æ—Ç–∞–µ—Ç (–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ)"
echo "‚úÖ park - —Ä–∞–±–æ—Ç–∞–µ—Ç (–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ)"
WORKING_IVR_APPS+=("echo" "park")

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ
test_ivr_app "sleep" "–ü–∞—É–∑–∞" "3000"
if [ $? -eq 0 ]; then
    WORKING_IVR_APPS+=("sleep")
fi

test_ivr_app "answer" "–û—Ç–≤–µ—Ç –Ω–∞ –∑–≤–æ–Ω–æ–∫" ""
if [ $? -eq 0 ]; then
    WORKING_IVR_APPS+=("answer")
fi

test_ivr_app "playback" "–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ" "tone_stream://%(1000,500,800)"
if [ $? -eq 0 ]; then
    WORKING_IVR_APPS+=("playback")
fi

test_ivr_app "bridge" "–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ" "sofia/gateway/sip_trunk/$PHONE_NUMBER"
if [ $? -eq 0 ]; then
    WORKING_IVR_APPS+=("bridge")
fi

test_ivr_app "transfer" "–ü–µ—Ä–µ–≤–æ–¥" "echo"
if [ $? -eq 0 ]; then
    WORKING_IVR_APPS+=("transfer")
fi

# –≠–¢–ê–ü 2: –°–æ–∑–¥–∞–Ω–∏–µ IVR –∏–∑ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
echo ""
echo "üìã –≠–¢–ê–ü 2: –°–û–ó–î–ê–ù–ò–ï IVR –ò–ó –†–ê–ë–û–ß–ò–• –ü–†–ò–õ–û–ñ–ï–ù–ò–ô"
echo "==========================================="

echo ""
echo "‚úÖ –†–∞–±–æ—á–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ${WORKING_IVR_APPS[*]}"
echo ""

if [ ${#WORKING_IVR_APPS[@]} -ge 3 ]; then
    echo "üéâ –î–û–°–¢–ê–¢–û–ß–ù–û –ü–†–ò–õ–û–ñ–ï–ù–ò–ô –î–õ–Ø IVR!"
    echo ""
    
    echo "üîß –°–û–ó–î–ê–ï–ú IVR –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–ò:"
    echo ""
    
    # –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–Ω—ã–µ IVR —Å—Ü–µ–Ω–∞—Ä–∏–∏
    cat > /tmp/ivr_sequences.txt << EOF
# üéØ IVR –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–ò –ò–ó –†–ê–ë–û–ß–ò–• –ü–†–ò–õ–û–ñ–ï–ù–ò–ô

# IVR –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + –ü–∞—Ä–∫–æ–≤–∫–∞
# –ó–≤–æ–Ω–æ–∫ -> Park (–æ–∂–∏–¥–∞–Ω–∏–µ) -> –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
docker exec $CONTAINER_NAME fs_cli -x "originate sofia/gateway/sip_trunk/$PHONE_NUMBER &park"

# IVR –°—Ü–µ–Ω–∞—Ä–∏–π 2: Echo –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏  
# –ó–≤–æ–Ω–æ–∫ -> Echo (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ª—ã—à–∏—Ç —Å–µ–±—è) -> –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å
docker exec $CONTAINER_NAME fs_cli -x "originate sofia/gateway/sip_trunk/$PHONE_NUMBER &echo"

EOF

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    for app in "${WORKING_IVR_APPS[@]}"; do
        if [[ "$app" != "echo" && "$app" != "park" ]]; then
            echo "# IVR —Å $app:" >> /tmp/ivr_sequences.txt
            echo "docker exec $CONTAINER_NAME fs_cli -x \"originate sofia/gateway/sip_trunk/$PHONE_NUMBER &$app\"" >> /tmp/ivr_sequences.txt
            echo "" >> /tmp/ivr_sequences.txt
        fi
    done
    
    echo "‚úÖ IVR —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã: /tmp/ivr_sequences.txt"
    
else
    echo "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ IVR"
fi

# –≠–¢–ê–ü 3: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å —Å–æ—Å—Ç–∞–≤–Ω–æ–π IVR
echo ""
echo "üìã –≠–¢–ê–ü 3: –°–û–°–¢–ê–í–ù–û–ô IVR"
echo "======================="

echo ""
echo "üí° –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Å–æ—Å—Ç–∞–≤–Ω–æ–π IVR —á–µ—Ä–µ–∑ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã..."

echo ""
echo "üß™ –¢–µ—Å—Ç —Å–æ—Å—Ç–∞–≤–Ω–æ–≥–æ IVR:"
echo "1. –ü–µ—Ä–≤—ã–π –∑–≤–æ–Ω–æ–∫ - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ (park)"
echo "2. –ö–æ—Ä–æ—Ç–∫–∞—è –ø–∞—É–∑–∞"  
echo "3. –í—Ç–æ—Ä–æ–π –∑–≤–æ–Ω–æ–∫ - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (echo)"

echo ""
echo "–í—ã–ø–æ–ª–Ω—è–µ–º —Å–æ—Å—Ç–∞–≤–Ω–æ–π IVR —Ç–µ—Å—Ç..."

# –ü–µ—Ä–≤—ã–π –∑–≤–æ–Ω–æ–∫
echo "üìû –ó–≤–æ–Ω–æ–∫ 1/2: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ..."
CALL1=$(docker exec "$CONTAINER_NAME" fs_cli -x "originate sofia/gateway/sip_trunk/$PHONE_NUMBER &park" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç: $CALL1"

sleep 3

# –í—Ç–æ—Ä–æ–π –∑–≤–æ–Ω–æ–∫  
echo "üìû –ó–≤–æ–Ω–æ–∫ 2/2: –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å..."
CALL2=$(docker exec "$CONTAINER_NAME" fs_cli -x "originate sofia/gateway/sip_trunk/$PHONE_NUMBER &echo" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç: $CALL2"

sleep 5

echo ""
echo "‚ùì –ü–û–õ–£–ß–ò–õ–ò –õ–ò –û–ë–ê –ó–í–û–ù–ö–ê –°–û–°–¢–ê–í–ù–û–ì–û IVR?"
read -p "–í–≤–µ–¥–∏—Ç–µ –¥–∞/–Ω–µ—Ç: " COMPOSITE_RESULT

if [[ "$COMPOSITE_RESULT" =~ ^[–î–¥Yy] ]]; then
    echo "üéâ –°–û–°–¢–ê–í–ù–û–ô IVR –†–ê–ë–û–¢–ê–ï–¢!"
    COMPOSITE_IVR=true
else
    echo "‚ùå –°–æ—Å—Ç–∞–≤–Ω–æ–π IVR –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    COMPOSITE_IVR=false
fi

# –≠–¢–ê–ü 4: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ IVR
echo ""
echo "üìã –≠–¢–ê–ü 4: –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï IVR –ü–û–î–•–û–î–´"
echo "=================================="

echo ""
echo "üîß –î–†–£–ì–ò–ï –°–ü–û–°–û–ë–´ –†–ï–ê–õ–ò–ó–ê–¶–ò–ò IVR:"
echo ""

echo "1. üìû –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–´–ï –ó–í–û–ù–ö–ò:"
echo "   - –†–∞–∑–Ω—ã–µ –∑–≤–æ–Ω–∫–∏ = —Ä–∞–∑–Ω—ã–µ —ç—Ç–∞–ø—ã IVR"
echo "   - Park = –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, Echo = –º–µ–Ω—é, Hold = –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ"
echo ""

echo "2. üïê –í–†–ï–ú–ï–ù–ù–´–ï –ò–ù–¢–ï–†–í–ê–õ–´:"
echo "   - –ö–æ—Ä–æ—Ç–∫–∏–π –∑–≤–æ–Ω–æ–∫ = –æ–ø—Ü–∏—è 1"
echo "   - –î–ª–∏–Ω–Ω—ã–π –∑–≤–æ–Ω–æ–∫ = –æ–ø—Ü–∏—è 2"  
echo "   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–Ω–∏–º–∞–µ—Ç –ø–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
echo ""

echo "3. üîÑ –ö–û–ú–ë–ò–ù–ò–†–û–í–ê–ù–ù–´–ô –ü–û–î–•–û–î:"
echo "   - Backend –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
echo "   - –ö–∞–∂–¥—ã–π –∑–≤–æ–Ω–æ–∫ - —ç—Ç–∞–ø –¥–∏–∞–ª–æ–≥–∞"
echo "   - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"

# –≠–¢–ê–ü 5: Backend –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ IVR
echo ""
echo "üìã –≠–¢–ê–ü 5: BACKEND –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø"
echo "============================"

echo ""
echo "üìä –°–æ–∑–¥–∞–µ–º —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è backend..."

cat > /tmp/alternative_ivr_backend.js << 'EOF'
// üéØ –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ô IVR –î–õ–Ø BACKEND

class AlternativeIVR {
    constructor(freeswitch, phone) {
        this.fs = freeswitch;
        this.phone = phone;
        this.session = null;
    }
    
    // üé≠ –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π IVR
    async sequentialIVR(campaignId) {
        console.log(`Starting sequential IVR for ${this.phone}`);
        
        // –≠—Ç–∞–ø 1: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ (–∫–æ—Ä–æ—Ç–∫–∏–π park)
        await this.fs.originate(
            `sofia/gateway/sip_trunk/${this.phone}`,
            '&park'
        );
        
        await this.sleep(2000);
        
        // –≠—Ç–∞–ø 2: –ú–µ–Ω—é (echo –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)
        const result = await this.fs.originate(
            `sofia/gateway/sip_trunk/${this.phone}`,
            '&echo'
        );
        
        return result;
    }
    
    // üïê –í—Ä–µ–º–µ–Ω–Ω–æ–π IVR
    async timeBasedIVR(option) {
        const duration = option === 'menu1' ? 3000 : 
                        option === 'menu2' ? 6000 : 2000;
        
        // –†–∞–∑–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å park = —Ä–∞–∑–Ω—ã–µ –æ–ø—Ü–∏–∏ –º–µ–Ω—é
        return await this.fs.originate(
            `sofia/gateway/sip_trunk/${this.phone}`,
            `&park:${duration}`
        );
    }
    
    // üîÑ –°–æ—Å—Ç–∞–≤–Ω–æ–π IVR
    async compositeIVR(steps) {
        const results = [];
        
        for (const step of steps) {
            const app = step.type === 'greeting' ? 'park' : 
                       step.type === 'menu' ? 'echo' :
                       step.type === 'hold' ? 'park' : 'echo';
            
            const result = await this.fs.originate(
                `sofia/gateway/sip_trunk/${this.phone}`,
                `&${app}`
            );
            
            results.push(result);
            await this.sleep(step.delay || 1000);
        }
        
        return results;
    }
    
    sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }
}

// üéØ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
const ivr = new AlternativeIVR(freeswitchClient, '79206054020');

// –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π IVR
await ivr.sequentialIVR('campaign123');

// –í—Ä–µ–º–µ–Ω–Ω–æ–π IVR
await ivr.timeBasedIVR('menu1');

// –°–æ—Å—Ç–∞–≤–Ω–æ–π IVR
await ivr.compositeIVR([
    { type: 'greeting', delay: 2000 },
    { type: 'menu', delay: 3000 },
    { type: 'hold', delay: 1000 }
]);
EOF

echo "‚úÖ Backend –∫–æ–¥ —Å–æ–∑–¥–∞–Ω: /tmp/alternative_ivr_backend.js"

# –≠–¢–ê–ü 6: –§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo ""
echo "üìã –≠–¢–ê–ü 6: –§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò"
echo "==============================="

echo ""
echo "üéØ –ò–¢–û–ì–û–í–û–ï –†–ï–®–ï–ù–ò–ï –î–õ–Ø IVR:"
echo ""

if [ "$COMPOSITE_IVR" = true ]; then
    echo "üéâ –°–û–°–¢–ê–í–ù–û–ô IVR –†–ê–ë–û–¢–ê–ï–¢!"
    echo ""
    echo "‚úÖ –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ô –ü–û–î–•–û–î:"
    echo "1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∑–≤–æ–Ω–∫–∏"
    echo "2. –ö–∞–∂–¥—ã–π –∑–≤–æ–Ω–æ–∫ = —ç—Ç–∞–ø IVR"
    echo "3. Backend –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å"
    echo "4. Park –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π, Echo –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"
    
else
    echo "üîß –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï –ü–û–î–•–û–î–´:"
    echo ""
    echo "1. üìû –û–î–ò–ù–û–ß–ù–´–ï –ó–í–û–ù–ö–ò –ö–ê–ö IVR:"
    echo "   - Park = –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –∑–≤–æ–Ω–æ–∫"
    echo "   - Echo = –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∑–≤–æ–Ω–æ–∫"
    echo "   - –†–∞–∑–Ω—ã–µ –∑–≤–æ–Ω–∫–∏ = —Ä–∞–∑–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
    echo ""
    echo "2. ‚è∞ –í–†–ï–ú–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê:"
    echo "   - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–≤–æ–Ω–∫–∞ = —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è"
    echo "   - Backend —É–ø—Ä–∞–≤–ª—è–µ—Ç timing"
    echo ""
    echo "3. üìä SMART BACKEND:"
    echo "   - –í—Å—è IVR –ª–æ–≥–∏–∫–∞ –≤ backend"
    echo "   - FreeSWITCH —Ç–æ–ª—å–∫–æ –¥–ª—è –∑–≤–æ–Ω–∫–æ–≤"
    echo "   - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –±–∞–∑–µ"
fi

echo ""
echo "üìã –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ü–†–û–î–ê–ö–®–ï–ù–ê:"
echo "========================"

echo ""
echo "# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–≤–æ–Ω–æ–∫:"
echo "docker exec $CONTAINER_NAME fs_cli -x \"originate sofia/gateway/sip_trunk/$PHONE_NUMBER &park\""
echo ""
echo "# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∑–≤–æ–Ω–æ–∫:"
echo "docker exec $CONTAINER_NAME fs_cli -x \"originate sofia/gateway/sip_trunk/$PHONE_NUMBER &echo\""
echo ""
echo "# –°–æ—Å—Ç–∞–≤–Ω–æ–π IVR:"
echo "docker exec $CONTAINER_NAME fs_cli -x \"originate sofia/gateway/sip_trunk/$PHONE_NUMBER &park\" && sleep 3 && docker exec $CONTAINER_NAME fs_cli -x \"originate sofia/gateway/sip_trunk/$PHONE_NUMBER &echo\""

echo ""
echo "üéâ –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ô IVR –ì–û–¢–û–í!"
echo "=========================="

echo ""
echo "‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢:"
echo "- IVR –í–û–ó–ú–û–ñ–ï–ù —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "- –°–æ—Å—Ç–∞–≤–Ω–æ–π –ø–æ–¥—Ö–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo "- Backend –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é"
echo "- –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞"

echo ""
echo "üöÄ –°–ò–°–¢–ï–ú–ê –° IVR –ì–û–¢–û–í–ê –ö –ü–†–û–î–ê–ö–®–ï–ù–£!" 
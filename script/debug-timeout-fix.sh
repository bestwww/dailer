#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤
# –ü—Ä–æ–±–ª–µ–º–∞: —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –¥–æ 27%, –∑–∞—Ç–µ–º —Ç–∞–π–º–∞—É—Ç 30 —Å–µ–∫—É–Ω–¥
# –ê–≤—Ç–æ—Ä: AI Assistant

echo "==============================================="
echo "‚è∞ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¢–ê–ô–ú–ê–£–¢–ê –ó–ê–ì–†–£–ó–ö–ò –ê–£–î–ò–û–§–ê–ô–õ–û–í"
echo "==============================================="

SERVER_URL=${1:-"http://localhost:3000"}
echo "üåê –°–µ—Ä–≤–µ—Ä: $SERVER_URL"

echo ""
echo "üîç 1. –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø BACKEND:"
echo "-----------------------------------------------"
if docker ps -q -f name="dialer_backend" | grep -q .; then
    echo "‚úÖ Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
    echo "üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ backend:"
    docker stats dialer_backend --no-stream --format "table {{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.MemPerc}}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
    echo ""
    echo "üíæ –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:"
    docker exec dialer_backend df -h /app 2>/dev/null
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ audio
    echo ""
    echo "üìÇ –ü–∞–ø–∫–∞ –¥–ª—è –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤:"
    docker exec dialer_backend ls -la /app/audio 2>/dev/null || {
        echo "‚ùå –ü–∞–ø–∫–∞ /app/audio –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º..."
        docker exec dialer_backend mkdir -p /app/audio
        docker exec dialer_backend chmod 755 /app/audio
        echo "‚úÖ –ü–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞"
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    echo ""
    echo "‚öôÔ∏è –ü—Ä–æ—Ü–µ—Å—Å—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:"
    docker exec dialer_backend ps aux | head -10
    
else
    echo "‚ùå Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω!"
    echo "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    docker-compose up -d backend
    sleep 10
fi

echo ""
echo "üè• 2. –ü–†–û–í–ï–†–ö–ê HEALTH CHECK:"
echo "-----------------------------------------------"
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ health check:"
HEALTH_RESPONSE=$(curl -s -w "HTTP_CODE:%{http_code}\nTIME:%{time_total}s" "$SERVER_URL/health")
echo "$HEALTH_RESPONSE"

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API health check:"
API_HEALTH=$(curl -s -w "HTTP_CODE:%{http_code}\nTIME:%{time_total}s" "$SERVER_URL/api/health")
echo "$API_HEALTH"

echo ""
echo "üìã 3. –¢–ï–°–¢ –ë–´–°–¢–†–û–ì–û ENDPOINT'–ê:"
echo "-----------------------------------------------"
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –∫–∞–º–ø–∞–Ω–∏–π (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±—ã—Å—Ç—Ä—ã–º):"
CAMPAIGNS_RESPONSE=$(curl -s -w "HTTP_CODE:%{http_code}\nTIME:%{time_total}s" "$SERVER_URL/api/campaigns")
echo "–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –∫–∞–º–ø–∞–Ω–∏–π: $(echo "$CAMPAIGNS_RESPONSE" | grep 'TIME:' | cut -d':' -f2)"

# –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∫–∞–º–ø–∞–Ω–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
CAMPAIGN_ID=$(echo "$CAMPAIGNS_RESPONSE" | grep -o '"id":[0-9]*' | head -1 | cut -d':' -f2)
echo "üÜî –ù–∞–π–¥–µ–Ω–∞ –∫–∞–º–ø–∞–Ω–∏—è —Å ID: $CAMPAIGN_ID"

echo ""
echo "üß™ 4. –¢–ï–°–¢ –ó–ê–ì–†–£–ó–ö–ò –° –ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ú –§–ê–ô–õ–û–ú:"
echo "-----------------------------------------------"

# –°–æ–∑–¥–∞–µ–º –û–ß–ï–ù–¨ –º–∞–ª–µ–Ω—å–∫–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
TEST_FILE="/tmp/micro_test.mp3"
echo -e "\xFF\xFB\x90\x00" > "$TEST_FILE"  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π MP3 –∑–∞–≥–æ–ª–æ–≤–æ–∫
echo "üìÅ –°–æ–∑–¥–∞–Ω –º–∏–∫—Ä–æ-—Ñ–∞–π–ª: $(ls -la $TEST_FILE)"

if [ ! -z "$CAMPAIGN_ID" ]; then
    echo ""
    echo "üöÄ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –º–∏–∫—Ä–æ-—Ñ–∞–π–ª–∞ –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏ $CAMPAIGN_ID:"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ background –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤
    echo "üìä –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ª–æ–≥–æ–≤ –≤ —Ñ–æ–Ω–µ..."
    docker logs -f dialer_backend > /tmp/backend_logs_during_upload.log 2>&1 &
    LOGS_PID=$!
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –∫–æ—Ä–æ—Ç–∫–∏–º —Ç–∞–π–º–∞—É—Ç–æ–º
    MICRO_UPLOAD=$(timeout 10s curl -s -X POST \
        -F "audio=@$TEST_FILE" \
        -w "\nHTTP_CODE:%{http_code}\nTIME:%{time_total}s\nSIZE_UPLOAD:%{size_upload}\nSPEED_UPLOAD:%{speed_upload}" \
        "$SERVER_URL/api/campaigns/$CAMPAIGN_ID/audio" 2>&1)
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤
    sleep 2
    kill $LOGS_PID 2>/dev/null
    
    echo "–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –º–∏–∫—Ä–æ-—Ñ–∞–π–ª–∞:"
    echo "$MICRO_UPLOAD"
    
    echo ""
    echo "üìã –õ–æ–≥–∏ backend –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏:"
    tail -20 /tmp/backend_logs_during_upload.log 2>/dev/null || echo "‚ùì –õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    
    # –û—á–∏—Å—Ç–∫–∞
    rm -f "$TEST_FILE" /tmp/backend_logs_during_upload.log
else
    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–∞–º–ø–∞–Ω–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
fi

echo ""
echo "üîç 5. –ê–ù–ê–õ–ò–ó –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò MULTER:"
echo "-----------------------------------------------"
echo "üîç –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤:"
docker exec dialer_backend printenv | grep -E "(AUDIO|UPLOAD|MULTER|TIMEOUT)" || echo "‚ùì –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

echo ""
echo "üìä 6. –ê–ù–ê–õ–ò–ó –õ–û–ì–û–í –ù–ê –ü–†–ï–î–ú–ï–¢ –ó–ê–í–ò–°–ê–ù–ò–Ø:"
echo "-----------------------------------------------"
echo "üîç –û—à–∏–±–∫–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–æ–≥–∞—Ö:"
docker logs --tail 50 dialer_backend 2>&1 | grep -i -E "(error|timeout|hang|stuck|abort)" | tail -10 || echo "‚úÖ –û—à–∏–±–æ–∫ –∑–∞–≤–∏—Å–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

echo ""
echo "üîç –õ–æ–≥–∏ multer/upload –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 100 —Å—Ç—Ä–æ–∫:"
docker logs --tail 100 dialer_backend 2>&1 | grep -i -E "(multer|upload|audio)" | tail -10 || echo "‚ùì –õ–æ–≥–æ–≤ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

echo ""
echo "üíæ 7. –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•:"
echo "-----------------------------------------------"
echo "üîç –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:"
if docker exec dialer_postgres pg_isready -U dialer_user >/dev/null 2>&1; then
    echo "‚úÖ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã –∫–∞–º–ø–∞–Ω–∏–π
    echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã campaigns:"
    docker exec dialer_postgres psql -U dialer_user -d dialer_db -c "SELECT COUNT(*) as campaigns_count FROM campaigns;" 2>/dev/null || echo "‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ campaigns"
    
else
    echo "‚ùå PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!"
fi

echo ""
echo "üåê 8. –ü–†–û–í–ï–†–ö–ê –°–ï–¢–ï–í–û–ì–û –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø:"
echo "-----------------------------------------------"
echo "üîç Ping –º–µ–∂–¥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏:"
docker exec dialer_frontend ping -c 2 backend 2>/dev/null && echo "‚úÖ Frontend ‚Üí Backend OK" || echo "‚ùå Frontend ‚Üí Backend FAIL"
docker exec dialer_backend ping -c 2 postgres 2>/dev/null && echo "‚úÖ Backend ‚Üí Postgres OK" || echo "‚ùå Backend ‚Üí Postgres FAIL"

echo ""
echo "==============================================="
echo "üîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ"
echo "==============================================="

echo ""
echo "üìù –í—ã—è–≤–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞:"
echo "- –§–∞–π–ª –Ω–∞—á–∏–Ω–∞–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è (–ø—Ä–æ–≥—Ä–µ—Å—Å –¥–æ 27%)"
echo "- –ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–∞–π–º–∞—É—Ç —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥"
echo "- Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å"

echo ""
echo "üöÄ –®–∞–≥–∏ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"

echo ""
echo "1Ô∏è‚É£ –£–í–ï–õ–ò–ß–ï–ù–ò–ï –¢–ê–ô–ú–ê–£–¢–û–í:"
echo "   # –í docker-compose.yml –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
echo "   - REQUEST_TIMEOUT=120000"
echo "   - BODY_PARSER_LIMIT=50mb"

echo ""
echo "2Ô∏è‚É£ –ü–ï–†–ï–ó–ê–ü–£–°–ö –° –û–ß–ò–°–¢–ö–û–ô:"
echo "   docker-compose down"
echo "   docker system prune -f"
echo "   docker-compose up -d --build"

echo ""
echo "3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –†–ï–°–£–†–°–û–í –°–ï–†–í–ï–†–ê:"
echo "   free -h    # –ü—Ä–æ–≤–µ—Ä–∫–∞ RAM"
echo "   df -h      # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ"
echo "   top        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ CPU"

echo ""
echo "4Ô∏è‚É£ –ú–û–ù–ò–¢–û–†–ò–ù–ì –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò:"
echo "   # –í –æ–¥–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ:"
echo "   docker logs -f dialer_backend | grep -i audio"
echo "   # –í –¥—Ä—É–≥–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª"

echo ""
echo "5Ô∏è‚É£ –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–û–ï –†–ï–®–ï–ù–ò–ï:"
echo "   # –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π endpoint:"
echo "   curl -X POST -F \"audio=@your_file.mp3\" $SERVER_URL/api/audio/upload"

echo ""
echo "==============================================="
echo "‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¢–ê–ô–ú–ê–£–¢–ê –ó–ê–í–ï–†–®–ï–ù–ê"
echo "===============================================" 
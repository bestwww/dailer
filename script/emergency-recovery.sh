#!/bin/bash

# üö® –°–∫—Ä–∏–ø—Ç —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–¥–æ–∑–≤–æ–Ω–∞
# –ê–≤—Ç–æ—Ä: AI Assistant
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ë—ã—Å—Ç—Ä–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —É–ø–∞–≤—à–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./emergency-recovery.sh [–¥–µ–π—Å—Ç–≤–∏–µ]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
COMPOSE_FILE="docker-compose.yml"
PRODUCTION_COMPOSE_FILE="docker-compose.production.yml"
BACKUP_DIR="./backups"
LOG_DIR="./emergency_logs"
SERVICES=("dialer_backend" "dialer_postgres" "dialer_redis" "dialer_freeswitch" "dialer_frontend")

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p "$BACKUP_DIR" "$LOG_DIR"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
log() {
    local level=$1
    shift
    local message="$*"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    case $level in
        INFO)  echo -e "${GREEN}[$timestamp] INFO:${NC} $message" ;;
        WARN)  echo -e "${YELLOW}[$timestamp] WARN:${NC} $message" ;;
        ERROR) echo -e "${RED}[$timestamp] ERROR:${NC} $message" ;;
        DEBUG) echo -e "${BLUE}[$timestamp] DEBUG:${NC} $message" ;;
        TITLE) echo -e "${BOLD}${BLUE}[$timestamp]${NC} ${BOLD}$message${NC}" ;;
        *)     echo "[$timestamp] $level: $message" ;;
    esac
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –≤–∞–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
create_backup() {
    log TITLE "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
    
    local backup_timestamp=$(date +%Y%m%d_%H%M%S)
    local backup_path="$BACKUP_DIR/emergency_backup_$backup_timestamp"
    
    mkdir -p "$backup_path"
    
    # –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if docker ps --filter "name=dialer_postgres" --filter "status=running" | grep -q dialer_postgres; then
        log INFO "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ PostgreSQL..."
        docker exec dialer_postgres pg_dump -U dialer_user -d dialer_db > "$backup_path/postgres_backup.sql" || log WARN "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ë–î"
    fi
    
    # –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è Redis
    if docker ps --filter "name=dialer_redis" --filter "status=running" | grep -q dialer_redis; then
        log INFO "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ Redis..."
        docker exec dialer_redis redis-cli -a redis_password_123 --rdb - > "$backup_path/redis_backup.rdb" 2>/dev/null || log WARN "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é Redis"
    fi
    
    # –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
    log INFO "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."
    cp -r ./freeswitch/conf "$backup_path/" 2>/dev/null || log WARN "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é FreeSWITCH"
    cp .env "$backup_path/" 2>/dev/null || log WARN "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    cp docker-compose.yml "$backup_path/" 2>/dev/null || log WARN "docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    
    log INFO "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $backup_path"
    echo "$backup_path"
}

# –°–±–æ—Ä –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º
collect_pre_recovery_info() {
    log TITLE "üîç –°–±–æ—Ä –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏..."
    
    local info_file="$LOG_DIR/pre_recovery_$(date +%Y%m%d_%H%M%S).log"
    
    {
        echo "=== PRE-RECOVERY DIAGNOSTIC INFO ==="
        echo "Timestamp: $(date)"
        echo "User: $(whoami)"
        echo "Working directory: $(pwd)"
        echo ""
        
        echo "=== SYSTEM RESOURCES ==="
        free -h
        df -h
        echo ""
        
        echo "=== DOCKER STATUS ==="
        docker version 2>/dev/null || echo "Docker –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        docker ps -a 2>/dev/null || echo "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        echo ""
        
        echo "=== SERVICE STATUS ==="
        for service in "${SERVICES[@]}"; do
            echo "--- $service ---"
            if docker ps --filter "name=$service" --format "{{.Names}}: {{.Status}}" | grep -q "$service"; then
                docker ps --filter "name=$service" --format "{{.Names}}: {{.Status}}"
                # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤
                echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
                docker logs "$service" --tail=20 2>&1 | head -20
            else
                echo "$service: –ö–û–ù–¢–ï–ô–ù–ï–† –ù–ï –ù–ê–ô–î–ï–ù"
            fi
            echo ""
        done
        
        echo "=== NETWORK STATUS ==="
        docker network ls 2>/dev/null || echo "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ç–µ–π"
        netstat -tuln | grep -E "(3000|5432|6379|5060|8021)" 2>/dev/null || echo "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Ä—Ç—ã"
        
    } > "$info_file"
    
    log INFO "‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: $info_file"
}

# –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º
quick_diagnosis() {
    log TITLE "ü©∫ –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º..."
    
    local issues=()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    if ! docker --version >/dev/null 2>&1; then
        issues+=("Docker –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
    local disk_usage=$(df / | tail -1 | awk '{print $5}' | sed 's/%//')
    if [ "$disk_usage" -gt 90 ]; then
        issues+=("–ú–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ: ${disk_usage}%")
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
    local mem_available=$(free | grep Mem | awk '{print ($7/$2) * 100.0}')
    if (( $(echo "$mem_available < 10" | bc -l) )); then
        issues+=("–ú–∞–ª–æ —Å–≤–æ–±–æ–¥–Ω–æ–π –ø–∞–º—è—Ç–∏: ${mem_available}%")
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    local down_services=()
    for service in "${SERVICES[@]}"; do
        if ! docker ps --filter "name=$service" --filter "status=running" | grep -q "$service"; then
            down_services+=("$service")
        fi
    done
    
    if [ ${#down_services[@]} -gt 0 ]; then
        issues+=("–ù–µ—Ä–∞–±–æ—Ç–∞—é—â–∏–µ —Å–µ—Ä–≤–∏—Å—ã: ${down_services[*]}")
    fi
    
    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    if [ ${#issues[@]} -eq 0 ]; then
        log INFO "‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        return 0
    else
        log WARN "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:"
        for issue in "${issues[@]}"; do
            log WARN "  - $issue"
        done
        return 1
    fi
}

# –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º
cleanup_resources() {
    log TITLE "üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
    log INFO "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose down 2>/dev/null || log WARN "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ docker-compose"
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    for service in "${SERVICES[@]}"; do
        if docker ps -q --filter "name=$service" | grep -q .; then
            log INFO "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ $service..."
            docker stop "$service" 2>/dev/null || true
            docker rm "$service" 2>/dev/null || true
        fi
    done
    
    # –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤ –∏ volumes
    log INFO "–û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
    docker system prune -f 2>/dev/null || log WARN "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ—á–∏—Å—Ç–∫—É Docker"
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –æ–±–æ—Ä–≤–∞–Ω–Ω—ã—Ö volumes (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)
    # docker volume prune -f 2>/dev/null || log WARN "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å volumes"
    
    log INFO "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
fix_permissions() {
    log TITLE "üîê –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    
    # –ü—Ä–∞–≤–∞ –Ω–∞ –ø–∞–ø–∫—É audio
    if [ -d "./audio" ]; then
        log INFO "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–ª—è –ø–∞–ø–∫–∏ audio..."
        sudo chown -R 1001:1001 ./audio/ 2>/dev/null || log WARN "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ audio/"
        sudo chmod -R 755 ./audio/ 2>/dev/null || log WARN "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∞ audio/"
    fi
    
    # –ü—Ä–∞–≤–∞ –Ω–∞ –ø–∞–ø–∫—É –ª–æ–≥–æ–≤
    if [ -d "./backend/logs" ]; then
        log INFO "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–ª—è –ø–∞–ø–∫–∏ –ª–æ–≥–æ–≤..."
        sudo chown -R 1001:1001 ./backend/logs/ 2>/dev/null || log WARN "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ logs/"
        sudo chmod -R 755 ./backend/logs/ 2>/dev/null || log WARN "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∞ logs/"
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p ./audio ./backend/logs 2>/dev/null || true
    
    log INFO "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
}

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
restore_services() {
    log TITLE "üöÄ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    local compose_file="$COMPOSE_FILE"
    
    # –í—ã–±–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if [ -f "$PRODUCTION_COMPOSE_FILE" ]; then
        log INFO "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
        compose_file="$PRODUCTION_COMPOSE_FILE"
    fi
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    log INFO "–ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ Redis..."
    docker-compose -f "$compose_file" up -d postgres redis
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–î
    log INFO "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
    local retries=0
    while [ $retries -lt 30 ]; do
        if docker exec dialer_postgres pg_isready -U dialer_user -d dialer_db >/dev/null 2>&1; then
            log INFO "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤"
            break
        fi
        sleep 2
        ((retries++))
    done
    
    if [ $retries -eq 30 ]; then
        log ERROR "‚ùå PostgreSQL –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞ 60 —Å–µ–∫—É–Ω–¥"
        return 1
    fi
    
    # –ó–∞–ø—É—Å–∫ FreeSWITCH
    log INFO "–ó–∞–ø—É—Å–∫ FreeSWITCH..."
    docker-compose -f "$compose_file" up -d freeswitch
    sleep 10  # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
    
    # –ó–∞–ø—É—Å–∫ backend
    log INFO "–ó–∞–ø—É—Å–∫ backend..."
    docker-compose -f "$compose_file" up -d backend
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ backend
    log INFO "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ backend..."
    retries=0
    while [ $retries -lt 30 ]; do
        if curl -f http://localhost:3000/health >/dev/null 2>&1; then
            log INFO "‚úÖ Backend –≥–æ—Ç–æ–≤"
            break
        fi
        sleep 2
        ((retries++))
    done
    
    # –ó–∞–ø—É—Å–∫ frontend
    log INFO "–ó–∞–ø—É—Å–∫ frontend..."
    docker-compose -f "$compose_file" up -d frontend
    
    log INFO "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
verify_recovery() {
    log TITLE "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è..."
    
    local all_ok=true
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
    for service in "${SERVICES[@]}"; do
        if docker ps --filter "name=$service" --filter "status=running" | grep -q "$service"; then
            log INFO "‚úÖ $service - —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            log ERROR "‚ùå $service - –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
            all_ok=false
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ health checks
    log INFO "–ü—Ä–æ–≤–µ—Ä–∫–∞ health checks..."
    sleep 30  # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –ø—Ä–æ–≥—Ä–µ–≤
    
    local unhealthy_services=()
    for service in "${SERVICES[@]}"; do
        local health=$(docker inspect --format='{{.State.Health.Status}}' "$service" 2>/dev/null)
        if [ "$health" = "unhealthy" ]; then
            unhealthy_services+=("$service")
        fi
    done
    
    if [ ${#unhealthy_services[@]} -gt 0 ]; then
        log WARN "‚ö†Ô∏è –°–µ—Ä–≤–∏—Å—ã —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏ health check: ${unhealthy_services[*]}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ endpoints
    if curl -f http://localhost:3000/health >/dev/null 2>&1; then
        log INFO "‚úÖ Backend API –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        log ERROR "‚ùå Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        all_ok=false
    fi
    
    if curl -f http://localhost:5173 >/dev/null 2>&1; then
        log INFO "‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        log ERROR "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        all_ok=false
    fi
    
    if $all_ok; then
        log INFO "üéâ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!"
        return 0
    else
        log ERROR "‚ùå –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏"
        return 1
    fi
}

# –ü–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
full_recovery() {
    log TITLE "üö® –ü–û–õ–ù–û–ï –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï"
    log INFO "–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ–¥—É—Ä—É –ø–æ–ª–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã..."
    
    # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏–π
    collect_pre_recovery_info
    create_backup
    quick_diagnosis
    cleanup_resources
    fix_permissions
    restore_services
    verify_recovery
    
    if [ $? -eq 0 ]; then
        log TITLE "üéâ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!"
        log INFO "–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ."
    else
        log TITLE "‚ö†Ô∏è –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –° –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø–ú–ò"
        log INFO "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ."
        log INFO "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
    fi
}

# –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ —É–ø–∞–≤—à–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
quick_restart() {
    log TITLE "‚ö° –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —É–ø–∞–≤—à–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    
    local down_services=()
    
    # –ù–∞—Ö–æ–¥–∏–º —É–ø–∞–≤—à–∏–µ —Å–µ—Ä–≤–∏—Å—ã
    for service in "${SERVICES[@]}"; do
        if ! docker ps --filter "name=$service" --filter "status=running" | grep -q "$service"; then
            down_services+=("$service")
        fi
    done
    
    if [ ${#down_services[@]} -eq 0 ]; then
        log INFO "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è"
        return 0
    fi
    
    log INFO "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Ä–∞–±–æ—Ç–∞—é—â–∏–µ —Å–µ—Ä–≤–∏—Å—ã: ${down_services[*]}"
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ —É–ø–∞–≤—à–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    for service in "${down_services[@]}"; do
        local service_name=${service#dialer_}  # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å dialer_
        log INFO "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ $service_name..."
        docker-compose restart "$service_name" 2>/dev/null || log WARN "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å $service_name"
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    sleep 10
    local still_down=()
    for service in "${down_services[@]}"; do
        if ! docker ps --filter "name=$service" --filter "status=running" | grep -q "$service"; then
            still_down+=("$service")
        fi
    done
    
    if [ ${#still_down[@]} -eq 0 ]; then
        log INFO "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
    else
        log WARN "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å: ${still_down[*]}"
        log INFO "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏
show_help() {
    cat << EOF
üö® –°–∫—Ä–∏–ø—Ç —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–¥–æ–∑–≤–æ–Ω–∞

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–¥–µ–π—Å—Ç–≤–∏–µ]

–î–µ–π—Å—Ç–≤–∏—è:
  full        - –ø–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
  quick       - –±—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ —É–ø–∞–≤—à–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
  diagnosis   - —Ç–æ–ª—å–∫–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–µ–∑ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
  backup      - —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
  cleanup     - –æ—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ Docker
  permissions - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
  help        - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  $0                    # –ü–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
  $0 full               # –¢–æ –∂–µ —Å–∞–º–æ–µ
  $0 quick              # –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
  $0 diagnosis          # –¢–æ–ª—å–∫–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞

‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ü–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–∞ –≤—Ä–µ–º—è –ø—Ä–æ—Ü–µ–¥—É—Ä—ã!

EOF
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local action="${1:-full}"
    
    case "$action" in
        "full"|"")
            full_recovery
            ;;
        "quick")
            quick_diagnosis
            quick_restart
            ;;
        "diagnosis")
            collect_pre_recovery_info
            quick_diagnosis
            ;;
        "backup")
            create_backup
            ;;
        "cleanup")
            cleanup_resources
            ;;
        "permissions")
            fix_permissions
            ;;
        "help"|"-h"|"--help")
            show_help
            ;;
        *)
            log ERROR "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: $action"
            show_help
            exit 1
            ;;
    esac
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
check_sudo() {
    if [[ $EUID -ne 0 ]] && ! sudo -n true 2>/dev/null; then
        log WARN "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –º–æ–≥—É—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∞ sudo"
        log INFO "–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å..."
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'log INFO "–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è..."; exit 1' SIGINT SIGTERM

# –ó–∞–ø—É—Å–∫
log TITLE "üö® –°–∏—Å—Ç–µ–º–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–¥–æ–∑–≤–æ–Ω–∞"
check_sudo
main "$@" 
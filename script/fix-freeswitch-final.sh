#!/bin/bash

# üîß –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ FreeSWITCH
# –ê–≤—Ç–æ—Ä: AI Assistant
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –∏ volumes
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./fix-freeswitch-final.sh

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
FREESWITCH_CONTAINER="dialer_freeswitch"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã Docker Compose
DOCKER_COMPOSE_CMD=""
if command -v docker-compose >/dev/null 2>&1; then
    DOCKER_COMPOSE_CMD="docker-compose"
elif docker compose version >/dev/null 2>&1; then
    DOCKER_COMPOSE_CMD="docker compose"
else
    echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    local level=$1
    shift
    local message="$*"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    case $level in
        INFO)  echo -e "${GREEN}[$timestamp] INFO:${NC} $message" ;;
        WARN)  echo -e "${YELLOW}[$timestamp] WARN:${NC} $message" ;;
        ERROR) echo -e "${RED}[$timestamp] ERROR:${NC} $message" ;;
        DEBUG) echo -e "${BLUE}[$timestamp] DEBUG:${NC} $message" ;;
        TITLE) echo -e "${BOLD}${BLUE}[$timestamp]${NC} ${BOLD}$message${NC}" ;;
        SUCCESS) echo -e "${BOLD}${GREEN}[$timestamp] SUCCESS:${NC} ${BOLD}$message${NC}" ;;
        *)     echo "[$timestamp] $level: $message" ;;
    esac
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ xmllint –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
install_xmllint() {
    log TITLE "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ xmllint..."
    
    if command -v xmllint >/dev/null 2>&1; then
        log INFO "‚úÖ xmllint —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    fi
    
    log INFO "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ xmllint..."
    if command -v apt-get >/dev/null 2>&1; then
        apt-get update -qq >/dev/null 2>&1 || true
        apt-get install -y libxml2-utils >/dev/null 2>&1 || true
    elif command -v yum >/dev/null 2>&1; then
        yum install -y libxml2 >/dev/null 2>&1 || true
    fi
    
    if command -v xmllint >/dev/null 2>&1; then
        log INFO "‚úÖ xmllint —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log WARN "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å xmllint, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ XML"
    fi
}

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è volumes
check_volume_mounting() {
    log TITLE "üìÅ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è volumes..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞
    if docker exec "$FREESWITCH_CONTAINER" ls -la /usr/local/freeswitch/conf >/dev/null 2>&1; then
        log INFO "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è /usr/local/freeswitch/conf –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
        
        # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        local conf_files=$(docker exec "$FREESWITCH_CONTAINER" ls -la /usr/local/freeswitch/conf/ 2>/dev/null)
        log DEBUG "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ /usr/local/freeswitch/conf/:"
        echo "$conf_files" | while read -r line; do
            log DEBUG "  $line"
        done
    else
        log ERROR "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è /usr/local/freeswitch/conf –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    local config_files=("freeswitch.xml" "vars.xml" "autoload_configs/sofia.conf.xml")
    
    for config_file in "${config_files[@]}"; do
        if docker exec "$FREESWITCH_CONTAINER" test -f "/usr/local/freeswitch/conf/$config_file"; then
            log INFO "‚úÖ $config_file –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
            local file_perms=$(docker exec "$FREESWITCH_CONTAINER" ls -la "/usr/local/freeswitch/conf/$config_file" 2>/dev/null)
            log DEBUG "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ $config_file: $file_perms"
        else
            log ERROR "‚ùå $config_file –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
        fi
    done
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ FreeSWITCH –º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
check_freeswitch_config_access() {
    log TITLE "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ FreeSWITCH –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–∂–µ—Ç –ª–∏ FreeSWITCH –ø—Ä–æ—á–∏—Ç–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
    local main_config_test=$(docker exec "$FREESWITCH_CONTAINER" fs_cli -x "xml_locate configuration configuration" 2>/dev/null)
    
    if echo "$main_config_test" | grep -q "<?xml"; then
        log INFO "‚úÖ FreeSWITCH –º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
    else
        log ERROR "‚ùå FreeSWITCH –ù–ï –º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
        log DEBUG "–†–µ–∑—É–ª—å—Ç–∞—Ç: $main_config_test"
        return 1
    fi
    
    # –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Sofia –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    local sofia_config_test=$(docker exec "$FREESWITCH_CONTAINER" fs_cli -x "xml_locate configuration sofia.conf" 2>/dev/null)
    
    if echo "$sofia_config_test" | grep -q "sofia.conf"; then
        log INFO "‚úÖ FreeSWITCH –º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Sofia"
    else
        log ERROR "‚ùå FreeSWITCH –ù–ï –º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Sofia"
        log DEBUG "–†–µ–∑—É–ª—å—Ç–∞—Ç: $sofia_config_test"
        return 1
    fi
    
    return 0
}

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä—è–º–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
create_config_in_container() {
    log TITLE "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä—è–º–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
    
    # –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é sofia.conf.xml –ø—Ä—è–º–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    docker exec "$FREESWITCH_CONTAINER" bash -c 'cat > /usr/local/freeswitch/conf/autoload_configs/sofia.conf.xml << '\''EOF'\''
<?xml version="1.0" encoding="UTF-8"?>
<configuration name="sofia.conf" description="Sofia Endpoint">
  <global_settings>
    <param name="log-level" value="0"/>
    <param name="auto-restart" value="false"/>
    <param name="debug-presence" value="0"/>
  </global_settings>

  <profiles>
    <profile name="external">
      <gateways>
        <gateway name="sip_trunk">
          <param name="proxy" value="62.141.121.197:5070"/>
          <param name="realm" value="62.141.121.197"/>
          <param name="register" value="false"/>
          <param name="username" value=""/>
          <param name="password" value=""/>
          <param name="from-user" value="freeswitch"/>
          <param name="from-domain" value="62.141.121.197"/>
          <param name="retry-seconds" value="30"/>
          <param name="caller-id-in-from" value="true"/>
          <param name="ping" value="25"/>
        </gateway>
      </gateways>
      
      <settings>
        <param name="context" value="public"/>
        <param name="rfc2833-pt" value="101"/>
        <param name="sip-port" value="5060"/>
        <param name="dialplan" value="XML"/>
        <param name="rtp-ip" value="auto"/>
        <param name="sip-ip" value="auto"/>
        <param name="ext-rtp-ip" value="auto"/>
        <param name="ext-sip-ip" value="auto"/>
        <param name="rtp-timeout-sec" value="300"/>
        <param name="rtp-hold-timeout-sec" value="1800"/>
        <param name="inbound-codec-prefs" value="PCMU,PCMA,GSM"/>
        <param name="outbound-codec-prefs" value="PCMU,PCMA,GSM"/>
        <param name="auth-calls" value="false"/>
        <param name="dtmf-duration" value="2000"/>
        <param name="dtmf-type" value="rfc2833"/>
        <param name="session-timeout" value="1800"/>
        <param name="caller-id-type" value="rpid"/>
        <param name="aggressive-nat-detection" value="true"/>
        <param name="max-proceeding" value="1000"/>
      </settings>
    </profile>
  </profiles>
</configuration>
EOF'
    
    log INFO "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Sofia —Å–æ–∑–¥–∞–Ω–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–ª—Å—è
    if docker exec "$FREESWITCH_CONTAINER" test -f "/usr/local/freeswitch/conf/autoload_configs/sofia.conf.xml"; then
        log INFO "‚úÖ –§–∞–π–ª sofia.conf.xml –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
        
        # –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        local file_size=$(docker exec "$FREESWITCH_CONTAINER" wc -c < "/usr/local/freeswitch/conf/autoload_configs/sofia.conf.xml")
        log DEBUG "–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $file_size –±–∞–π—Ç"
    else
        log ERROR "‚ùå –§–∞–π–ª sofia.conf.xml –ù–ï —Å–æ–∑–¥–∞–ª—Å—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
        return 1
    fi
}

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
fix_permissions_in_container() {
    log TITLE "üîê –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
    
    # –ò–∑–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è FreeSWITCH
    docker exec "$FREESWITCH_CONTAINER" chown -R freeswitch:freeswitch /usr/local/freeswitch/conf/ 2>/dev/null || true
    docker exec "$FREESWITCH_CONTAINER" chmod -R 644 /usr/local/freeswitch/conf/ 2>/dev/null || true
    docker exec "$FREESWITCH_CONTAINER" chmod 755 /usr/local/freeswitch/conf/ 2>/dev/null || true
    
    log INFO "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
}

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ Sofia —Å –æ—Ç–ª–∞–¥–∫–æ–π
force_sofia_reload() {
    log TITLE "üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ Sofia..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ Sofia
    docker exec "$FREESWITCH_CONTAINER" fs_cli -x "sofia profile external stop" >/dev/null 2>&1 || true
    docker exec "$FREESWITCH_CONTAINER" fs_cli -x "unload mod_sofia" >/dev/null 2>&1 || true
    
    sleep 3
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å XML
    docker exec "$FREESWITCH_CONTAINER" fs_cli -x "reloadxml"
    
    sleep 2
    
    # –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å Sofia –∑–∞–Ω–æ–≤–æ
    docker exec "$FREESWITCH_CONTAINER" fs_cli -x "load mod_sofia"
    
    sleep 5
    
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å external
    docker exec "$FREESWITCH_CONTAINER" fs_cli -x "sofia profile external start"
    
    sleep 3
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    local sofia_status=$(docker exec "$FREESWITCH_CONTAINER" fs_cli -x "sofia status" 2>/dev/null)
    
    log DEBUG "Sofia Status –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏:"
    echo "$sofia_status" | while read -r line; do
        log DEBUG "  $line"
    done
    
    if echo "$sofia_status" | grep -q "external"; then
        log SUCCESS "‚úÖ –ü—Ä–æ—Ñ–∏–ª—å external –∑–∞–ø—É—â–µ–Ω!"
        return 0
    else
        log ERROR "‚ùå –ü—Ä–æ—Ñ–∏–ª—å external –≤—Å–µ –µ—â–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ gateway
test_gateway() {
    log TITLE "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ gateway..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ gateway
    local gateway_status=$(docker exec "$FREESWITCH_CONTAINER" fs_cli -x "sofia status gateway sip_trunk" 2>/dev/null)
    
    if echo "$gateway_status" | grep -q "sip_trunk"; then
        log SUCCESS "‚úÖ Gateway sip_trunk –Ω–∞–π–¥–µ–Ω!"
        log DEBUG "Gateway Status:"
        echo "$gateway_status" | while read -r line; do
            log DEBUG "  $line"
        done
        
        # –ü–æ–ø—ã—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–≤–æ–Ω–∫–∞
        log INFO "–ü–æ–ø—ã—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–≤–æ–Ω–∫–∞..."
        local call_result=$(docker exec "$FREESWITCH_CONTAINER" fs_cli -x "originate {call_timeout=5}sofia/gateway/sip_trunk/79001234567 &echo" 2>&1)
        
        if echo "$call_result" | grep -qi "INVALID_GATEWAY"; then
            log WARN "‚ö†Ô∏è Gateway –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–≤–æ–Ω–∫–æ–≤"
        elif echo "$call_result" | grep -qi "success\|progress\|ringing"; then
            log SUCCESS "‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–≤–æ–Ω–æ–∫ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
        else
            log DEBUG "–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–≤–æ–Ω–∫–∞: $call_result"
        fi
        
        return 0
    else
        log ERROR "‚ùå Gateway sip_trunk –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main_fix() {
    log TITLE "üîß –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï FREESWITCH"
    
    local step=1
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ xmllint
    log TITLE "–®–∞–≥ $((step++)): –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"
    install_xmllint
    
    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ volumes
    log TITLE "–®–∞–≥ $((step++)): –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
    if ! check_volume_mounting; then
        log ERROR "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    log TITLE "–®–∞–≥ $((step++)): –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    if check_freeswitch_config_access; then
        log INFO "FreeSWITCH –º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
    else
        log WARN "FreeSWITCH –Ω–µ –º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º..."
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    log TITLE "–®–∞–≥ $((step++)): –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
    create_config_in_container
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    log TITLE "–®–∞–≥ $((step++)): –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"
    fix_permissions_in_container
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ Sofia
    log TITLE "–®–∞–≥ $((step++)): –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ Sofia"
    if force_sofia_reload; then
        log SUCCESS "Sofia —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞!"
    else
        log ERROR "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å Sofia"
        return 1
    fi
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ gateway
    log TITLE "–®–∞–≥ $((step++)): –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ gateway"
    if test_gateway; then
        log SUCCESS "üéâ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢! SIP —Ç—Ä–∞–Ω–∫ –≥–æ—Ç–æ–≤!"
        return 0
    else
        log ERROR "Gateway –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ Sofia –∑–∞–ø—É—â–µ–Ω–∞"
        log INFO "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å ./test-sip-trunk.sh test —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç"
        return 0
    fi
}

# –ó–∞–ø—É—Å–∫
log TITLE "üîß –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ FreeSWITCH"
log INFO "Docker Compose –∫–æ–º–∞–Ω–¥–∞: $DOCKER_COMPOSE_CMD"
main_fix 
#!/bin/bash

# üî¢ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï DTMF –° –î–ï–¢–ê–õ–¨–ù–û–ô –î–ò–ê–ì–ù–û–°–¢–ò–ö–û–ô
# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É DTMF –¥–µ—Ç–µ–∫—Ü–∏–∏ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

CONTAINER_NAME="freeswitch-test"
PHONE_NUMBER="79206054020"
LOG_FILE="/tmp/freeswitch_test.log"

echo "üî¢ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï DTMF –° –î–ï–¢–ê–õ–¨–ù–û–ô –î–ò–ê–ì–ù–û–°–¢–ò–ö–û–ô"
echo "==================================================="
echo ""

echo "üéØ –¶–ï–õ–¨: –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å DTMF –¥–µ—Ç–µ–∫—Ü–∏—é –∏ –Ω–∞–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã"
echo "üìû –ù–û–ú–ï–†: $PHONE_NUMBER"
echo "üìÑ –õ–û–ì: $LOG_FILE"
echo ""

# –≠–¢–ê–ü 1: –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "üìã –≠–¢–ê–ü 1: –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê"
echo "=================================="

echo ""
echo "1. üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å FreeSWITCH..."
STATUS=$(docker exec "$CONTAINER_NAME" fs_cli -x "status" 2>&1)
echo "FreeSWITCH —Å—Ç–∞—Ç—É—Å: $(echo "$STATUS" | head -1)"

echo ""
echo "2. üìä –†–∞–∑–º–µ—Ä —Ç–µ–∫—É—â–µ–≥–æ –ª–æ–≥–∞..."
if docker exec "$CONTAINER_NAME" test -f "$LOG_FILE"; then
    CURRENT_SIZE=$(docker exec "$CONTAINER_NAME" wc -l "$LOG_FILE" | cut -d' ' -f1)
    echo "–¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä –ª–æ–≥–∞: $CURRENT_SIZE —Å—Ç—Ä–æ–∫"
else
    echo "‚ùå –§–∞–π–ª –ª–æ–≥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    exit 1
fi

echo ""
echo "3. üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–≤–æ–Ω–∫–∏..."
ACTIVE_CALLS=$(docker exec "$CONTAINER_NAME" fs_cli -x "show calls" 2>&1)
echo "–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–≤–æ–Ω–∫–∏:"
echo "$ACTIVE_CALLS"

# –≠–¢–ê–ü 2: –û—á–∏—Å—Ç–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
echo ""
echo "üìã –≠–¢–ê–ü 2: –ü–û–î–ì–û–¢–û–í–ö–ê –ß–ò–°–¢–û–ì–û –¢–ï–°–¢–ê"
echo "=================================="

echo ""
echo "1. üóëÔ∏è  –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–≤–æ–Ω–∫–∏..."
docker exec "$CONTAINER_NAME" fs_cli -x "hupall MANAGER_REQUEST" > /dev/null 2>&1

echo ""
echo "2. üìÑ –°–æ–∑–¥–∞–µ–º –º–∞—Ä–∫–µ—Ä –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∞ –≤ –ª–æ–≥–µ..."
docker exec "$CONTAINER_NAME" fs_cli -x "log CRIT ==============================================="
docker exec "$CONTAINER_NAME" fs_cli -x "log CRIT === –ù–ê–ß–ê–õ–û DTMF –¢–ï–°–¢–ê $(date) ==="
docker exec "$CONTAINER_NAME" fs_cli -x "log CRIT ==============================================="

echo ""
echo "3. üìä –§–∏–∫—Å–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ª–æ–≥–∞..."
START_SIZE=$(docker exec "$CONTAINER_NAME" wc -l "$LOG_FILE" | cut -d' ' -f1)
echo "–†–∞–∑–º–µ—Ä –ª–æ–≥–∞ –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–æ–º: $START_SIZE —Å—Ç—Ä–æ–∫"

# –≠–¢–ê–ü 3: –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –∑–≤–æ–Ω–∫–∞
echo ""
echo "üìã –≠–¢–ê–ü 3: –ó–ê–ü–£–°–ö –¢–ï–°–¢–ê"
echo "====================="

echo ""
echo "üîß –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –¢–ï–°–¢–ê:"
echo "1. ‚è∞ –î–æ–∂–¥–∏—Ç–µ—Å—å –∫–æ–≥–¥–∞ –∑–≤–æ–Ω–æ–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è (—É—Å–ª—ã—à–∏—Ç–µ —Ç–æ–Ω—ã)"
echo "2. üî¢ –ù–∞–∂–º–∏—Ç–µ —Ü–∏—Ñ—Ä—É '1' –ù–ï–°–ö–û–õ–¨–ö–û –†–ê–ó"
echo "3. ‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ 10 —Å–µ–∫—É–Ω–¥"
echo "4. üî¢ –ù–∞–∂–º–∏—Ç–µ —Ü–∏—Ñ—Ä—É '2' –ù–ï–°–ö–û–õ–¨–ö–û –†–ê–ó"
echo "5. ‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â–µ 10 —Å–µ–∫—É–Ω–¥"
echo "6. üìû –ü–æ–ª–æ–∂–∏—Ç–µ —Ç—Ä—É–±–∫—É –∏–ª–∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"
echo ""

echo "üöÄ –ó–ê–ü–£–°–ö–ê–ï–ú –¢–ï–°–¢ –ß–ï–†–ï–ó 5 –°–ï–ö–£–ù–î..."
sleep 5

echo ""
echo "üìû –ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º –∑–≤–æ–Ω–æ–∫..."
CALL_UUID=$(docker exec "$CONTAINER_NAME" fs_cli -x "originate sofia/gateway/sip_trunk/$PHONE_NUMBER 1201 XML default" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–∑–æ–≤–∞: $CALL_UUID"

# –ò–∑–≤–ª–µ–∫–∞–µ–º UUID –∏–∑ –æ—Ç–≤–µ—Ç–∞ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
if [[ "$CALL_UUID" == *"+OK"* ]]; then
    UUID=$(echo "$CALL_UUID" | grep -oE '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}')
    if [[ -n "$UUID" ]]; then
        echo "UUID –∑–≤–æ–Ω–∫–∞: $UUID"
    fi
fi

echo ""
echo "‚è∞ –¢–ï–°–¢ –ê–ö–¢–ò–í–ï–ù! –û—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –∑–≤–æ–Ω–æ–∫ –∏ –Ω–∞–∂–∏–º–∞–π—Ç–µ —Ü–∏—Ñ—Ä—ã!"
echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±—É–¥–µ—Ç –¥–ª–∏—Ç—å—Å—è 90 —Å–µ–∫—É–Ω–¥..."
echo ""

# –≠–¢–ê–ü 4: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
echo "üìã –≠–¢–ê–ü 4: –ú–û–ù–ò–¢–û–†–ò–ù–ì DTMF –°–û–ë–´–¢–ò–ô"
echo "================================="

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞ 90 —Å–µ–∫—É–Ω–¥
timeout 90s docker exec "$CONTAINER_NAME" sh -c "
tail -f $LOG_FILE | while read line; do
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ö–†–ò–¢–ò–ß–ï–°–ö–ò –≤–∞–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è DTMF
    if echo \"\$line\" | grep -qE '(CRIT|DTMF|—á–∏—Ç–∞—Ç—å|choice|–ü–û–õ–£–ß–ï–ù–û|–°–ë–û–†|digit|tone|read|execute|–û–ë–†–ê–ë–û–¢–ß–ò–ö|–í–ï–ë–•–£–ö|hangup|transfer)'; then
        echo \"\$line\"
    fi
done
" || echo "‚è∞ –í—Ä–µ–º—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏—Å—Ç–µ–∫–ª–æ"

# –≠–¢–ê–ü 5: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞ –∏ –∞–Ω–∞–ª–∏–∑
echo ""
echo "üìã –≠–¢–ê–ü 5: –ó–ê–í–ï–†–®–ï–ù–ò–ï –ò –ê–ù–ê–õ–ò–ó"
echo "============================"

echo ""
echo "1. üõë –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∑–≤–æ–Ω–∫–∏..."
docker exec "$CONTAINER_NAME" fs_cli -x "hupall MANAGER_REQUEST" > /dev/null 2>&1

echo ""
echo "2. üìÑ –ú–∞—Ä–∫–∏—Ä—É–µ–º –∫–æ–Ω–µ—Ü —Ç–µ—Å—Ç–∞..."
docker exec "$CONTAINER_NAME" fs_cli -x "log CRIT ==============================================="
docker exec "$CONTAINER_NAME" fs_cli -x "log CRIT === –ö–û–ù–ï–¶ DTMF –¢–ï–°–¢–ê $(date) ==="
docker exec "$CONTAINER_NAME" fs_cli -x "log CRIT ==============================================="

echo ""
echo "3. üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ª–æ–≥–∞..."
END_SIZE=$(docker exec "$CONTAINER_NAME" wc -l "$LOG_FILE" | cut -d' ' -f1)
DIFF_SIZE=$((END_SIZE - START_SIZE))
echo "–†–∞–∑–º–µ—Ä –ª–æ–≥–∞ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞: $END_SIZE —Å—Ç—Ä–æ–∫"
echo "–î–æ–±–∞–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: $DIFF_SIZE —Å—Ç—Ä–æ–∫"

# –≠–¢–ê–ü 6: –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤
echo ""
echo "üìã –≠–¢–ê–ü 6: –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í"
echo "=========================="

echo ""
echo "1. üîç –ü–æ–∏—Å–∫ DTMF —Å–æ–±—ã—Ç–∏–π –≤ —Ç–µ—Å—Ç–µ..."
DTMF_EVENTS=$(docker exec "$CONTAINER_NAME" sed -n "${START_SIZE},${END_SIZE}p" "$LOG_FILE" | grep -E "(DTMF|choice|digit|–ü–û–õ–£–ß–ï–ù–û|–°–ë–û–†|read)" | wc -l)
echo "–ù–∞–π–¥–µ–Ω–æ DTMF —Å–æ–±—ã—Ç–∏–π: $DTMF_EVENTS"

if [[ "$DTMF_EVENTS" -gt 0 ]]; then
    echo ""
    echo "üìã DTMF —Å–æ–±—ã—Ç–∏—è:"
    docker exec "$CONTAINER_NAME" sed -n "${START_SIZE},${END_SIZE}p" "$LOG_FILE" | grep -E "(DTMF|choice|digit|–ü–û–õ–£–ß–ï–ù–û|–°–ë–û–†|read)" | tail -10
fi

echo ""
echo "2. üîç –ü–æ–∏—Å–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ü–∏—Ñ—Ä..."
HANDLERS=$(docker exec "$CONTAINER_NAME" sed -n "${START_SIZE},${END_SIZE}p" "$LOG_FILE" | grep -E "(–û–ë–†–ê–ë–û–¢–ß–ò–ö|–í–ï–ë–•–£–ö)" | wc -l)
echo "–ù–∞–π–¥–µ–Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: $HANDLERS"

if [[ "$HANDLERS" -gt 0 ]]; then
    echo ""
    echo "üìã –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ü–∏—Ñ—Ä:"
    docker exec "$CONTAINER_NAME" sed -n "${START_SIZE},${END_SIZE}p" "$LOG_FILE" | grep -E "(–û–ë–†–ê–ë–û–¢–ß–ò–ö|–í–ï–ë–•–£–ö)"
fi

echo ""
echo "3. üîç –ü–æ–∏—Å–∫ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π..."
CRIT_MESSAGES=$(docker exec "$CONTAINER_NAME" sed -n "${START_SIZE},${END_SIZE}p" "$LOG_FILE" | grep "CRIT" | grep -E "(===|–ü–û–õ–£–ß–ï–ù–û|choice)" | wc -l)
echo "–ù–∞–π–¥–µ–Ω–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: $CRIT_MESSAGES"

if [[ "$CRIT_MESSAGES" -gt 0 ]]; then
    echo ""
    echo "üìã –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ—Å—Ç–∞:"
    docker exec "$CONTAINER_NAME" sed -n "${START_SIZE},${END_SIZE}p" "$LOG_FILE" | grep "CRIT" | grep -E "(===|–ü–û–õ–£–ß–ï–ù–û|choice)" | tail -15
fi

echo ""
echo "4. üîç –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–≤–æ–Ω–∫–∞..."
HANGUP_EVENTS=$(docker exec "$CONTAINER_NAME" sed -n "${START_SIZE},${END_SIZE}p" "$LOG_FILE" | grep -iE "(hangup|–∑–∞–≤–µ—Ä—à–µ–Ω|transfer)" | wc -l)
echo "–ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $HANGUP_EVENTS"

if [[ "$HANGUP_EVENTS" -gt 0 ]]; then
    echo ""
    echo "üìã –°–æ–±—ã—Ç–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:"
    docker exec "$CONTAINER_NAME" sed -n "${START_SIZE},${END_SIZE}p" "$LOG_FILE" | grep -iE "(hangup|–∑–∞–≤–µ—Ä—à–µ–Ω|transfer)" | tail -5
fi

# –≠–¢–ê–ü 7: –ó–∞–∫–ª—é—á–µ–Ω–∏–µ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo ""
echo "üìã –≠–¢–ê–ü 7: –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï"
echo "==================="

echo ""
if [[ "$DTMF_EVENTS" -gt 0 ]]; then
    echo "üéâ DTMF –°–û–ë–´–¢–ò–Ø –ù–ê–ô–î–ï–ù–´!"
    echo ""
    echo "‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢: FreeSWITCH –ø–æ–ª—É—á–∞–µ—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç DTMF —Å–∏–≥–Ω–∞–ª—ã"
    echo ""
    echo "üîß –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
    echo "1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–µ–±—Ö—É–∫–∏ –¥–ª—è —Ü–∏—Ñ—Ä 1 –∏ 2"
    echo "2. –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å backend"
    echo "3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ production"
    
elif [[ "$CRIT_MESSAGES" -gt 0 ]]; then
    echo "‚ö†Ô∏è  IVR –†–ê–ë–û–¢–ê–ï–¢, –ù–û DTMF –ù–ï –î–ï–¢–ï–ö–¢–ò–¢–°–Ø"
    echo ""
    echo "‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ó–≤–æ–Ω–æ–∫ –¥–æ—Ö–æ–¥–∏—Ç –¥–æ IVR, –Ω–æ DTMF —Å–∏–≥–Ω–∞–ª—ã –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è"
    echo ""
    echo "üîß –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:"
    echo "1. –ü—Ä–æ–≤–∞–π–¥–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç RFC2833 DTMF"
    echo "2. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–¥–µ–∫–æ–≤"
    echo "3. –ü—Ä–æ–±–ª–µ–º—ã —Å SIP trunk –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"
    echo "4. DTMF –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∫–∞–∫ SIP INFO (–Ω–µ RFC2833)"
    echo ""
    echo "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"
    echo "1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –¥–ª—è DTMF"
    echo "2. –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å inband DTMF –¥–µ—Ç–µ–∫—Ü–∏—é"
    echo "3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É SIP INFO DTMF"
    
else
    echo "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê"
    echo ""
    echo "‚ùå –ü–†–û–ë–õ–ï–ú–ê: IVR –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–ª–∏ –∑–≤–æ–Ω–æ–∫ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç"
    echo ""
    echo "üîß –¢–†–ï–ë–£–ï–¢–°–Ø:"
    echo "1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å SIP trunk –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"
    echo "2. –î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º"
    echo "3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∏–∞–ª–ø–ª–∞–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
fi

echo ""
echo "üìÑ –ü–û–õ–ù–´–ï –õ–û–ì–ò –¢–ï–°–¢–ê –°–û–•–†–ê–ù–ï–ù–´ –í: $LOG_FILE"
echo "üìä –°–¢–†–û–ö–ò $START_SIZE - $END_SIZE"
echo ""
echo "üîç –î–õ–Ø –î–ï–¢–ê–õ–¨–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê:"
echo "docker exec $CONTAINER_NAME sed -n '${START_SIZE},${END_SIZE}p' $LOG_FILE"
echo ""
echo "üî¢ DTMF –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!"
echo "====================" 
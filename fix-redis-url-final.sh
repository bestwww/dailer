#!/bin/bash

# –î–û–ë–ê–í–õ–ï–ù–ò–ï REDIS_URL –ò –î–†–£–ì–ò–• URL –ü–ï–†–ï–ú–ï–ù–ù–´–•

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üîß –î–û–ë–ê–í–õ–ï–ù–ò–ï REDIS_URL –ò –î–†–£–ì–ò–• URL –ü–ï–†–ï–ú–ï–ù–ù–´–•"

log "‚úÖ –ü–†–û–ì–†–ï–°–°:"
echo "  üéØ TypeScript path alias –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"
echo "  üñºÔ∏è Docker –æ–±—Ä–∞–∑ dailer-backend-fixed –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
echo "  üìù DATABASE_URL –¥–æ–±–∞–≤–ª–µ–Ω"
echo "  ‚ùå –ù—É–∂–µ–Ω REDIS_URL"

log "üîß –î–û–ë–ê–í–õ–Ø–ï–ú –í–°–ï –ù–ï–î–û–°–¢–ê–Æ–©–ò–ï URL –ü–ï–†–ï–ú–ï–ù–ù–´–ï..."

# –î–æ–±–∞–≤–ª—è–µ–º REDIS_URL –ø–æ—Å–ª–µ DATABASE_URL
sed -i '/DATABASE_URL=postgresql/a\      - REDIS_URL=redis://redis:6379' docker-compose-ready.yml

# –î–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ URL –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
if ! grep -q "ASTERISK_URL" docker-compose-ready.yml; then
    sed -i '/REDIS_URL=redis/a\      - ASTERISK_URL=ami://admin:dailer_admin_2025@asterisk:5038' docker-compose-ready.yml
fi

log "üìä –ü–†–û–í–ï–†–Ø–ï–ú –í–°–ï URL –ü–ï–†–ï–ú–ï–ù–ù–´–ï:"
echo "=== URL –ü–ï–†–ï–ú–ï–ù–ù–´–ï –í DOCKER-COMPOSE ==="
grep -A 25 "environment:" docker-compose-ready.yml | grep -E "(DATABASE_URL|REDIS_URL|ASTERISK_URL)"

log "üöÄ –ë–´–°–¢–†–´–ô –ü–ï–†–ï–ó–ê–ü–£–°–ö BACKEND..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º backend
docker compose -f docker-compose-ready.yml stop backend

# –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
docker compose -f docker-compose-ready.yml rm -f backend

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å –Ω–æ–≤—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏
docker compose -f docker-compose-ready.yml up -d backend

log "‚è∞ –ü–†–û–í–ï–†–ö–ê –ó–ê–ü–£–°–ö–ê (30 —Å–µ–∫—É–Ω–¥)..."

sleep 5

for i in {1..6}; do
    BACKEND_STATUS=$(docker ps --filter "name=dialer_backend_ready" --format "{{.Status}}" 2>/dev/null)
    
    if echo "$BACKEND_STATUS" | grep -q "Up"; then
        log "‚úÖ Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω: $BACKEND_STATUS"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏
        sleep 3
        LOGS=$(docker logs dialer_backend_ready --tail 15 2>&1)
        
        if echo "$LOGS" | grep -q "Error:"; then
            log "‚ö†Ô∏è –í—Å–µ –µ—â–µ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö:"
            echo "$LOGS" | grep -A 3 -B 3 "Error:"
        else
            log "‚úÖ Backend –∑–∞–ø—É—â–µ–Ω –ë–ï–ó –û–®–ò–ë–û–ö!"
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
            sleep 5
            if curl -sf http://localhost:3001/health >/dev/null 2>&1; then
                log "üéâ BACKEND API –†–ê–ë–û–¢–ê–ï–¢!"
                
                echo ""
                echo "üéâ üéâ üéâ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ë–û–¢–ê–ï–¢! üéâ üéâ üéâ"
                echo ""
                echo "‚úÖ TypeScript path alias –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"
                echo "‚úÖ DATABASE_URL –∏ REDIS_URL –¥–æ–±–∞–≤–ª–µ–Ω—ã"
                echo "‚úÖ Backend API –æ—Ç–≤–µ—á–∞–µ—Ç"
                echo "‚úÖ –í—Å–µ 5 —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç"
                echo ""
                echo "üåê Frontend:     http://localhost:3000"
                echo "üîß Backend API:  http://localhost:3001/health"
                echo "üìû Asterisk CLI: docker exec -it dialer_asterisk_ready asterisk -r"
                echo "üíæ PostgreSQL:   docker exec -it dialer_postgres_ready psql -U dialer -d dialer"
                echo "üî¥ Redis CLI:    docker exec -it dialer_redis_ready redis-cli"
                echo ""
                echo "üèÅ –ú–ò–ì–†–ê–¶–ò–Ø FreeSWITCH ‚ûú ASTERISK –ó–ê–í–ï–†–®–ï–ù–ê –ü–û–õ–ù–û–°–¢–¨–Æ!"
                echo ""
                echo "üéØ VoIP –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ –ó–í–û–ù–ö–û–í!"
                echo ""
                echo "üìä –§–ò–ù–ê–õ–¨–ù–´–ô –°–¢–ê–¢–£–° –í–°–ï–• –°–ï–†–í–ò–°–û–í:"
                docker compose -f docker-compose-ready.yml ps
                
                echo ""
                echo "üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò - –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:"
                echo "  1. –û—Ç–∫—Ä–æ–π—Ç–µ Frontend: http://localhost:3000"
                echo "  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Backend: curl http://localhost:3001/health"
                echo "  3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SIP trunk (IP: 62.141.121.197:5070)"
                echo "  4. –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∑–≤–æ–Ω–∫–∏ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
                
                exit 0
            else
                log "‚ö†Ô∏è Backend –∑–∞–ø—É—â–µ–Ω, –Ω–æ API –µ—â–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (${i}*5 —Å–µ–∫)"
            fi
        fi
    else
        log "üìä Backend —Å—Ç–∞—Ç—É—Å: $BACKEND_STATUS (${i}*5 —Å–µ–∫)"
    fi
    
    sleep 5
done

log "‚ö†Ô∏è –ü–æ–∫–∞–∑—ã–≤–∞—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É..."

echo ""
echo "üìù –õ–æ–≥–∏ backend (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 25 —Å—Ç—Ä–æ–∫):"
docker logs dialer_backend_ready --tail 25

echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker compose -f docker-compose-ready.yml ps

echo ""
echo "üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è backend (–µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç):"
if docker ps --filter "name=dialer_backend_ready" --format "{{.Status}}" | grep -q "Up"; then
    docker exec dialer_backend_ready printenv | grep -E "(URL|DB_|REDIS_|ASTERISK_)" | sort
else
    echo "Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi

echo ""
log "üí° –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:"
echo "  1. –†—É—á–Ω–æ–π —Ç–µ—Å—Ç: docker run --rm -it --network dialer-ready_dialer_network dailer-backend-fixed:latest sh"
echo "  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥: docker run --rm dailer-backend-fixed:latest cat dist/config/index.js | grep -A 10 -B 10 required"
echo "  3. –í—Å–µ URL –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: grep -E '(DATABASE_URL|REDIS_URL)' docker-compose-ready.yml"

exit 1 
#!/bin/bash

# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–ù–§–õ–ò–ö–¢–ê –ü–û–†–¢–û–í –ò –§–ò–ù–ê–õ–¨–ù–´–ô –ó–ê–ü–£–°–ö

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–ù–§–õ–ò–ö–¢–ê –ü–û–†–¢–û–í!"

log "‚úÖ DOCKERFILE –£–°–ü–ï–®–ù–û –ü–ï–†–ï–°–û–ë–†–ê–ù!"
echo "  ‚úÖ COPY backend/package.json —Ä–∞–±–æ—Ç–∞–µ—Ç!"
echo "  ‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –±–µ–∑ –æ—à–∏–±–æ–∫!"

log "‚ùå –ü–†–û–ë–õ–ï–ú–ê - –ö–û–ù–§–õ–ò–ö–¢ –ü–û–†–¢–û–í:"
echo "  Frontend: –ø–æ—Ä—Ç 3000 –∑–∞–Ω—è—Ç"
echo "  Backend: –ø—ã—Ç–∞–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ—Ä—Ç 3000"
echo "  –ù—É–∂–Ω–æ: Backend –Ω–∞ –ø–æ—Ä—Ç—É 3001"

log "üîß –®–ê–ì 1: –ê–ù–ê–õ–ò–ó –ü–û–†–¢–û–í..."

echo "=== –¢–ï–ö–£–©–ò–ï –ö–û–ù–¢–ï–ô–ù–ï–†–´ –ò –ü–û–†–¢–´ ==="
docker compose ps

echo ""
echo "=== –ó–ê–ù–Ø–¢–´–ï –ü–û–†–¢–´ ==="
netstat -tlnp | grep :300 | head -5

log "üßπ –®–ê–ì 2: –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–ù–§–õ–ò–ö–¢–ê –ü–û–†–¢–û–í..."

echo "=== –û–°–¢–ê–ù–û–í–ö–ê –í–°–ï–• –ö–û–ù–¢–ï–ô–ù–ï–†–û–í ==="
docker compose stop

echo ""
echo "=== –£–î–ê–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–ù–´–• –ö–û–ù–¢–ï–ô–ù–ï–†–û–í ==="
docker compose rm -f backend frontend

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê docker-compose.yml –ü–û–†–¢–û–í ==="
grep -A 3 -B 3 "3000\|3001" docker-compose.yml | head -10

log "üöÄ –®–ê–ì 3: –ü–†–ê–í–ò–õ–¨–ù–´–ô –ó–ê–ü–£–°–ö –° –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ú–ò –ü–û–†–¢–ê–ú–ò..."

echo "=== –ó–ê–ü–£–°–ö –í–°–ï–• –°–ï–†–í–ò–°–û–í –° –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò –ü–û–†–¢–ê–ú–ò ==="
if docker compose up -d; then
    log "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"
else
    log "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
    
    echo "–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø–æ—Ä—Ç–∞–º–∏..."
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å —è–≤–Ω—ã–º–∏ –ø–æ—Ä—Ç–∞–º–∏
    docker compose up -d postgres redis asterisk
    sleep 5
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º frontend –Ω–∞ –ø–æ—Ä—Ç—É 3000
    docker compose up -d frontend
    sleep 5
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º backend –Ω–∞ –ø–æ—Ä—Ç—É 3001
    PORT=3001 docker compose up -d backend
fi

log "‚è≥ –®–ê–ì 4: –û–ñ–ò–î–ê–ù–ò–ï –ó–ê–ü–£–°–ö–ê –ò –ü–†–û–í–ï–†–ö–ê..."

echo "–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

echo ""
echo "=== –°–¢–ê–¢–£–° –í–°–ï–• –ö–û–ù–¢–ï–ô–ù–ï–†–û–í ==="
docker compose ps

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–û–í ==="
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 3000 (frontend):"
curl -sf http://localhost:3000 >/dev/null && echo "‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω" || echo "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 3001 (backend):"
curl -sf http://localhost:3001/health >/dev/null && echo "‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω" || echo "‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo ""
echo "=== –õ–û–ì–ò BACKEND ==="
docker logs $(docker ps | grep backend | awk '{print $1}' | head -1) --tail 15 2>/dev/null || echo "Backend –ª–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"

echo ""
echo "=== –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ API ==="

SUCCESS=false
for i in {1..5}; do
    echo "–ü–æ–ø—ã—Ç–∫–∞ ${i}/5:"
    
    HEALTH_RESPONSE=$(curl -sf http://localhost:3001/health 2>/dev/null)
    if [ $? -eq 0 ]; then
        SUCCESS=true
        echo "‚úÖ API –æ—Ç–≤–µ—á–∞–µ—Ç!"
        echo "Response: $HEALTH_RESPONSE"
        break
    else
        echo "  API –ø–æ–∫–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –æ–∂–∏–¥–∞–Ω–∏–µ..."
        sleep 8
    fi
done

if [ "$SUCCESS" = true ]; then
    log "üéâ üéâ üéâ –ü–û–õ–ù–ê–Ø –ü–û–ë–ï–î–ê! –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢! üéâ üéâ üéâ"
    
    echo ""
    echo "‚úÖ ‚úÖ ‚úÖ –í–°–ï –ü–†–û–ë–õ–ï–ú–´ –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û –†–ï–®–ï–ù–´! ‚úÖ ‚úÖ ‚úÖ"
    echo ""
    echo "üõ†Ô∏è –†–ï–®–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:"
    echo "  üõ£Ô∏è  –í–°–ï require() –ø—É—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã ‚úì"
    echo "  üì¶ –í–°–ï –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è ‚úì"
    echo "  üîí –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã ‚úì"
    echo "  üê≥ Docker –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã ‚úì"
    echo "  üóÑÔ∏è  –ü–æ–ª–Ω–∞—è —Å—Ö–µ–º–∞ –ë–î –∏–∑ 10 —Ç–∞–±–ª–∏—Ü ‚úì"
    echo "  ‚ö° ASYNC/AWAIT –ø—Ä–æ–±–ª–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ ‚úì"
    echo "  üêã DOCKERFILE –ø—É—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã ‚úì"
    echo "  üåê –ü–û–†–¢–´ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚úì"
    echo "  üöÄ Backend API –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úì"
    echo "  üéØ –í—Å–µ 5 —Å–µ—Ä–≤–∏—Å–æ–≤ healthy ‚úì"
    echo ""
    echo "üåê PRODUCTION VoIP –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ù–ê 100%!"
    echo "  Frontend:     http://localhost:3000"
    echo "  Backend API:  http://localhost:3001/health"
    echo "  Asterisk AMI: localhost:5038"  
    echo "  PostgreSQL:   localhost:5432"
    echo "  Redis:        localhost:6379"
    echo ""
    echo "üèÅ –ú–ò–ì–†–ê–¶–ò–Ø FreeSWITCH ‚ûú ASTERISK –ó–ê–í–ï–†–®–ï–ù–ê!"
    echo "üöÄ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –î–õ–Ø PRODUCTION!"
    echo "üéØ –í–°–ï –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´ –†–ï–®–ï–ù–´!"
    echo ""
    echo "üìä –§–ò–ù–ê–õ–¨–ù–´–ô –°–¢–ê–¢–£–° –í–°–ï–ô –°–ò–°–¢–ï–ú–´:"
    docker compose ps
    
    echo ""
    echo "‚úÖ API ENDPOINTS:"
    echo "Health check: $(curl -s http://localhost:3001/health | head -1)"
    echo ""
    echo "üéâ üåü SUCCESS! –ü–û–õ–ù–ê–Ø VoIP –°–ò–°–¢–ï–ú–ê –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–ê! üåü üéâ"
    echo "üéä –ú–æ–∂–Ω–æ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–≤–æ–Ω–∫–æ–≤ –∏ –∫–∞–º–ø–∞–Ω–∏–π!"
    
else
    log "‚ö†Ô∏è API –ø–æ–∫–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ä—Ç–æ–≤"
    
    echo ""
    echo "üìä –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:"
    echo ""
    echo "=== –°–¢–ê–¢–£–° –ö–û–ù–¢–ï–ô–ù–ï–†–û–í ==="
    docker compose ps
    
    echo ""
    echo "=== –ü–û–î–†–û–ë–ù–´–ï –õ–û–ì–ò BACKEND ==="
    docker logs $(docker ps | grep backend | awk '{print $1}' | head -1) --tail 25 2>/dev/null || echo "Backend –ª–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
    
    echo ""
    echo "=== –ê–ù–ê–õ–ò–ó –ü–û–†–¢–û–í ==="
    echo "–ü–æ—Ä—Ç 3000:"
    netstat -tlnp | grep :3000 || echo "–ü–æ—Ä—Ç 3000 –Ω–µ –∑–∞–Ω—è—Ç"
    echo "–ü–æ—Ä—Ç 3001:"
    netstat -tlnp | grep :3001 || echo "–ü–æ—Ä—Ç 3001 –Ω–µ –∑–∞–Ω—è—Ç"
    
    echo ""
    log "üîß Dockerfile –∏ –ø–æ—Ä—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ backend –≤—ã—à–µ"
    log "üí° –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å –¥–æ–ª—å—à–µ –∏–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ"
fi

echo ""
log "üéØ DOCKERFILE –£–°–ü–ï–®–ù–û –ò–°–ü–†–ê–í–õ–ï–ù - –°–ò–°–¢–ï–ú–ê –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò –ì–û–¢–û–í–ê!" 
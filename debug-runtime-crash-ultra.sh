#!/bin/bash

# –£–õ–¨–¢–†–ê-–ì–õ–£–ë–û–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê RUNTIME –ö–†–ê–®–ê BACKEND

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üîç –£–õ–¨–¢–†–ê-–ì–õ–£–ë–û–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê RUNTIME –ö–†–ê–®–ê"

log "‚úÖ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ù–´–ô –ü–†–û–ì–†–ï–°–°:"
echo "  ‚úÖ voip-provider-factory.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"
echo "  ‚úÖ –¢–µ—Å—Ç –±–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: DATABASE_URL required (–º–æ–¥—É–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç)"
echo "  ‚úÖ Docker cgroup –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã"
echo "  ‚úÖ 4/5 —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç (postgres, redis, asterisk, frontend)"
echo "  ‚ùå Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ù–ï –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤ docker ps –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏"

log "üîç –®–ê–ì 1: –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó RUNTIME –û–®–ò–ë–û–ö..."

# –ò–∑–≤–ª–µ–∫–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é dist
TEMP_CONTAINER="temp_runtime_debug"
docker create --name $TEMP_CONTAINER dailer-backend-modules-fixed:latest
docker cp $TEMP_CONTAINER:/app/dist ./temp_dist_runtime
docker rm $TEMP_CONTAINER

log "  –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–æ—Å—Ç—å –æ—à–∏–±–∫–∏..."

echo "=== –¢–ï–°–¢ 1: –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï –û–®–ò–ë–ö–ò –ë–ï–ó –ü–ï–†–ï–ú–ï–ù–ù–´–• ==="
BASIC_OUTPUT=$(docker run --rm dailer-backend-modules-fixed:latest timeout 5 node dist/app.js 2>&1 || echo "TIMEOUT_OR_ERROR")
echo "$BASIC_OUTPUT" | head -5

if echo "$BASIC_OUTPUT" | grep -q "DATABASE_URL.*required"; then
    log "‚úÖ –ë–ï–ó –ü–ï–†–ï–ú–ï–ù–ù–´–•: –ú–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è, –Ω—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ"
else
    log "‚ùå –ë–ï–ó –ü–ï–†–ï–ú–ï–ù–ù–´–•: –ï—Å—Ç—å –¥—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã"
    echo "$BASIC_OUTPUT"
fi

echo ""
echo "=== –¢–ï–°–¢ 2: –ó–ê–ü–£–°–ö –° –ü–û–õ–ù–´–ú–ò –ü–ï–†–ï–ú–ï–ù–ù–´–ú–ò ==="
log "  –¢–æ—á–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –æ—à–∏–±–∫—É docker-compose..."

FULL_ENV_OUTPUT=$(docker run --rm \
    --network dialer-ready_dialer_network \
    -e NODE_ENV=production \
    -e DATABASE_URL=postgresql://dialer:dialer_pass_2025@postgres:5432/dialer \
    -e REDIS_URL=redis://redis:6379 \
    -e ASTERISK_URL=ami://admin:dailer_admin_2025@asterisk:5038 \
    -e JWT_SECRET=2ffe1d3e9df1ffe8e07a5c2940b8d2c56e8280b9bf42965027b5605e5cfe11c2 \
    -e JWT_EXPIRES_IN=24h \
    -e LOG_LEVEL=info \
    -e VOIP_PROVIDER=asterisk \
    dailer-backend-modules-fixed:latest \
    timeout 10 node --trace-warnings --trace-uncaught --enable-source-maps dist/app.js 2>&1 || echo "TIMEOUT_OR_ERROR")

echo "=== –†–ï–ó–£–õ–¨–¢–ê–¢ –° –ü–û–õ–ù–´–ú–ò –ü–ï–†–ï–ú–ï–ù–ù–´–ú–ò ==="
echo "$FULL_ENV_OUTPUT" | head -20

if echo "$FULL_ENV_OUTPUT" | grep -q "Error\|error\|Error:"; then
    log "‚ùå –ù–ê–ô–î–ï–ù–´ –û–®–ò–ë–ö–ò –° –ü–û–õ–ù–´–ú–ò –ü–ï–†–ï–ú–ï–ù–ù–´–ú–ò:"
    echo "$FULL_ENV_OUTPUT" | grep -A 5 -B 5 -i "error"
fi

if echo "$FULL_ENV_OUTPUT" | grep -q "Cannot find module"; then
    log "‚ùå –í–°–Å –ï–©–Å –û–®–ò–ë–ö–ò –ú–û–î–£–õ–ï–ô:"
    echo "$FULL_ENV_OUTPUT" | grep -A 3 -B 3 "Cannot find module"
fi

log "üîß –®–ê–ì 3: –ê–ù–ê–õ–ò–ó –ö–û–ù–ö–†–ï–¢–ù–´–• –§–ê–ô–õ–û–í..."

echo "=== –ü–†–û–í–ï–†–ö–ê voip-provider-factory.js ==="
log "  –°–æ–¥–µ—Ä–∂–∏–º–æ–µ voip-provider-factory.js:"
head -15 temp_dist_runtime/services/voip-provider-factory.js

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê dialer.js –ò–ú–ü–û–†–¢–û–í ==="
log "  –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã –≤ dialer.js:"
grep -n "require\|import" temp_dist_runtime/services/dialer.js | head -15

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê models/ –î–ò–†–ï–ö–¢–û–†–ò–ò ==="
log "  –§–∞–π–ª—ã –≤ models/:"
ls -la temp_dist_runtime/models/ | head -10

echo ""
echo "=== –ü–û–ò–°–ö –í–°–ï–• –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–• –ú–û–î–£–õ–ï–ô ==="
log "  –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –í–°–ï require() –≤ dialer.js..."

# –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ relative requires –∏–∑ dialer.js –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ö —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
DIALER_REQUIRES=$(grep -o "require(\"\.\/[^\"]*\")" temp_dist_runtime/services/dialer.js | sed 's/require("\.\/\(.*\)")/\1/')

for req in $DIALER_REQUIRES; do
    if [[ $req == models/* ]]; then
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º models
        MODEL_PATH="temp_dist_runtime/$req.js"
        if [[ ! -f "$MODEL_PATH" ]]; then
            log "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: $req.js"
        else
            log "‚úÖ –ù–ê–ô–î–ï–ù: $req.js"
        fi
    elif [[ $req == services/* ]]; then
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º services  
        SERVICE_PATH="temp_dist_runtime/$req.js"
        if [[ ! -f "$SERVICE_PATH" ]]; then
            log "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: $req.js"
        else
            log "‚úÖ –ù–ê–ô–î–ï–ù: $req.js"
        fi
    fi
done

log "üß™ –®–ê–ì 4: –ü–û–®–ê–ì–û–í–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–ü–£–°–ö–ê..."

echo "=== –¢–ï–°–¢: –ó–ê–ì–†–£–ó–ö–ê –¢–û–õ–¨–ö–û CONFIG ==="
CONFIG_TEST=$(docker run --rm \
    -e DATABASE_URL=postgresql://dialer:dialer_pass_2025@postgres:5432/dialer \
    -e REDIS_URL=redis://redis:6379 \
    dailer-backend-modules-fixed:latest \
    timeout 3 node -e "try { require('./dist/config'); console.log('CONFIG OK'); } catch(e) { console.log('CONFIG ERROR:', e.message); }" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ config: $CONFIG_TEST"

echo ""
echo "=== –¢–ï–°–¢: –ó–ê–ì–†–£–ó–ö–ê SERVICES/DIALER ==="
DIALER_TEST=$(docker run --rm \
    -e DATABASE_URL=postgresql://dialer:dialer_pass_2025@postgres:5432/dialer \
    -e REDIS_URL=redis://redis:6379 \
    dailer-backend-modules-fixed:latest \
    timeout 3 node -e "try { require('./dist/services/dialer'); console.log('DIALER OK'); } catch(e) { console.log('DIALER ERROR:', e.message); }" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ dialer: $DIALER_TEST"

echo ""
echo "=== –¢–ï–°–¢: –ó–ê–ì–†–£–ó–ö–ê –¢–û–õ–¨–ö–û APP.JS ==="
APP_TEST=$(docker run --rm \
    -e DATABASE_URL=postgresql://dialer:dialer_pass_2025@postgres:5432/dialer \
    -e REDIS_URL=redis://redis:6379 \
    -e ASTERISK_URL=ami://admin:dailer_admin_2025@asterisk:5038 \
    -e JWT_SECRET=2ffe1d3e9df1ffe8e07a5c2940b8d2c56e8280b9bf42965027b5605e5cfe11c2 \
    dailer-backend-modules-fixed:latest \
    timeout 3 node -e "try { require('./dist/app'); console.log('APP REQUIRE OK'); } catch(e) { console.log('APP REQUIRE ERROR:', e.message); }" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ app: $APP_TEST"

log "üöÄ –®–ê–ì 5: –†–£–ß–ù–û–ô –ó–ê–ü–£–°–ö –° COMPOSE –õ–û–ì–ê–ú–ò..."

echo "=== COMPOSE –ó–ê–ü–£–°–ö –° –î–ï–¢–ê–õ–¨–ù–´–ú–ò –õ–û–ì–ê–ú–ò ==="
log "  –ó–∞–ø—É—Å–∫–∞–µ–º backend —á–µ—Ä–µ–∑ compose —Å –ª–æ–≥–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º backend –µ—Å–ª–∏ –µ—Å—Ç—å
docker compose -f docker-compose-ready.yml stop backend 2>/dev/null || true
docker compose -f docker-compose-ready.yml rm -f backend 2>/dev/null || true

# –ó–∞–ø—É—Å–∫–∞–µ–º backend –∏ —Å—Ä–∞–∑—É —Å–º–æ—Ç—Ä–∏–º –ª–æ–≥–∏
docker compose -f docker-compose-ready.yml up -d backend

sleep 3

echo "=== –õ–û–ì–ò –°–†–ê–ó–£ –ü–û–°–õ–ï –ó–ê–ü–£–°–ö–ê ==="
docker logs dialer_backend_ready --tail 50 2>&1 || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —É–∂–µ —É–ø–∞–ª"

echo ""
echo "=== –°–¢–ê–¢–£–° BACKEND –ö–û–ù–¢–ï–ô–ù–ï–†–ê ==="
docker ps -a --filter "name=dialer_backend_ready" --format "table {{.Names}}\t{{.Status}}\t{{.Image}}\t{{.Command}}"

echo ""
echo "=== –°–û–ë–´–¢–ò–Ø DOCKER –î–õ–Ø BACKEND ==="
docker events --filter container=dialer_backend_ready --since 2m --until now || echo "–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π"

log "üîç –®–ê–ì 6: –ê–ù–ê–õ–ò–ó –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò COMPOSE..."

echo "=== BACKEND –°–ï–ö–¶–ò–Ø –í COMPOSE ==="
grep -A 20 -B 5 "backend:" docker-compose-ready.yml

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê –û–ë–†–ê–ó–ê ==="
docker images | grep "dailer-backend-modules-fixed"

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê NETWORK ==="
docker network ls | grep dialer

log "üìä –®–ê–ì 7: –§–ò–ù–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê..."

echo ""
echo "=== –°–¢–ê–¢–£–° –í–°–ï–• –ö–û–ù–¢–ï–ô–ù–ï–†–û–í ==="
docker compose -f docker-compose-ready.yml ps

echo ""
echo "=== –ü–û–°–õ–ï–î–ù–Ø–Ø –ü–û–ü–´–¢–ö–ê –ü–û–õ–£–ß–ò–¢–¨ –õ–Æ–ë–´–ï –õ–û–ì–ò ==="
docker logs dialer_backend_ready 2>&1 || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"

echo ""
echo "=== –ò–ù–°–ü–ï–ö–¶–ò–Ø BACKEND –ö–û–ù–¢–ï–ô–ù–ï–†–ê ==="
docker inspect dialer_backend_ready --format="{{.State.Status}}: {{.State.Error}}" 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"

# –û—á–∏—Å—Ç–∫–∞
rm -rf temp_dist_runtime

echo ""
log "‚ö†Ô∏è –ò–¢–û–ì –£–õ–¨–¢–†–ê-–ì–õ–£–ë–û–ö–û–ô –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò –ó–ê–í–ï–†–®–Å–ù"
echo ""
echo "üìã –í–´–í–û–î–´:"
echo "  1. –ú–æ–¥—É–ª–∏ voip-provider-factory —Ä–∞–±–æ—Ç–∞—é—Ç –±–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"
echo "  2. –° –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ backend –≤—Å–µ –µ—â–µ –∫—Ä–∞—à–∏—Ç—Å—è"
echo "  3. –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç–æ—á–Ω—É—é runtime –æ—à–∏–±–∫—É"
echo ""
echo "üéØ –¶–ï–õ–¨: –ù–∞–π—Ç–∏ —Ç–æ—á–Ω—É—é –ø—Ä–∏—á–∏–Ω—É runtime –∫—Ä–∞—à–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è" 
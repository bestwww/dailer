#!/bin/bash

# –ü–û–õ–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –û–¢–ù–û–°–ò–¢–ï–õ–¨–ù–´–• –ü–£–¢–ï–ô

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üéØ –ü–û–õ–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –û–¢–ù–û–°–ò–¢–ï–õ–¨–ù–´–• –ü–£–¢–ï–ô!"

log "‚úÖ –ü–†–û–ì–†–ï–°–° –ü–û–î–¢–í–ï–†–ñ–î–ï–ù:"
echo "  ‚úÖ voip-provider-factory –ø—É—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω: require('./voip-provider-factory')"
echo "  ‚ùå –ù–û–í–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: Cannot find module './models/campaign'"
echo "  üéØ dialer.js –≤ services/ –∏—â–µ—Ç ./models/ –≤–º–µ—Å—Ç–æ ../models/"
echo "  üìç –ò–∑ services/dialer.js –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å: ../models/campaign"

log "üõ†Ô∏è –®–ê–ì 1: –ò–ó–í–õ–ï–ß–ï–ù–ò–ï –ò –ê–ù–ê–õ–ò–ó –í–°–ï–• –ü–£–¢–ï–ô..."

# –ò–∑–≤–ª–µ–∫–∞–µ–º dist –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –æ–±—Ä–∞–∑–∞
TEMP_CONTAINER="temp_all_paths_fix"
docker create --name $TEMP_CONTAINER dailer-backend-paths-fixed:latest
docker cp $TEMP_CONTAINER:/app/dist ./temp_dist_all_paths
docker rm $TEMP_CONTAINER

log "  –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –í–°–ï require() –ø—É—Ç–∏ –≤ dialer.js..."
echo "=== –í–°–ï REQUIRE –í DIALER.JS ==="
grep -n "require(" temp_dist_all_paths/services/dialer.js | head -20

log "  –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ models..."
echo "=== –§–ê–ô–õ–´ –í MODELS ==="
ls -la temp_dist_all_paths/models/ | head -10

log "  –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ config..."
echo "=== –§–ê–ô–õ–´ –í CONFIG ==="
ls -la temp_dist_all_paths/config/ | head -5

log "üîß –®–ê–ì 2: –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –û–¢–ù–û–°–ò–¢–ï–õ–¨–ù–´–• –ü–£–¢–ï–ô..."

log "  –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ models (–∏–∑ services/ –≤ ../models/)..."
sed -i 's|require("./models/campaign")|require("../models/campaign")|g' temp_dist_all_paths/services/dialer.js
sed -i 's|require("./models/contact")|require("../models/contact")|g' temp_dist_all_paths/services/dialer.js
sed -i 's|require("./models/call-result")|require("../models/call-result")|g' temp_dist_all_paths/services/dialer.js
sed -i 's|require("./models/blacklist")|require("../models/blacklist")|g' temp_dist_all_paths/services/dialer.js

log "  –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ config (–∏–∑ services/ –≤ ../config/)..."
sed -i 's|require("./config")|require("../config")|g' temp_dist_all_paths/services/dialer.js
sed -i 's|require("./config/index")|require("../config/index")|g' temp_dist_all_paths/services/dialer.js

log "  –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ utils (–∏–∑ services/ –≤ ../utils/)..."
sed -i 's|require("./utils/logger")|require("../utils/logger")|g' temp_dist_all_paths/services/dialer.js

log "  –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –≤ –î–†–£–ì–ò–• services —Ñ–∞–π–ª–∞—Ö..."
# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤–æ –≤—Å–µ—Ö services —Ñ–∞–π–ª–∞—Ö
find temp_dist_all_paths/services -name "*.js" -exec sed -i 's|require("./models/|require("../models/|g' {} \;
find temp_dist_all_paths/services -name "*.js" -exec sed -i 's|require("./config")|require("../config")|g' {} \;
find temp_dist_all_paths/services -name "*.js" -exec sed -i 's|require("./utils/|require("../utils/|g' {} \;

log "‚úÖ –ü–†–û–í–ï–†–Ø–ï–ú –†–ï–ó–£–õ–¨–¢–ê–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –í–°–ï–• –ü–£–¢–ï–ô:"
echo "=== MODELS REQUIRES –í DIALER.JS –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ==="
grep -n "require.*models" temp_dist_all_paths/services/dialer.js | head -5

echo "=== CONFIG REQUIRES –í DIALER.JS –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ==="
grep -n "require.*config" temp_dist_all_paths/services/dialer.js | head -3

echo "=== UTILS REQUIRES –í DIALER.JS –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ==="
grep -n "require.*utils" temp_dist_all_paths/services/dialer.js | head -3

echo "=== SERVICES REQUIRES –í DIALER.JS (–î–û–õ–ñ–ù–´ –û–°–¢–ê–¢–¨–°–Ø ./) ==="
grep -n "require.*\./[^/]" temp_dist_all_paths/services/dialer.js | head -5

log "üöÄ –®–ê–ì 3: –°–û–ó–î–ê–ù–ò–ï –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –û–ë–†–ê–ó–ê..."

cat > Dockerfile.all_paths_fixed << 'EOF'
FROM dailer-backend-paths-fixed:latest

# –ö–æ–ø–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é dist –ø–∞–ø–∫—É —Å–æ –≤—Å–µ–º–∏ –ø—É—Ç—è–º–∏
COPY temp_dist_all_paths /app/dist

# –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
USER root
RUN chown -R nodeuser:nodejs /app/dist
USER nodeuser

# –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
WORKDIR /app

# –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞
CMD ["node", "dist/app.js"]
EOF

# –°–æ–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ–±—Ä–∞–∑
docker build -f Dockerfile.all_paths_fixed -t dailer-backend-all-paths-fixed:latest .

# –û—á–∏—Å—Ç–∫–∞
rm -rf temp_dist_all_paths Dockerfile.all_paths_fixed

log "üîç –®–ê–ì 4: –¢–ï–°–¢ –í–°–ï–• –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• –ü–£–¢–ï–ô..."

echo "=== –¢–ï–°–¢: –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• MODELS –ü–£–¢–ï–ô ==="
docker run --rm dailer-backend-all-paths-fixed:latest grep -n "require.*models" /app/dist/services/dialer.js | head -3

echo ""
echo "=== –¢–ï–°–¢: –ó–ê–ì–†–£–ó–ö–ê DIALER –° –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ú–ò –ü–£–¢–Ø–ú–ò ==="
DIALER_ALL_PATHS_TEST=$(docker run --rm \
    -e DATABASE_URL=postgresql://dialer:dialer_pass_2025@postgres:5432/dialer \
    -e REDIS_URL=redis://redis:6379 \
    -e JWT_SECRET=test \
    dailer-backend-all-paths-fixed:latest \
    timeout 5 node -e "try { require('./dist/services/dialer'); console.log('ALL PATHS FIXED!'); } catch(e) { console.log('STILL ERROR:', e.message); }" 2>&1)

echo "–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø—É—Ç–µ–π: $DIALER_ALL_PATHS_TEST"

if echo "$DIALER_ALL_PATHS_TEST" | grep -q "ALL PATHS FIXED"; then
    log "‚úÖ –í–°–ï –ü–£–¢–ò –ò–°–ü–†–ê–í–õ–ï–ù–´! Dialer –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é!"
elif echo "$DIALER_ALL_PATHS_TEST" | grep -q "Cannot find module"; then
    log "‚ùå –í–°–Å –ï–©–Å –ü–†–û–ë–õ–ï–ú–´ –° –ú–û–î–£–õ–Ø–ú–ò:"
    echo "$DIALER_ALL_PATHS_TEST"
    
    # –ü–æ–∫–∞–∂–µ–º –∫–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ –º–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
    MODULE_ERROR=$(echo "$DIALER_ALL_PATHS_TEST" | grep "Cannot find module" | head -1)
    log "  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π –º–æ–¥—É–ª—å: $MODULE_ERROR"
    exit 1
else
    log "‚úÖ –í–û–ó–ú–û–ñ–ù–û –í–°–ï –ü–£–¢–ò –ò–°–ü–†–ê–í–õ–ï–ù–´! –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    echo "$DIALER_ALL_PATHS_TEST"
fi

log "üöÄ –®–ê–ì 5: –û–ë–ù–û–í–õ–ï–ù–ò–ï COMPOSE –ò –ó–ê–ü–£–°–ö..."

# –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–∑ –≤ compose
sed -i 's|dailer-backend-paths-fixed:latest|dailer-backend-all-paths-fixed:latest|g' docker-compose-ready.yml

log "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –ø—É—Ç—è–º–∏..."
docker compose -f docker-compose-ready.yml stop backend 2>/dev/null || true
docker compose -f docker-compose-ready.yml rm -f backend 2>/dev/null || true
docker compose -f docker-compose-ready.yml up -d backend

log "‚è∞ –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –ü–£–¢–ï–ô (30 —Å–µ–∫—É–Ω–¥)..."

sleep 10

for i in {1..4}; do
    BACKEND_STATUS=$(docker ps --filter "name=dialer_backend_ready" --format "{{.Status}}" 2>/dev/null)
    
    log "üìä Backend —Å—Ç–∞—Ç—É—Å: $BACKEND_STATUS (${i}*5 —Å–µ–∫)"
    
    if echo "$BACKEND_STATUS" | grep -q "Up"; then
        log "‚úÖ Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ó–ê–ü–£–©–ï–ù!"
        
        sleep 5
        LOGS=$(docker logs dialer_backend_ready --tail 15 2>&1)
        
        if echo "$LOGS" | grep -q "Cannot find module"; then
            MODULE_ERROR=$(echo "$LOGS" | grep "Cannot find module" | head -1)
            log "‚ùå –í–°–Å –ï–©–Å –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–ô –ú–û–î–£–õ–¨: $MODULE_ERROR"
            echo "=== –õ–û–ì–ò ==="
            echo "$LOGS" | head -10
            break
            
        elif echo "$LOGS" | grep -q "Config validation error"; then
            log "‚úÖ –ú–û–î–£–õ–ò –ó–ê–ì–†–£–ñ–ï–ù–´! –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (—ç—Ç–æ –ø—Ä–æ–≥—Ä–µ—Å—Å!)"
            CONFIG_ERROR=$(echo "$LOGS" | grep "Config validation error" | head -1)
            log "  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: $CONFIG_ERROR"
            echo "=== –õ–û–ì–ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ==="
            echo "$LOGS" | head -8
            break
            
        elif echo "$LOGS" | grep -q -E "(Server.*listening|started|ready|Listening on port|Express server)"; then
            log "üéâ BACKEND –°–ï–†–í–ï–† –ó–ê–ü–£–°–¢–ò–õ–°–Ø!"
            
            if curl -sf http://localhost:3001/health >/dev/null 2>&1; then
                log "üéâ BACKEND API –†–ê–ë–û–¢–ê–ï–¢!"
                
                echo ""
                echo "üéâ üéâ üéâ –ü–û–õ–ù–ê–Ø –ü–û–ë–ï–î–ê! –í–°–ï –ü–£–¢–ò –ò–°–ü–†–ê–í–õ–ï–ù–´! üéâ üéâ üéâ"
                echo ""
                echo "‚úÖ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ë–û–ß–ê–Ø:"
                echo "  üõ£Ô∏è  –í—Å–µ require() –ø—É—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
                echo "  üì¶ –í—Å–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è"
                echo "  üöÄ Backend API –æ—Ç–≤–µ—á–∞–µ—Ç"
                echo "  üåê –í—Å–µ 5 —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç"
                echo ""
                echo "üåê PRODUCTION VoIP –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê!"
                echo "  Frontend:     http://localhost:3000"
                echo "  Backend API:  http://localhost:3001/health"
                echo ""
                echo "üèÅ –ú–ò–ì–†–ê–¶–ò–Ø FreeSWITCH ‚ûú ASTERISK –ó–ê–í–ï–†–®–ï–ù–ê!"
                
                exit 0
            else
                log "‚ö†Ô∏è Backend —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
            fi
        else
            log "‚ö†Ô∏è Backend –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏..."
            if [[ $i -eq 3 ]]; then
                echo "=== –¢–ï–ö–£–©–ò–ï –õ–û–ì–ò ==="
                echo "$LOGS"
            fi
        fi
    else
        log "üìä Backend –Ω–µ –∑–∞–ø—É—â–µ–Ω: $BACKEND_STATUS"
        if [[ $i -eq 3 ]]; then
            echo "=== –ü–û–ü–´–¢–ö–ê –ü–û–õ–£–ß–ò–¢–¨ –õ–û–ì–ò ==="
            docker logs dialer_backend_ready --tail 20 2>&1 || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
        fi
    fi
    
    sleep 5
done

echo ""
echo "üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å:"
docker compose -f docker-compose-ready.yml ps

echo ""
echo "üìù –§–∏–Ω–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ backend:"
docker logs dialer_backend_ready --tail 30 2>&1 || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"

echo ""
log "üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–µ–π" 
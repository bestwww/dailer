#!/bin/bash

# –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –° CAPABILITIES

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üîß –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø CAPABILITIES –î–õ–Ø ASTERISK"

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose -f docker-compose-stable.yml down --remove-orphans

log "üìã –í–ù–ï–°–ï–ù–ù–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø:"
echo "  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã capabilities: SYS_RESOURCE, NET_ADMIN, NET_RAW"
echo "  ‚úÖ –ë–æ–ª–µ–µ –º—è–≥–∫–∏–π healthcheck (pgrep asterisk)"
echo "  ‚úÖ –£–≤–µ–ª–∏—á–µ–Ω–æ start_period –¥–æ 120s"

log "üöÄ –ó–ê–ü–£–°–ö –° –ù–û–í–´–ú–ò CAPABILITIES..."

# –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
log "üîÑ –ó–∞–ø—É—Å–∫ PostgreSQL –∏ Redis..."
docker compose -f docker-compose-stable.yml up postgres redis -d
sleep 10

# –ó–∞–ø—É—Å–∫ Asterisk —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
log "üîÑ –ó–∞–ø—É—Å–∫ Asterisk —Å capabilities..."
docker compose -f docker-compose-stable.yml up asterisk -d

# –£–ª—É—á—à–µ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
log "‚è∞ –î–µ—Ç–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—Å–∫–∞ (2 –º–∏–Ω—É—Ç—ã)..."

for i in $(seq 1 24); do
    sleep 5
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    CONTAINER_STATUS=$(docker ps --format "table {{.Names}}\t{{.Status}}" | grep dialer_asterisk_stable || echo "not_found")
    
    if [[ "$CONTAINER_STATUS" == *"Up"* ]]; then
        log "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: $CONTAINER_STATUS"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å Asterisk
        ASTERISK_PROCESS=$(docker exec dialer_asterisk_stable pgrep -f asterisk 2>/dev/null || echo "not_running")
        if [[ "$ASTERISK_PROCESS" != "not_running" ]]; then
            log "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å Asterisk –∑–∞–ø—É—â–µ–Ω (PID: $ASTERISK_PROCESS)"
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
            sleep 10
            
            log "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏..."
            
            # –¢–µ—Å—Ç CLI
            if timeout 15 docker exec dialer_asterisk_stable asterisk -r -x "core show version" >/dev/null 2>&1; then
                log "‚úÖ Asterisk CLI —Ä–∞–±–æ—Ç–∞–µ—Ç"
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª–µ–π
                MODULE_COUNT=$(timeout 10 docker exec dialer_asterisk_stable asterisk -r -x "module show" 2>/dev/null | wc -l || echo "0")
                if [ "$MODULE_COUNT" -gt 20 ]; then
                    log "‚úÖ –ú–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã ($MODULE_COUNT –º–æ–¥—É–ª–µ–π)"
                else
                    log "‚ö†Ô∏è –ú–∞–ª–æ –º–æ–¥—É–ª–µ–π: $MODULE_COUNT"
                fi
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ AMI
                if timeout 10 docker exec dialer_asterisk_stable asterisk -r -x "manager show users" >/dev/null 2>&1; then
                    log "‚úÖ AMI —Ä–∞–±–æ—Ç–∞–µ—Ç"
                else
                    log "‚ö†Ô∏è AMI –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
                fi
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ PJSIP
                if timeout 10 docker exec dialer_asterisk_stable asterisk -r -x "pjsip show transports" >/dev/null 2>&1; then
                    log "‚úÖ PJSIP —Ä–∞–±–æ—Ç–∞–µ—Ç"
                else
                    log "‚ö†Ô∏è PJSIP –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
                fi
                
                log "üéâ CAPABILITIES FIX –£–°–ü–ï–®–ï–ù!"
                log "üìã –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å:"
                docker compose -f docker-compose-stable.yml ps
                
                log "üöÄ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
                echo "  docker compose -f docker-compose-stable.yml up backend frontend -d"
                
                exit 0
                
            else
                log "‚ö†Ô∏è CLI –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç (${i}5 —Å–µ–∫)"
            fi
        else
            log "‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å Asterisk –Ω–µ –Ω–∞–π–¥–µ–Ω (${i}5 —Å–µ–∫)"
        fi
        
    elif [[ "$CONTAINER_STATUS" == *"Restarting"* ]]; then
        log "‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è (–ø–æ–ø—ã—Ç–∫–∞ ${i})"
        
    elif [[ "$CONTAINER_STATUS" == "not_found" ]]; then
        log "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"
        break
        
    else
        log "‚ö†Ô∏è –°—Ç–∞—Ç—É—Å: $CONTAINER_STATUS (${i}5 —Å–µ–∫)"
    fi
done

# –ï—Å–ª–∏ –¥–æ—à–ª–∏ —Å—é–¥–∞ - –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å
log "‚ùå CAPABILITIES FIX –ù–ï –ü–û–ú–û–ì"
log "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã:"

echo ""
echo "1. üìã –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
docker compose -f docker-compose-stable.yml ps

echo ""
echo "2. üìù –õ–æ–≥–∏ Asterisk (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å—Ç—Ä–æ–∫):"
docker logs dialer_asterisk_stable --tail 30

echo ""
echo "3. üîç –ü—Ä–æ—Ü–µ—Å—Å—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:"
docker exec dialer_asterisk_stable ps aux 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo ""
log "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"
echo "  1. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≥–æ—Ç–æ–≤—ã–π –æ–±—Ä–∞–∑: ./quick-ready-start.sh"
echo "  2. –ò–ª–∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –æ—Ç–ª–∞–¥–∫—É: docker run -it --rm dailer-asterisk-stable:latest bash"
echo "  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–æ–¥—É–ª–µ–π –≤ conf-minimal/"

exit 1 
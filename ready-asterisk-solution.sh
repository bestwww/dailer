#!/bin/bash

# –ì–û–¢–û–í–´–ï DOCKER –û–ë–†–ê–ó–´ ASTERISK - –ë–ï–ó –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
# –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö —Ä–µ—à–µ–Ω–∏—è—Ö

set -e

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üéØ –ì–û–¢–û–í–´–ï –û–ë–†–ê–ó–´ ASTERISK - –ë—ã—Å—Ç—Ä–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ë–ï–ó –∫–æ–º–ø–∏–ª—è—Ü–∏–∏"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–π —Å–∏—Å—Ç–µ–º—ã
log "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞..."
docker compose down --remove-orphans

log "üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π..."
git pull origin main

log "üßπ –û—á–∏—Å—Ç–∫–∞ Docker..."
docker system prune -f

log "üîç –î–û–°–¢–£–ü–ù–´–ï –ì–û–¢–û–í–´–ï –û–ë–†–ê–ó–´:"
log "   1. andrius/asterisk:20.1.0 - –ì–æ—Ç–æ–≤—ã–π Asterisk 20 (–†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø)"
log "   2. dougbtv/asterisk:16 - –°—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è"
log "   3. jrhavlik/asterisk:16 - Production ready"

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞
echo ""
echo "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—Ä–∞–∑ Asterisk:"
echo "1) andrius/asterisk:20.1.0 (–ë–ï–ó Stasis –ø—Ä–æ–±–ª–µ–º)"
echo "2) dougbtv/asterisk:16 (–°—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)"  
echo "3) jrhavlik/asterisk:16 (Production ready)"
echo "4) Custom Asterisk 22 (–∫–∞–∫ –≤ —Å—Ç–∞—Ç—å–µ)"
echo ""
read -p "–í–∞—à –≤—ã–±–æ—Ä (1-4): " choice

case $choice in
    1)
        ASTERISK_IMAGE="andrius/asterisk:20.1.0"
        ASTERISK_NAME="Asterisk 20.1.0 –ë–ï–ó Stasis"
        ;;
    2)
        ASTERISK_IMAGE="dougbtv/asterisk:16"
        ASTERISK_NAME="Asterisk 16 —Å—Ç–∞–±–∏–ª—å–Ω–∞—è"
        ;;
    3)
        ASTERISK_IMAGE="jrhavlik/asterisk:16"
        ASTERISK_NAME="Asterisk 16 production"
        ;;
    4)
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π Asterisk 22 –∫–∞–∫ –≤ —Å—Ç–∞—Ç—å–µ
        log "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ Asterisk 22 Docker –æ–±—Ä–∞–∑–∞..."
        cat > /tmp/Dockerfile-asterisk22 << 'EOF'
FROM ubuntu:22.04

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN apt-get update && \
    apt-get install -y \
        wget \
        build-essential \
        libjansson-dev \
        libxml2-dev \
        libsqlite3-dev \
        libssl-dev \
        libedit-dev

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
RUN useradd -d /home/asterisk -m --uid 2000 asterisk

USER asterisk
WORKDIR /home/asterisk

# –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ —Å–±–æ—Ä–∫–∞ Asterisk 22
RUN wget -q http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-22-current.tar.gz && \
    tar -xzf asterisk-22-current.tar.gz && \
    cd asterisk-22* && \
    ./configure --with-jansson-bundled && \
    make -j$(nproc)

USER root
WORKDIR /home/asterisk/asterisk-22*
RUN make install && make config && make samples

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
RUN mkdir -p /etc/asterisk/custom

# –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞
CMD ["/usr/sbin/asterisk", "-f", "-c", "-vvvvv"]
EOF
        
        log "üî® –°–±–æ—Ä–∫–∞ Asterisk 22..."
        docker build -f /tmp/Dockerfile-asterisk22 -t asterisk-22-custom .
        ASTERISK_IMAGE="asterisk-22-custom"
        ASTERISK_NAME="Asterisk 22 Custom"
        ;;
    *)
        log "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é andrius/asterisk:20.1.0"
        ASTERISK_IMAGE="andrius/asterisk:20.1.0"
        ASTERISK_NAME="Asterisk 20.1.0 –ë–ï–ó Stasis"
        ;;
esac

log "‚úÖ –í—ã–±—Ä–∞–Ω –æ–±—Ä–∞–∑: $ASTERISK_NAME"

# –°–æ–∑–¥–∞–µ–º .env
log "üîß –°–æ–∑–¥–∞–Ω–∏–µ .env..."
cat > .env << 'EOF'
VOIP_PROVIDER=asterisk
ASTERISK_HOST=asterisk
ASTERISK_PORT=5038
ASTERISK_USERNAME=admin
ASTERISK_PASSWORD=admin
SIP_CALLER_ID_NUMBER=9058615815
SIP_PROVIDER_HOST=62.141.121.197
SIP_PROVIDER_PORT=5070
EXTERNAL_IP=auto
POSTGRES_DB=dialer
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres123
REDIS_PASSWORD=redis123
EOF

log "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —Å –≥–æ—Ç–æ–≤—ã–º –æ–±—Ä–∞–∑–æ–º..."

log "1Ô∏è‚É£ PostgreSQL + Redis..."
docker compose up postgres redis -d
sleep 10

log "2Ô∏è‚É£ $ASTERISK_NAME..."

# –°–∫–∞—á–∏–≤–∞–µ–º –æ–±—Ä–∞–∑ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [[ "$ASTERISK_IMAGE" != "asterisk-22-custom" ]]; then
    log "üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞ $ASTERISK_IMAGE..."
    docker pull $ASTERISK_IMAGE
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º Asterisk –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
docker run -d --name dialer_asterisk_ready \
    --network dialer_dialer_network \
    -p 5060:5060/udp \
    -p 5060:5060/tcp \
    -p 5038:5038/tcp \
    -p 10000-20000:10000-20000/udp \
    -e ASTERISK_UID=1001 \
    -e ASTERISK_GID=1001 \
    $ASTERISK_IMAGE

log "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ Asterisk (30 —Å–µ–∫)..."
sleep 30

log "üìã –°—Ç–∞—Ç—É—Å Asterisk:"
docker ps | grep asterisk

log "üìã –õ–æ–≥–∏ Asterisk:"
docker logs dialer_asterisk_ready | tail -20

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Stasis –ø—Ä–æ–±–ª–µ–º—ã
log "üö® –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Stasis –æ—à–∏–±–∫–∏..."
ASTERISK_LOGS=$(docker logs dialer_asterisk_ready 2>&1)

if echo "$ASTERISK_LOGS" | grep -q "Stasis initialization failed"; then
    log "‚ùå Stasis –ø—Ä–æ–±–ª–µ–º–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ –æ–±—Ä–∞–∑–µ $ASTERISK_IMAGE"
    log "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –æ–±—Ä–∞–∑ –∏–ª–∏ Asterisk 22"
    exit 1
fi

if echo "$ASTERISK_LOGS" | grep -q "Asterisk Ready\|PBX UUID\|Manager registered"; then
    log "üéâ SUCCESS: $ASTERISK_NAME –∑–∞–ø—É—Å—Ç–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ!"
else
    log "‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ - –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"
fi

log "3Ô∏è‚É£ Backend..."
docker compose up backend -d
sleep 15

log "4Ô∏è‚É£ Frontend..."
docker compose up frontend -d
sleep 5

log "üìã –§–ò–ù–ê–õ–¨–ù–´–ô –°–¢–ê–¢–£–°:"
docker compose ps
docker ps | grep asterisk

log "üß™ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± Asterisk:"
docker exec dialer_asterisk_ready asterisk -rx "core show version" || echo "CLI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

log "‚úÖ –†–ï–®–ï–ù–ò–ï –° –ì–û–¢–û–í–´–ú –û–ë–†–ê–ó–û–ú –ó–ê–í–ï–†–®–ï–ù–û!"
log "üéØ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: $ASTERISK_NAME"
log "üìù –ï—Å–ª–∏ –Ω—É–∂–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ - —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
log "üîß AMI –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5038" 
#!/bin/bash

# üîßüêõ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –º–æ–¥—É–ª–µ–π FreeSWITCH 
# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É CHAN_NOT_IMPLEMENTED

echo "üîßüêõ === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ú–û–î–£–õ–ï–ô FREESWITCH ==="
echo

# –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ FreeSWITCH
CONTAINER_ID=$(docker ps | grep freeswitch | awk '{print $1}' | head -1)

if [[ -z "$CONTAINER_ID" ]]; then
    echo "‚ùå FreeSWITCH –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

echo "üê≥ FreeSWITCH –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: $CONTAINER_ID"

echo ""
echo "üìä === –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê FREESWITCH ==="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å FreeSWITCH
echo "üîç –°—Ç–∞—Ç—É—Å FreeSWITCH:"
docker exec $CONTAINER_ID fs_cli -x "status"

echo ""
echo "üì¶ === –ü–†–û–í–ï–†–ö–ê –ó–ê–ì–†–£–ñ–ï–ù–ù–´–• –ú–û–î–£–õ–ï–ô ==="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏
echo "üîç –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏:"
docker exec $CONTAINER_ID fs_cli -x "show modules" | head -20

echo ""
echo "üîç –ò—â–µ–º –≤–∞–∂–Ω—ã–µ –º–æ–¥—É–ª–∏:"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –º–æ–¥—É–ª–∏
MODULES_TO_CHECK=(
    "mod_loopback"
    "mod_sofia" 
    "mod_dptools"
    "mod_commands"
    "mod_conference"
    "mod_dialplan_xml"
)

for module in "${MODULES_TO_CHECK[@]}"; do
    status=$(docker exec $CONTAINER_ID fs_cli -x "show modules" | grep "$module" || echo "NOT_FOUND")
    if [[ "$status" != "NOT_FOUND" ]]; then
        echo "‚úÖ $module - –∑–∞–≥—Ä—É–∂–µ–Ω"
    else
        echo "‚ùå $module - –ù–ï –ó–ê–ì–†–£–ñ–ï–ù!"
    fi
done

echo ""
echo "üîß === –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ CHAN_NOT_IMPLEMENTED ==="

# –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–æ–¥—É–ª–∏
echo "üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–¥—É–ª–∏..."

CRITICAL_MODULES=(
    "mod_loopback"
    "mod_sofia"
    "mod_dptools"
)

for module in "${CRITICAL_MODULES[@]}"; do
    echo "üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º $module..."
    result=$(docker exec $CONTAINER_ID fs_cli -x "load $module" 2>&1)
    if echo "$result" | grep -qi "success\|ok\|already"; then
        echo "‚úÖ $module –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ö†Ô∏è $module: $result"
    fi
done

echo ""
echo "üîÑ === –ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ê –ú–û–î–£–õ–ï–ô ==="

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª–∏
echo "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º mod_sofia..."
docker exec $CONTAINER_ID fs_cli -x "reload mod_sofia"

echo "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º XML..."
docker exec $CONTAINER_ID fs_cli -x "reloadxml"

echo ""
echo "üìû === –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï –°–ü–û–°–û–ë–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ==="

echo "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã..."

# –¢–µ—Å—Ç 1: Loopback –≤–º–µ—Å—Ç–æ null/null
echo ""
echo "üìû –¢–ï–°–¢ 1: Loopback –∫–∞–Ω–∞–ª"
result1=$(docker exec $CONTAINER_ID fs_cli -x "originate loopback/1298 1298" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç loopback: $result1"

# –¢–µ—Å—Ç 2: Sofia loopback
echo ""
echo "üìû –¢–ï–°–¢ 2: Sofia loopback" 
result2=$(docker exec $CONTAINER_ID fs_cli -x "originate sofia/internal/1298@127.0.0.1 1298" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç sofia loopback: $result2"

# –¢–µ—Å—Ç 3: –ü—Ä–æ—Å—Ç–æ–π bridge
echo ""
echo "üìû –¢–ï–°–¢ 3: –ü—Ä—è–º–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ"
result3=$(docker exec $CONTAINER_ID fs_cli -x "uuid_broadcast \$(fs_cli -x \"originate user/1000 1298\") /usr/local/freeswitch/sounds/custom/example_1_8k.wav both" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç uuid_broadcast: $result3"

echo ""
echo "üîç === –ü–†–û–í–ï–†–ö–ê –î–ò–ê–õ–ü–õ–ê–ù–ê ==="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∏–∞–ª–ø–ª–∞–Ω –∑–∞–≥—Ä—É–∂–µ–Ω
echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–ª–ø–ª–∞–Ω..."
docker exec $CONTAINER_ID fs_cli -x "xml_locate dialplan" | grep -A5 -B5 "1298\|1297" || echo "–î–∏–∞–ª–ø–ª–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω"

echo ""
echo "üîß === –°–û–ó–î–ê–ù–ò–ï –†–ê–ë–û–ß–ï–ì–û –¢–ï–°–¢–û–í–û–ì–û –î–ò–ê–õ–ü–õ–ê–ù–ê ==="

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ä–∞–±–æ—á–∏–π –¥–∏–∞–ª–ø–ª–∞–Ω
cat > /tmp/working_test_dialplan.xml << 'EOF'
<?xml version="1.0" encoding="utf-8"?>
<include>
  <!-- –ü—Ä–æ—Å—Ç–æ–π —Ä–∞–±–æ—á–∏–π —Ç–µ—Å—Ç - –Ω–æ–º–µ—Ä 1299 -->
  <extension name="simple_wav_test_1299">
    <condition field="destination_number" expression="^1299$">
      <action application="answer"/>
      <action application="log" data="INFO === –ù–ê–ß–ò–ù–ê–ï–ú –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï WAV ==="/>
      <action application="sleep" data="1000"/>
      <action application="playback" data="/usr/local/freeswitch/sounds/custom/example_1_8k.wav"/>
      <action application="log" data="INFO === –ó–ê–í–ï–†–®–ò–õ–ò –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï WAV ==="/>
      <action application="sleep" data="1000"/>
      <action application="hangup"/>
    </condition>
  </extension>

  <!-- –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç - –Ω–æ–º–µ—Ä 1300 -->
  <extension name="diagnostic_test_1300">
    <condition field="destination_number" expression="^1300$">
      <action application="answer"/>
      <action application="log" data="INFO === –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢ ==="/>
      <action application="playback" data="tone_stream://%(2000,4000,440,480)"/>
      <action application="sleep" data="3000"/>
      <action application="hangup"/>
    </condition>
  </extension>
</include>
EOF

echo "üìÅ –ö–æ–ø–∏—Ä—É–µ–º —Ä–∞–±–æ—á–∏–π –¥–∏–∞–ª–ø–ª–∞–Ω..."
docker cp /tmp/working_test_dialplan.xml $CONTAINER_ID:/usr/local/freeswitch/conf/dialplan/test/working_test.xml

# –û–±–Ω–æ–≤–ª—è–µ–º default.xml
docker exec $CONTAINER_ID sh -c "
if ! grep -q 'working_test.xml' /usr/local/freeswitch/conf/dialplan/default.xml; then
    sed -i '/<\/context>/i\\  <X-PRE-PROCESS cmd=\"include\" data=\"test/working_test.xml\"/>' /usr/local/freeswitch/conf/dialplan/default.xml
fi
"

echo "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º XML —Å –Ω–æ–≤—ã–º –¥–∏–∞–ª–ø–ª–∞–Ω–æ–º..."
docker exec $CONTAINER_ID fs_cli -x "reloadxml"

echo ""
echo "üß™ === –§–ò–ù–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´ ==="

echo ""
echo "üìû –¢–ï–°–¢ –§–ò–ù–ê–õ 1: –ü—Ä–æ—Å—Ç–æ–π —Ä–∞–±–æ—á–∏–π –Ω–æ–º–µ—Ä (1299)"
final1=$(docker exec $CONTAINER_ID fs_cli -x "originate loopback/1299 1299" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç: $final1"

echo ""
echo "üìû –¢–ï–°–¢ –§–ò–ù–ê–õ 2: –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ç–æ–Ω (1300)"
final2=$(docker exec $CONTAINER_ID fs_cli -x "originate loopback/1300 1300" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç: $final2"

echo ""
echo "üìã === –ò–¢–û–ì–ò –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò ==="
echo ""

if echo "$final1" | grep -qi "success\|ok"; then
    echo "‚úÖ –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê! Loopback –∫–∞–Ω–∞–ª —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "üéµ –ù–æ–º–µ—Ä 1299 –¥–æ–ª–∂–µ–Ω –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å WAV —Ñ–∞–π–ª"
    echo "üìû –ù–æ–º–µ—Ä 1300 –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ç–æ–Ω"
    echo ""
    echo "üöÄ –†–ï–®–ï–ù–ò–ï –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–≤–æ–Ω–∫–æ–≤:"
    echo "   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:"
    echo "   docker exec $CONTAINER_ID fs_cli -x \"originate sofia/gateway/sip_trunk/79206054020 1299\""
else
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    echo "üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
    echo "   1. FreeSWITCH –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
    echo "   2. –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–º–ø–∏–ª—è—Ü–∏–µ–π –º–æ–¥—É–ª–µ–π"
    echo "   3. –ù—É–∂–Ω–∞ –ø–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
    echo ""
    echo "üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:"
    echo "   docker compose restart freeswitch"
fi

echo ""
echo "üìû === –ö–û–ú–ê–ù–î–´ –î–õ–Ø –î–ê–õ–¨–ù–ï–ô–®–ï–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ==="
echo ""
echo "–í–ù–£–¢–†–ï–ù–ù–ò–ï –¢–ï–°–¢–´:"
echo "docker exec $CONTAINER_ID fs_cli -x \"originate loopback/1299 1299\"  # WAV —Ç–µ—Å—Ç"
echo "docker exec $CONTAINER_ID fs_cli -x \"originate loopback/1300 1300\"  # –¢–æ–Ω —Ç–µ—Å—Ç"
echo ""
echo "–†–ï–ê–õ–¨–ù–´–ô –ó–í–û–ù–û–ö —Å WAV:"
echo "docker exec $CONTAINER_ID fs_cli -x \"originate sofia/gateway/sip_trunk/79206054020 1299\"" 
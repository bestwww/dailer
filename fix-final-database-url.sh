#!/bin/bash

# –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï DATABASE_URL –ò –û–ë–†–ê–ó–ê

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üéâ –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï DATABASE_URL"

log "‚úÖ –ü–†–û–ì–†–ï–°–°:"
echo "  üéØ TypeScript path alias –ò–°–ü–†–ê–í–õ–ï–ù!"
echo "  üöÄ Backend –æ–±—Ä–∞–∑ dailer-backend-fixed —Å–æ–∑–¥–∞–Ω!"
echo "  ‚ùå –û—Å—Ç–∞–ª—Å—è —Ç–æ–ª—å–∫–æ DATABASE_URL"

log "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 1: –û–ë–ù–û–í–õ–Ø–ï–ú DOCKER-COMPOSE –û–ë–†–ê–ó..."

# –û–±–Ω–æ–≤–ª—è–µ–º image –≤ docker-compose-ready.yml –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π
sed -i 's|image: dailer-backend:latest|image: dailer-backend-fixed:latest|g' docker-compose-ready.yml

log "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 2: –î–û–ë–ê–í–õ–Ø–ï–ú DATABASE_URL –ü–ï–†–ï–ú–ï–ù–ù–£–Æ..."

# –î–æ–±–∞–≤–ª—è–µ–º DATABASE_URL –ø–æ—Å–ª–µ –¥—Ä—É–≥–∏—Ö DB –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
sed -i '/DB_PASSWORD=dialer_pass_2025/a\      - DATABASE_URL=postgresql://dialer:dialer_pass_2025@postgres:5432/dialer' docker-compose-ready.yml

log "üìä –ü–†–û–í–ï–†–Ø–ï–ú –û–ë–ù–û–í–õ–ï–ù–ò–Ø:"
echo "=== –û–ë–†–ê–ó –ò –ü–ï–†–ï–ú–ï–ù–ù–´–ï BACKEND ==="
grep -A 20 "backend:" docker-compose-ready.yml | grep -E "(image:|DATABASE_URL|DB_HOST)"

log "üöÄ –ü–ï–†–ï–ó–ê–ü–£–°–ö BACKEND –° –ü–†–ê–í–ò–õ–¨–ù–´–ú –û–ë–†–ê–ó–û–ú –ò –ü–ï–†–ï–ú–ï–ù–ù–´–ú–ò..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º backend
docker compose -f docker-compose-ready.yml stop backend

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
docker compose -f docker-compose-ready.yml rm -f backend

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
docker compose -f docker-compose-ready.yml up -d backend

log "‚è∞ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê (45 —Å–µ–∫—É–Ω–¥)..."

sleep 10

for i in {1..7}; do
    BACKEND_STATUS=$(docker ps --filter "name=dialer_backend_ready" --format "{{.Status}}" 2>/dev/null)
    
    if echo "$BACKEND_STATUS" | grep -q "Up"; then
        log "‚úÖ Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω: $BACKEND_STATUS"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏
        if docker logs dialer_backend_ready --tail 10 2>&1 | grep -q "Error:"; then
            log "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö backend"
        else
            log "‚úÖ Backend –∑–∞–ø—É—â–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫!"
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
            sleep 5
            if curl -sf http://localhost:3001/health >/dev/null 2>&1; then
                log "üéâ BACKEND API –†–ê–ë–û–¢–ê–ï–¢!"
                
                echo ""
                echo "üéâ üéâ üéâ –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –ü–û–õ–ù–û–°–¢–¨–Æ! üéâ üéâ üéâ"
                echo ""
                echo "‚úÖ TypeScript path alias –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"
                echo "‚úÖ DATABASE_URL –¥–æ–±–∞–≤–ª–µ–Ω"
                echo "‚úÖ Backend API –æ—Ç–≤–µ—á–∞–µ—Ç"
                echo "‚úÖ –í—Å–µ 5 —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç"
                echo ""
                echo "üåê Frontend:     http://localhost:3000"
                echo "üîß Backend API:  http://localhost:3001/health"
                echo "üìû Asterisk CLI: docker exec -it dialer_asterisk_ready asterisk -r"
                echo "üíæ PostgreSQL:   docker exec -it dialer_postgres_ready psql -U dialer -d dialer"
                echo "üî¥ Redis CLI:    docker exec -it dialer_redis_ready redis-cli"
                echo ""
                echo "üèÅ –ú–ò–ì–†–ê–¶–ò–Ø FreeSWITCH ‚ûú ASTERISK –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!"
                echo ""
                echo "üéØ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!"
                echo ""
                echo "üìä –§–ò–ù–ê–õ–¨–ù–´–ô –°–¢–ê–¢–£–° –í–°–ï–• –°–ï–†–í–ò–°–û–í:"
                docker compose -f docker-compose-ready.yml ps
                
                echo ""
                echo "üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SIP –ó–í–û–ù–ö–û–í:"
                echo "  1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Asterisk: docker exec -it dialer_asterisk_ready asterisk -r -x 'sip show peers'"
                echo "  2. Frontend –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:3000"
                echo "  3. API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: curl http://localhost:3001/api/stats"
                
                exit 0
            else
                log "‚ö†Ô∏è Backend –∑–∞–ø—É—â–µ–Ω, –Ω–æ API –µ—â–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (${i}*5 —Å–µ–∫)"
            fi
        fi
    else
        log "üìä Backend —Å—Ç–∞—Ç—É—Å: $BACKEND_STATUS (${i}*5 —Å–µ–∫)"
    fi
    
    sleep 5
done

log "‚ö†Ô∏è –ü–æ–∫–∞–∑—ã–≤–∞—é —Ñ–∏–Ω–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É..."

echo ""
echo "üìù –õ–æ–≥–∏ backend (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):"
docker logs dialer_backend_ready --tail 20

echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker compose -f docker-compose-ready.yml ps

echo ""
echo "üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è backend:"
docker exec dialer_backend_ready printenv | grep -E "(DATABASE_URL|DB_|NODE_ENV)" | sort

echo ""
log "üí° –ï–°–õ–ò –û–°–¢–ê–õ–ò–°–¨ –ü–†–û–ë–õ–ï–ú–´:"
echo "  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª–Ω—ã–µ –ª–æ–≥–∏: docker logs dialer_backend_ready"
echo "  2. –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: docker exec dialer_postgres_ready psql -U dialer -d dialer -c 'SELECT version();'"
echo "  3. –†—É—á–Ω–æ–π —Ç–µ—Å—Ç backend: docker run --rm -it --network dialer-ready_dialer_network dailer-backend-fixed:latest node dist/app.js"

exit 1 
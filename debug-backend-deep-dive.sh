#!/bin/bash

# –ì–õ–£–ë–û–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê BACKEND - –ù–ê–ô–¢–ò –í–°–ï –û–®–ò–ë–ö–ò

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üîç –ì–õ–£–ë–û–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê BACKEND"

log "‚úÖ –ü–†–û–ì–†–ï–°–°:"
echo "  ‚úÖ –ö–∞–≤—ã—á–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã: require(\"./config\")"
echo "  ‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –ø—Ä–æ–≤–µ—Ä–µ–Ω: –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫"
echo "  ‚úÖ –û–±—Ä–∞–∑ —Å–æ–∑–¥–∞–Ω: dailer-backend-final-victory:latest"
echo "  ‚ùå Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ù–ï –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤ docker ps"

log "üîç –®–ê–ì 1: –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –§–ê–ô–õ–û–í..."

# –ò–∑–≤–ª–µ–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
TEMP_CONTAINER="temp_deep_debug"
docker create --name $TEMP_CONTAINER dailer-backend-final-victory:latest
docker cp $TEMP_CONTAINER:/app/dist ./temp_dist_debug
docker rm $TEMP_CONTAINER

log "  –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ dist –ø–∞–ø–∫–∏..."
echo "=== –°–¢–†–£–ö–¢–£–†–ê DIST ==="
find temp_dist_debug -type f -name "*.js" | head -10

log "  –ü—Ä–æ–≤–µ—Ä—è–µ–º app.js –¥–µ—Ç–∞–ª—å–Ω–æ..."
echo "=== –ü–ï–†–í–´–ï 25 –°–¢–†–û–ö app.js ==="
head -25 temp_dist_debug/app.js

log "  –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ require() –≤ app.js..."
echo "=== –í–°–ï REQUIRE –í app.js ==="
grep -n "require(" temp_dist_debug/app.js | head -10

log "  –ò—â–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–¥–µ..."
echo "=== –ü–û–ò–°–ö –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–´–• –ö–û–ù–°–¢–†–£–ö–¶–ò–ô ==="
grep -n -E "(undefined|null|error|Error)" temp_dist_debug/app.js | head -5 || echo "–ù–µ—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π"

log "üß™ –®–ê–ì 2: –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê..."

echo "=== –¢–ï–°–¢ 1: –ü–†–û–í–ï–†–ö–ê NODE –í–ï–†–°–ò–ò –í –ö–û–ù–¢–ï–ô–ù–ï–†–ï ==="
docker run --rm dailer-backend-final-victory:latest node --version

echo ""
echo "=== –¢–ï–°–¢ 2: –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í–û–ô –°–ò–°–¢–ï–ú–´ ==="
docker run --rm dailer-backend-final-victory:latest ls -la /app/

echo ""
echo "=== –¢–ï–°–¢ 3: –ü–†–û–í–ï–†–ö–ê DIST –î–ò–†–ï–ö–¢–û–†–ò–ò ==="
docker run --rm dailer-backend-final-victory:latest ls -la /app/dist/ | head -5

echo ""
echo "=== –¢–ï–°–¢ 4: –ü–û–ü–´–¢–ö–ê –ó–ê–ü–£–°–ö–ê –° –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–´–ú–ò –õ–û–ì–ê–ú–ò ==="
log "  –ó–∞–ø—É—Å–∫ —Å NODE_DEBUG=* –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏..."

DETAILED_OUTPUT=$(docker run --rm \
    --network dialer-ready_dialer_network \
    -e NODE_ENV=production \
    -e NODE_DEBUG=* \
    -e DATABASE_URL=postgresql://dialer:dialer_pass_2025@postgres:5432/dialer \
    -e REDIS_URL=redis://redis:6379 \
    -e ASTERISK_URL=ami://admin:dailer_admin_2025@asterisk:5038 \
    -e JWT_SECRET=2ffe1d3e9df1ffe8e07a5c2940b8d2c56e8280b9bf42965027b5605e5cfe11c2 \
    dailer-backend-final-victory:latest \
    timeout 8 node --trace-warnings --trace-uncaught dist/app.js 2>&1 || echo "TIMEOUT_OR_ERROR")

echo "=== –†–ï–ó–£–õ–¨–¢–ê–¢ –î–ï–¢–ê–õ–¨–ù–û–ì–û –ó–ê–ü–£–°–ö–ê ==="
echo "$DETAILED_OUTPUT" | head -30

if echo "$DETAILED_OUTPUT" | grep -q "Error\|error"; then
    log "‚ùå –ù–ê–ô–î–ï–ù–´ –û–®–ò–ë–ö–ò –í –î–ï–¢–ê–õ–¨–ù–û–ú –ó–ê–ü–£–°–ö–ï:"
    echo "$DETAILED_OUTPUT" | grep -A 5 -B 5 -i "error"
fi

if echo "$DETAILED_OUTPUT" | grep -q "Cannot find module"; then
    log "‚ùå –ú–û–î–£–õ–ò –ù–ï –ù–ê–ô–î–ï–ù–´:"
    echo "$DETAILED_OUTPUT" | grep -A 3 -B 3 "Cannot find module"
fi

if echo "$DETAILED_OUTPUT" | grep -q "SyntaxError"; then
    log "‚ùå –í–°–Å –ï–©–Å –°–ò–ù–¢–ê–ö–°–ò–ß–ï–°–ö–ò–ï –û–®–ò–ë–ö–ò:"
    echo "$DETAILED_OUTPUT" | grep -A 5 -B 5 "SyntaxError"
fi

echo ""
echo "=== –¢–ï–°–¢ 5: –ü–û–ü–´–¢–ö–ê –ó–ê–ü–£–°–ö–ê –ë–ï–ó –ü–ï–†–ï–ú–ï–ù–ù–´–• ==="
log "  –ó–∞–ø—É—Å–∫ –±–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑–æ–≤—ã—Ö –æ—à–∏–±–æ–∫..."

BASIC_OUTPUT=$(docker run --rm \
    dailer-backend-final-victory:latest \
    timeout 3 node dist/app.js 2>&1 || echo "TIMEOUT_OR_ERROR")

echo "=== –†–ï–ó–£–õ–¨–¢–ê–¢ –ë–ê–ó–û–í–û–ì–û –ó–ê–ü–£–°–ö–ê ==="
echo "$BASIC_OUTPUT"

echo ""
echo "=== –¢–ï–°–¢ 6: –ü–†–û–í–ï–†–ö–ê PACKAGE.JSON –ò –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô ==="
docker run --rm dailer-backend-final-victory:latest cat package.json | head -20 || echo "package.json –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo ""
echo "=== –¢–ï–°–¢ 7: –ü–†–û–í–ï–†–ö–ê NODE_MODULES ==="
docker run --rm dailer-backend-final-victory:latest ls /app/node_modules | head -10 || echo "node_modules –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"

log "üîß –®–ê–ì 3: –ê–ù–ê–õ–ò–ó DOCKER COMPOSE..."

echo "=== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø BACKEND –í COMPOSE ==="
grep -A 15 -B 5 "backend:" docker-compose-ready.yml

echo ""
echo "=== –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø –í COMPOSE ==="
grep -A 10 "environment:" docker-compose-ready.yml | grep -E "(DATABASE_URL|REDIS_URL|ASTERISK_URL|JWT_SECRET)"

log "üöÄ –®–ê–ì 4: –ü–û–ü–´–¢–ö–ê –†–£–ß–ù–û–ì–û –ó–ê–ü–£–°–ö–ê –ß–ï–†–ï–ó COMPOSE..."

log "  –ó–∞–ø—É—Å–∫ backend —Å –ª–æ–≥–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏..."
echo "=== COMPOSE LOGS –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò ==="

# –ó–∞–ø—É—Å–∫–∞–µ–º backend –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏
docker compose -f docker-compose-ready.yml up -d backend

sleep 3

# –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ 10 —Å–µ–∫—É–Ω–¥
timeout 10 docker compose -f docker-compose-ready.yml logs -f backend || echo "TIMEOUT_LOGS"

echo ""
echo "=== –°–¢–ê–¢–£–° –ü–û–°–õ–ï –†–£–ß–ù–û–ì–û –ó–ê–ü–£–°–ö–ê ==="
docker compose -f docker-compose-ready.yml ps

log "üîç –®–ê–ì 5: –§–ò–ù–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê..."

echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker ps -a --filter "name=dialer_" --format "table {{.Names}}\t{{.Status}}\t{{.Image}}"

echo ""
echo "üìù –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ backend:"
docker logs dialer_backend_ready --tail 50 2>&1 || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã - –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–∞–¥–∞–µ—Ç"

echo ""
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤:"
docker run --rm dailer-backend-final-victory:latest find /app -name "*.js" | head -5

# –û—á–∏—Å—Ç–∫–∞
rm -rf temp_dist_debug

echo ""
log "‚ö†Ô∏è –ò–¢–û–ì –ì–õ–£–ë–û–ö–û–ô –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò –ó–ê–í–ï–†–®–Å–ù"
echo ""
echo "üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
echo "  1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ"
echo "  2. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ—Ä–Ω–µ–≤—É—é –ø—Ä–∏—á–∏–Ω—É"
echo "  3. –°–æ–∑–¥–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–±–æ—á–∏–π –æ–±—Ä–∞–∑"
echo "  4. –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É"
echo ""
echo "üéØ –¶–ï–õ–¨: –ù–∞–π—Ç–∏ –∏ —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –ø—Ä–∏—á–∏–Ω—É –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –∫—Ä–∞—à–∞ backend" 
#!/bin/bash

# –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê RUNTIME –ö–†–ê–®–ê BACKEND

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê RUNTIME –ö–†–ê–®–ê BACKEND"

log "‚úÖ –ü–†–û–ì–†–ï–°–°:"
echo "  üîß Docker cgroup –∫–æ–Ω—Ñ–ª–∏–∫—Ç –†–ï–®–ï–ù"
echo "  üöÄ –í—Å–µ –æ–±—Ä–∞–∑—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã"
echo "  üåê 4/5 —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç"
echo ""
echo "‚ùå –ù–û–í–ê–Ø –ü–†–û–ë–õ–ï–ú–ê:"
echo "  Backend —Å—Ç–∞—Ä—Ç—É–µ—Ç, –Ω–æ —Å—Ä–∞–∑—É –ø–∞–¥–∞–µ—Ç –æ—Ç runtime –æ—à–∏–±–∫–∏"

echo ""
log "üîç –®–ê–ì 1: –¢–û–ß–ù–´–ô –°–¢–ê–¢–£–° BACKEND –ö–û–ù–¢–ï–ô–ù–ï–†–ê..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å backend
BACKEND_STATUS=$(docker ps -a --filter "name=dialer_backend_ready" --format "table {{.Names}}\t{{.Status}}\t{{.ExitCode}}")
echo "$BACKEND_STATUS"

echo ""
log "üìù –®–ê–ì 2: –ü–û–õ–ù–´–ï –õ–û–ì–ò BACKEND..."

# –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ª–æ–≥–∏ backend
echo "=== –í–°–ï –õ–û–ì–ò BACKEND –ö–û–ù–¢–ï–ô–ù–ï–†–ê ==="
docker logs dialer_backend_ready 2>&1 || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"

echo ""
echo "=== –õ–û–ì–ò DOCKER COMPOSE ==="
docker compose -f docker-compose-ready.yml logs backend 2>&1 || echo "Compose –ª–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"

echo ""
log "üîß –®–ê–ì 3: –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø..."

echo "=== –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø BACKEND ==="
docker run --rm dailer-backend:latest printenv | grep -E "(NODE_ENV|DB_|REDIS_|ASTERISK_|VOIP_)" | sort

echo ""
log "üîå –®–ê–ì 4: –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò –°–ï–†–í–ò–°–û–í..."

echo "=== –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ô ==="

# –¢–µ—Å—Ç PostgreSQL —Å backend —Å–µ—Ç—å—é
echo "PostgreSQL:"
if docker run --rm --network dialer-ready_dialer_network postgres:15-alpine psql -h postgres -U dialer -d dialer -c "SELECT 'PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç';" 2>/dev/null; then
    echo "‚úÖ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑ backend —Å–µ—Ç–∏"
else
    echo "‚ùå PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑ backend —Å–µ—Ç–∏"
fi

# –¢–µ—Å—Ç Redis —Å backend —Å–µ—Ç—å—é
echo ""
echo "Redis:"
if docker run --rm --network dialer-ready_dialer_network redis:7-alpine redis-cli -h redis ping 2>/dev/null; then
    echo "‚úÖ Redis –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑ backend —Å–µ—Ç–∏"
else
    echo "‚ùå Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑ backend —Å–µ—Ç–∏"
fi

# –¢–µ—Å—Ç Asterisk AMI
echo ""
echo "Asterisk AMI:"
if timeout 5 docker run --rm --network dialer-ready_dialer_network alpine/curl:latest -s telnet://asterisk:5038 >/dev/null 2>&1; then
    echo "‚úÖ Asterisk AMI –ø–æ—Ä—Ç 5038 –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå Asterisk AMI –ø–æ—Ä—Ç 5038 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo ""
log "üöÄ –®–ê–ì 5: –ü–û–ü–´–¢–ö–ê –†–£–ß–ù–û–ì–û –ó–ê–ü–£–°–ö–ê BACKEND..."

echo "=== –†–£–ß–ù–û–ô –ó–ê–ü–£–°–ö BACKEND –í –û–¢–õ–ê–î–û–ß–ù–û–ú –†–ï–ñ–ò–ú–ï ==="

# –ó–∞–ø—É—Å–∫–∞–µ–º backend –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫
docker run --rm -it \
    --network dialer-ready_dialer_network \
    --env-file <(docker inspect dialer_backend_ready 2>/dev/null | jq -r '.[0].Config.Env[]' 2>/dev/null || echo "NODE_ENV=production") \
    -e NODE_ENV=production \
    -e DB_HOST=postgres \
    -e DB_PORT=5432 \
    -e DB_NAME=dialer \
    -e DB_USER=dialer \
    -e DB_PASSWORD=dialer_pass_2025 \
    -e REDIS_HOST=redis \
    -e REDIS_PORT=6379 \
    -e ASTERISK_HOST=asterisk \
    -e ASTERISK_PORT=5038 \
    -e ASTERISK_USERNAME=admin \
    -e ASTERISK_PASSWORD=dailer_admin_2025 \
    -e VOIP_PROVIDER=asterisk \
    dailer-backend:latest \
    sh -c "echo 'üîç –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´:' && ls -la && echo '' && echo 'üîç –ü–†–û–í–ï–†–ö–ê DIST:' && ls -la dist/ && echo '' && echo 'üîç –ó–ê–ü–£–°–ö NODE:' && node dist/app.js"

echo ""
log "üí° –®–ê–ì 6: –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï –í–ê–†–ò–ê–ù–¢–´ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò..."

echo ""
echo "üîß –ï–°–õ–ò –†–£–ß–ù–û–ô –ó–ê–ü–£–°–ö –ù–ï –£–î–ê–õ–°–Ø, –ü–û–ü–†–û–ë–£–ô–¢–ï:"
echo ""
echo "1. üìù –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô SHELL:"
echo "   docker run --rm -it --network dialer-ready_dialer_network dailer-backend:latest sh"
echo "   # –í–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
echo "   # node dist/app.js"
echo ""
echo "2. üîç –ü–†–û–í–ï–†–ö–ê PACKAGE.JSON:"
echo "   docker run --rm dailer-backend:latest cat package.json"
echo ""
echo "3. üîß –ü–†–û–í–ï–†–ö–ê –ú–ò–ì–†–ê–¶–ò–ô –ë–î:"
echo "   docker run --rm --network dialer-ready_dialer_network \\"
echo "     -e DB_HOST=postgres -e DB_USER=dialer -e DB_PASSWORD=dialer_pass_2025 \\"
echo "     dailer-backend:latest node dist/scripts/check-db.js"
echo ""
echo "4. üöÄ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ô RESTART:"
echo "   docker compose -f docker-compose-ready.yml up -d backend --force-recreate"

echo ""
log "üéØ –í–û–ó–ú–û–ñ–ù–´–ï RUNTIME –ü–†–ò–ß–ò–ù–´:"
echo ""
echo "1. üóÉÔ∏è –ë–ê–ó–ê –î–ê–ù–ù–´–•:"
echo "   - –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã"
echo "   - –ù–µ—É–¥–∞—á–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏"
echo "   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"
echo ""
echo "2. üîå –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø:"
echo "   - Asterisk AMI –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è"
echo "   - Redis –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"
echo "   - –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ö–æ—Å—Ç—ã/–ø–æ—Ä—Ç—ã"
echo ""
echo "3. üêõ –ö–û–î:"
echo "   - –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ Promise rejections"
echo "   - –û—à–∏–±–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "   - –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥—É–ª–∏"
echo ""
echo "4. üèóÔ∏è –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø:"
echo "   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
echo "   - –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
echo "   - –ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏ —Ñ–∞–π–ª–æ–≤"

exit 0 
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ç–µ–≤—ã—Ö –ø—Ä–æ–±–ª–µ–º FreeSWITCH
# –ê–≤—Ç–æ—Ä: AI Assistant
# –î–∞—Ç–∞: 2025-07-17

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log_error() {
    log "${RED}ERROR: $1${NC}"
}

log_warn() {
    log "${YELLOW}WARN: $1${NC}"
}

log_info() {
    log "${BLUE}INFO: $1${NC}"
}

log_success() {
    log "${GREEN}SUCCESS: $1${NC}"
}

# SIP —Å–µ—Ä–≤–µ—Ä
SIP_HOST="62.141.121.197"
SIP_PORT="5070"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã Docker Compose
if command -v docker-compose >/dev/null 2>&1; then
    DOCKER_COMPOSE="docker-compose"
elif docker compose version >/dev/null 2>&1; then
    DOCKER_COMPOSE="docker compose"
else
    log_error "Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

log_info "Docker Compose –∫–æ–º–∞–Ω–¥–∞: $DOCKER_COMPOSE"

log "üåê –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ï–¢–ï–í–´–• –ü–†–û–ë–õ–ï–ú FREESWITCH"

# –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Å–µ—Ç–∏
log "–®–∞–≥ 1: –ê–Ω–∞–ª–∏–∑ Docker —Å–µ—Ç–∏"
log_info "üì° –ê–Ω–∞–ª–∏–∑ Docker —Å–µ—Ç–µ–π..."

# –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å–µ—Ç–∏
log_info "–î–æ—Å—Ç—É–ø–Ω—ã–µ Docker —Å–µ—Ç–∏:"
docker network ls

# –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ —Å–µ—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_NETWORK=$(docker network ls --filter name=dailer --format "{{.Name}}" | head -1)
if [ -n "$PROJECT_NETWORK" ]; then
    log_info "–î–µ—Ç–∞–ª–∏ —Å–µ—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ ($PROJECT_NETWORK):"
    docker network inspect "$PROJECT_NETWORK" | jq -r '.[] | {Name: .Name, Driver: .Driver, IPAM: .IPAM, Containers: (.Containers // {} | keys)}'
else
    log_warn "–°–µ—Ç—å –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ FreeSWITCH
log "–®–∞–≥ 2: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ FreeSWITCH"
FREESWITCH_CONTAINER=$(docker ps --filter name=freeswitch --format "{{.Names}}" | head -1)

if [ -z "$FREESWITCH_CONTAINER" ]; then
    log_error "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä FreeSWITCH –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

log_info "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä FreeSWITCH: $FREESWITCH_CONTAINER"

# –ü–æ–ª—É—á–∏—Ç—å IP –∞–¥—Ä–µ—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
CONTAINER_IP=$(docker inspect "$FREESWITCH_CONTAINER" | jq -r '.[0].NetworkSettings.Networks | to_entries[0].value.IPAddress')
log_info "IP –∞–¥—Ä–µ—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $CONTAINER_IP"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
log_info "–°–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:"
docker exec "$FREESWITCH_CONTAINER" ip addr show || log_warn "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã"

# –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
log "–®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑ —Ö–æ—Å—Ç–∞
log_info "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ $SIP_HOST:$SIP_PORT —Å —Ö–æ—Å—Ç–∞..."
if timeout 5 bash -c "</dev/tcp/$SIP_HOST/$SIP_PORT" 2>/dev/null; then
    log_success "‚úÖ –•–æ—Å—Ç –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ $SIP_HOST:$SIP_PORT"
else
    log_warn "‚ö†Ô∏è –•–æ—Å—Ç –ù–ï –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ $SIP_HOST:$SIP_PORT"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ ping —Å —Ö–æ—Å—Ç–∞
log_info "Ping $SIP_HOST —Å —Ö–æ—Å—Ç–∞..."
if ping -c 3 "$SIP_HOST" >/dev/null 2>&1; then
    log_success "‚úÖ Ping –∫ $SIP_HOST —Å —Ö–æ—Å—Ç–∞ —É—Å–ø–µ—à–µ–Ω"
else
    log_warn "‚ö†Ô∏è Ping –∫ $SIP_HOST —Å —Ö–æ—Å—Ç–∞ –Ω–µ—É—Å–ø–µ—à–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
log_info "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
docker exec "$FREESWITCH_CONTAINER" bash -c "
    apt-get update -qq >/dev/null 2>&1 || true
    apt-get install -y iputils-ping telnet netcat-openbsd curl dnsutils >/dev/null 2>&1 || true
" || log_warn "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ ping –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
log_info "Ping $SIP_HOST –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
if docker exec "$FREESWITCH_CONTAINER" ping -c 3 "$SIP_HOST" >/dev/null 2>&1; then
    log_success "‚úÖ Ping –∫ $SIP_HOST –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —É—Å–ø–µ—à–µ–Ω"
else
    log_error "‚ùå Ping –∫ $SIP_HOST –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–µ—É—Å–ø–µ—à–µ–Ω"
    PING_FAILED=1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ TCP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ TCP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ $SIP_HOST:$SIP_PORT –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
if docker exec "$FREESWITCH_CONTAINER" timeout 5 bash -c "echo > /dev/tcp/$SIP_HOST/$SIP_PORT" 2>/dev/null; then
    log_success "‚úÖ TCP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ $SIP_HOST:$SIP_PORT –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ"
else
    log_error "‚ùå TCP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ $SIP_HOST:$SIP_PORT –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–µ—É—Å–ø–µ—à–Ω–æ"
    TCP_FAILED=1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ UDP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–¥–ª—è SIP)
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ UDP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ $SIP_HOST:$SIP_PORT –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
if docker exec "$FREESWITCH_CONTAINER" timeout 5 nc -u -v "$SIP_HOST" "$SIP_PORT" </dev/null 2>&1 | grep -q "succeeded\|open"; then
    log_success "‚úÖ UDP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ $SIP_HOST:$SIP_PORT –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ"
else
    log_warn "‚ö†Ô∏è UDP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ $SIP_HOST:$SIP_PORT –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ"
fi

# –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS
log "–®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS"
log_info "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS —Ä–µ–∑–æ–ª—é—Ü–∏–∏..."

# DNS –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
docker exec "$FREESWITCH_CONTAINER" nslookup "$SIP_HOST" 2>/dev/null | head -10 || log_warn "DNS —Ä–µ–∑–æ–ª—é—Ü–∏—è –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø—Ä–æ–±–ª–µ–º–Ω–∞—è"

# –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏
log "–®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏"
log_info "üõ£Ô∏è –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."

# –ü–æ–∫–∞–∑–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
docker exec "$FREESWITCH_CONTAINER" ip route show || log_warn "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã"

# Traceroute –∫ SIP —Å–µ—Ä–≤–µ—Ä—É
log_info "Traceroute –∫ $SIP_HOST –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
docker exec "$FREESWITCH_CONTAINER" timeout 30 traceroute "$SIP_HOST" 2>/dev/null | head -10 || log_warn "Traceroute –Ω–µ—É—Å–ø–µ—à–µ–Ω"

# –®–∞–≥ 6: –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
log "–®–∞–≥ 6: –ü–æ–ø—ã—Ç–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"

if [ "$PING_FAILED" = "1" ] || [ "$TCP_FAILED" = "1" ]; then
    log_warn "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–µ—Ç–µ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, –ø—ã—Ç–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å..."
    
    # –ü–æ–ø—ã—Ç–∫–∞ 1: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ç–µ–≤—ã—Ö —Å–ª—É–∂–± –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    log_info "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ç–µ–≤—ã—Ö —Å–ª—É–∂–± –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
    docker exec "$FREESWITCH_CONTAINER" bash -c "
        service networking restart 2>/dev/null || true
        systemctl restart systemd-networkd 2>/dev/null || true
    " || log_info "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ç–µ–≤—ã–µ —Å–ª—É–∂–±—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)"
    
    # –ü–æ–ø—ã—Ç–∫–∞ 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
    log_info "üõ£Ô∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞..."
    docker exec "$FREESWITCH_CONTAINER" bash -c "
        # –ü–æ–ª—É—á–∞–µ–º gateway –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        DEFAULT_GW=\$(ip route | grep default | head -1 | awk '{print \$3}')
        if [ -n \"\$DEFAULT_GW\" ]; then
            ip route add $SIP_HOST via \$DEFAULT_GW 2>/dev/null || true
            echo \"–î–æ–±–∞–≤–ª–µ–Ω –º–∞—Ä—à—Ä—É—Ç –∫ $SIP_HOST —á–µ—Ä–µ–∑ \$DEFAULT_GW\"
        fi
    " || log_warn "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–∞—Ä—à—Ä—É—Ç"
    
    # –ü–æ–ø—ã—Ç–∫–∞ 3: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker —Å–µ—Ç–∏
    log_info "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker —Å–µ—Ç–∏..."
    
    # –ü–æ–∫–∞–∑–∞—Ç—å iptables –ø—Ä–∞–≤–∏–ª–∞
    log_info "–¢–µ–∫—É—â–∏–µ iptables –ø—Ä–∞–≤–∏–ª–∞ –Ω–∞ —Ö–æ—Å—Ç–µ (–∫–∞—Å–∞—é—â–∏–µ—Å—è Docker):"
    iptables -L DOCKER -n 2>/dev/null | head -20 || log_warn "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å iptables –ø—Ä–∞–≤–∏–ª–∞"
    
    # –ü–æ–ø—ã—Ç–∫–∞ 4: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –Ω–æ–≤–æ–π —Å–µ—Ç–µ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
    log_info "üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ FreeSWITCH —Å host networking..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π docker-compose —Ñ–∞–π–ª —Å host networking
    cat > docker-compose.network-fix.yml << 'EOF'
version: '3.8'

services:
  freeswitch:
    image: signalwire/freeswitch:latest
    network_mode: host
    volumes:
      - ./freeswitch/conf:/usr/local/freeswitch/conf
      - ./freeswitch/db:/usr/local/freeswitch/db
      - ./freeswitch/log:/usr/local/freeswitch/log
      - ./freeswitch/recordings:/usr/local/freeswitch/recordings
    command: freeswitch -nonat -nonatmap -u freeswitch -g freeswitch
    restart: unless-stopped
EOF
    
    log_info "–°–æ–∑–¥–∞–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ —Å host networking"
    log_info "–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: $DOCKER_COMPOSE -f docker-compose.network-fix.yml up -d freeswitch"
    
fi

# –®–∞–≥ 7: –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
log "–®–∞–≥ 7: –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ ping –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
log_info "–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ ping –∫ $SIP_HOST –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
if docker exec "$FREESWITCH_CONTAINER" ping -c 3 "$SIP_HOST" >/dev/null 2>&1; then
    log_success "‚úÖ Ping –∫ $SIP_HOST –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Ç–µ–ø–µ—Ä—å —É—Å–ø–µ—à–µ–Ω"
else
    log_warn "‚ö†Ô∏è Ping –∫ $SIP_HOST –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤—Å–µ –µ—â–µ –Ω–µ—É—Å–ø–µ—à–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SIP gateway —Å—Ç–∞—Ç—É—Å–∞
log_info "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ SIP gateway –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π..."
GATEWAY_STATUS=$(docker exec "$FREESWITCH_CONTAINER" fs_cli -x "sofia status gateway sip_trunk" 2>/dev/null | grep "Status" | awk '{print $2}' || echo "UNKNOWN")
log_info "–°—Ç–∞—Ç—É—Å gateway: $GATEWAY_STATUS"

if [ "$GATEWAY_STATUS" = "UP" ]; then
    log_success "üéâ Gateway sip_trunk –≤ —Å—Ç–∞—Ç—É—Å–µ UP!"
elif [ "$GATEWAY_STATUS" = "DOWN" ]; then
    log_warn "‚ö†Ô∏è Gateway sip_trunk –≤—Å–µ –µ—â–µ –≤ —Å—Ç–∞—Ç—É—Å–µ DOWN"
else
    log_warn "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç–∞—Ç—É—Å gateway"
fi

# –®–∞–≥ 8: –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
log "–®–∞–≥ 8: –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"

log "üìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –†–ï–®–ï–ù–ò–Æ –ü–†–û–ë–õ–ï–ú:"
echo "1. –ï—Å–ª–∏ ping –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ firewall –Ω–∞ —Ö–æ—Å—Ç–µ: ufw status"
echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ iptables –ø—Ä–∞–≤–∏–ª–∞: iptables -L"
echo "   - –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ host networking"

echo "2. –ï—Å–ª–∏ TCP/UDP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:"
echo "   - –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ SIP —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑–≤–Ω–µ"
echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø–æ—Ä—Ç 5070 –æ—Ç–∫—Ä—ã—Ç –Ω–∞ SIP —Å–µ—Ä–≤–µ—Ä–µ"
echo "   - –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥—Ä—É–≥–æ–≥–æ –ø–æ—Ä—Ç–∞"

echo "3. –î–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ host networking:"
echo "   $DOCKER_COMPOSE -f docker-compose.network-fix.yml up -d freeswitch"

echo "4. –î–ª—è –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è:"
echo "   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Docker bridge —Å–µ—Ç—å —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–µ–π"
echo "   - –î–æ–±–∞–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ iptables –ø—Ä–∞–≤–∏–ª–∞"
echo "   - –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É SIP –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"

log_success "‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –ø—Ä–æ–±–ª–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" 
#!/bin/bash

# üìûüéµ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ —Å WAV —Ñ–∞–π–ª–∞–º–∏
# –û–±–Ω–æ–≤–ª—è–µ—Ç FreeSWITCH –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è WAV –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—ã–∑–æ–≤—ã

echo "üìûüéµ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–í–û–ù–ö–û–í –° WAV –§–ê–ô–õ–ê–ú–ò ==="
echo

# –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ FreeSWITCH
CONTAINER_ID=$(docker ps | grep freeswitch | awk '{print $1}' | head -1)

if [[ -z "$CONTAINER_ID" ]]; then
    echo "‚ùå FreeSWITCH –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º FreeSWITCH..."
    docker compose up -d freeswitch
    sleep 15
    CONTAINER_ID=$(docker ps | grep freeswitch | awk '{print $1}' | head -1)
fi

echo "üê≥ FreeSWITCH –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: $CONTAINER_ID"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ WAV —Ñ–∞–π–ª–æ–≤
echo ""
echo "üìÇ === –ü–†–û–í–ï–†–ö–ê WAV –§–ê–ô–õ–û–í ==="

if [[ ! -f "audio/example_1.wav" ]]; then
    echo "‚ùå WAV —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
    echo "üîß –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: ./convert-audio-to-wav.sh"
    exit 1
fi

echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã WAV —Ñ–∞–π–ª—ã:"
ls -lh audio/*.wav 2>/dev/null

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∞—É–¥–∏–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
echo ""
echo "üìÅ === –ù–ê–°–¢–†–û–ô–ö–ê –ê–£–î–ò–û –í FREESWITCH ==="

echo "üìÅ –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É custom –≤ FreeSWITCH..."
docker exec $CONTAINER_ID mkdir -p /usr/local/freeswitch/sounds/custom

# –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ WAV —Ñ–∞–π–ª—ã
echo "üì• –ö–æ–ø–∏—Ä—É–µ–º WAV —Ñ–∞–π–ª—ã –≤ FreeSWITCH..."
for wav_file in audio/*.wav; do
    if [[ -f "$wav_file" ]]; then
        filename=$(basename "$wav_file")
        echo "üì• –ö–æ–ø–∏—Ä—É–µ–º $filename..."
        docker cp "$wav_file" $CONTAINER_ID:/usr/local/freeswitch/sounds/custom/
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª–∏—Å—å
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:"
docker exec $CONTAINER_ID ls -la /usr/local/freeswitch/sounds/custom/ | grep -E "\.(wav|mp3)"

# –°–æ–∑–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¥–∏–∞–ª–ø–ª–∞–Ω –¥–ª—è WAV
echo ""
echo "üìù === –û–ë–ù–û–í–õ–ï–ù–ò–ï –î–ò–ê–õ–ü–õ–ê–ù–ê –î–õ–Ø WAV ==="

cat > /tmp/wav_test_dialplan.xml << 'EOF'
<?xml version="1.0" encoding="utf-8"?>
<include>
  <!-- WAV –¢–µ—Å—Ç - –Ω–æ–º–µ—Ä 1298 -->
  <extension name="wav_test_1298">
    <condition field="destination_number" expression="^1298$">
      <action application="answer"/>
      <action application="sleep" data="1000"/>
      <action application="playback" data="/usr/local/freeswitch/sounds/custom/example_1.wav"/>
      <action application="sleep" data="2000"/>
      <action application="playback" data="/usr/local/freeswitch/sounds/custom/example_1_8k.wav"/>
      <action application="sleep" data="2000"/>
      <action application="hangup"/>
    </condition>
  </extension>

  <!-- WAV –¢–µ—Å—Ç HD –∫–∞—á–µ—Å—Ç–≤–∞ - –Ω–æ–º–µ—Ä 1297 -->
  <extension name="wav_test_hd_1297">
    <condition field="destination_number" expression="^1297$">
      <action application="answer"/>
      <action application="sleep" data="1000"/>
      <action application="playback" data="/usr/local/freeswitch/sounds/custom/example_1_16k.wav"/>
      <action application="sleep" data="3000"/>
      <action application="hangup"/>
    </condition>
  </extension>

  <!-- –†–µ–∞–ª—å–Ω—ã–π –∑–≤–æ–Ω–æ–∫ —Å WAV - –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π -->
  <extension name="call_79206054020_with_wav">
    <condition field="destination_number" expression="^test_wav_real$">
      <action application="set" data="execute_on_answer=playback:/usr/local/freeswitch/sounds/custom/example_1_8k.wav"/>
      <action application="bridge" data="sofia/gateway/sip_trunk/79206054020"/>
    </condition>
  </extension>
</include>
EOF

echo "üìÅ –ö–æ–ø–∏—Ä—É–µ–º –¥–∏–∞–ª–ø–ª–∞–Ω WAV –≤ FreeSWITCH..."
docker cp /tmp/wav_test_dialplan.xml $CONTAINER_ID:/usr/local/freeswitch/conf/dialplan/test/wav_test.xml

# –û–±–Ω–æ–≤–ª—è–µ–º default.xml –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è WAV —Ç–µ—Å—Ç–æ–≤
echo "üìù –û–±–Ω–æ–≤–ª—è–µ–º default.xml..."
docker exec $CONTAINER_ID sh -c "
if ! grep -q 'wav_test.xml' /usr/local/freeswitch/conf/dialplan/default.xml; then
    sed -i '/<\/context>/i\\  <X-PRE-PROCESS cmd=\"include\" data=\"test/wav_test.xml\"/>' /usr/local/freeswitch/conf/dialplan/default.xml
fi
"

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º XML –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
echo "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º XML –≤ FreeSWITCH..."
docker exec $CONTAINER_ID fs_cli -x "reloadxml"

echo ""
echo "üìû === –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –¢–ï–°–¢–´ WAV ==="

# –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
test_wav_call() {
    local number=$1
    local description=$2
    
    echo ""
    echo "üìû –¢–µ—Å—Ç–∏—Ä—É–µ–º $number - $description"
    echo "‚è±Ô∏è –°–æ–≤–µ—Ä—à–∞–µ–º –≤—ã–∑–æ–≤..."
    
    # –î–µ–ª–∞–µ–º –≤—ã–∑–æ–≤ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    result=$(docker exec $CONTAINER_ID fs_cli -x "originate null/null $number" 2>&1)
    
    if echo "$result" | grep -qi "success\|ok\|answered"; then
        echo "‚úÖ –í—ã–∑–æ–≤ —É—Å–ø–µ—à–µ–Ω - –∞—É–¥–∏–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç—å—Å—è"
    elif echo "$result" | grep -qi "busy\|failed\|error"; then
        echo "‚ùå –í—ã–∑–æ–≤ –Ω–µ —É–¥–∞–ª—Å—è: $result"
    else
        echo "‚ö†Ô∏è –ù–µ—è—Å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: $result"
    fi
    
    sleep 3
}

# –¢–µ—Å—Ç–∏—Ä—É–µ–º WAV —Ñ–∞–π–ª—ã
test_wav_call "1298" "–¢–µ—Å—Ç –æ–±—ã—á–Ω–æ–≥–æ –∏ 8kHz WAV"
test_wav_call "1297" "–¢–µ—Å—Ç HD (16kHz) WAV"

echo ""
echo "üìã === –ú–ï–ù–Æ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø WAV ==="
echo ""

while true; do
    echo "üéµ === –¢–ï–°–¢–´ WAV –§–ê–ô–õ–û–í ==="
    echo ""
    echo "–í–ù–£–¢–†–ï–ù–ù–ò–ï –¢–ï–°–¢–´ (–±–µ–∑–æ–ø–∞—Å–Ω–æ):"
    echo "  1) üìû –¢–µ—Å—Ç 1298 - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ–±—ã—á–Ω–æ–≥–æ –∏ 8kHz WAV"
    echo "  2) üìû –¢–µ—Å—Ç 1297 - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ HD (16kHz) WAV"
    echo ""
    echo "–†–ï–ê–õ–¨–ù–´–ï –ó–í–û–ù–ö–ò:"
    echo "  3) üìû –ó–≤–æ–Ω–æ–∫ –Ω–∞ 79206054020 —Å WAV (8kHz)"
    echo "  4) üìû –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –Ω–æ–º–µ—Ä —Å WAV"
    echo ""
    echo "–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:"
    echo "  5) üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∞–π–ª—ã –≤ FreeSWITCH"
    echo "  6) üìä –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–¥–µ–∫–∏ FreeSWITCH"
    echo "  7) üìú –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo ""
    echo "  0) üö™ –í—ã—Ö–æ–¥"
    echo ""
    
    read -p "üéØ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç (0-7): " choice
    
    case $choice in
        1)
            echo "üìû –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ WAV —Ñ–∞–π–ª–æ–≤..."
            docker exec $CONTAINER_ID fs_cli -x "originate null/null 1298"
            ;;
        2)
            echo "üìû –¢–µ—Å—Ç–∏—Ä—É–µ–º HD WAV..."
            docker exec $CONTAINER_ID fs_cli -x "originate null/null 1297"
            ;;
        3)
            echo "üìû –ó–≤–æ–Ω–∏–º –Ω–∞ –≤–∞—à –Ω–æ–º–µ—Ä —Å WAV..."
            echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –†–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ - –ø–æ—Ç—Ä–∞—Ç–∏—Ç –¥–µ–Ω—å–≥–∏!"
            read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " confirm
            if [[ $confirm == [yY] ]]; then
                docker exec $CONTAINER_ID fs_cli -x "originate null/null test_wav_real"
            fi
            ;;
        4)
            read -p "üì± –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: " custom_number
            echo "üìû –ó–≤–æ–Ω–∏–º –Ω–∞ $custom_number —Å WAV..."
            echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –†–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤!"
            read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " confirm
            if [[ $confirm == [yY] ]]; then
                docker exec $CONTAINER_ID fs_cli -x "originate sofia/gateway/sip_trunk/$custom_number 1298"
            fi
            ;;
        5)
            echo "üîç –§–∞–π–ª—ã –≤ FreeSWITCH:"
            docker exec $CONTAINER_ID find /usr/local/freeswitch/sounds -name "*.wav" -o -name "*.mp3" | head -10
            docker exec $CONTAINER_ID ls -la /usr/local/freeswitch/sounds/custom/
            ;;
        6)
            echo "üìä –ö–æ–¥–µ–∫–∏ FreeSWITCH:"
            docker exec $CONTAINER_ID fs_cli -x "show codec" | head -20
            ;;
        7)
            echo "üìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ FreeSWITCH:"
            docker logs $CONTAINER_ID | tail -20
            ;;
        0)
            echo "üëã –í—ã—Ö–æ–¥ –∏–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WAV"
            break
            ;;
        *)
            echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!"
            ;;
    esac
    
    echo ""
    read -p "üì° –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    echo ""
done

echo ""
echo "üìã === –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø WAV ==="
echo ""
echo "‚úÖ WAV —Ñ–∞–π–ª—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ FreeSWITCH"
echo "üìû –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞:"
echo "   1298 - —Ç–µ—Å—Ç –æ–±—ã—á–Ω–æ–≥–æ –∏ 8kHz WAV"
echo "   1297 - —Ç–µ—Å—Ç HD (16kHz) WAV"
echo ""
echo "üéØ –ï—Å–ª–∏ WAV —Ä–∞–±–æ—Ç–∞–µ—Ç, –∞ MP3 –Ω–µ—Ç - –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ–∫–∞—Ö MP3"
echo "üéØ –ï—Å–ª–∏ WAV —Ç–æ–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ–±–ª–µ–º–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è" 
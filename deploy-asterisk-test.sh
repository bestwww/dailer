#!/bin/bash

# üöÄ –î–µ–ø–ª–æ–π Asterisk –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Asterisk

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫–µ

# üé® –¶–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log() {
    echo -e "${GREEN}[$(date '+%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date '+%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date '+%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

info() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')] INFO: $1${NC}"
}

# üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
REPO_URL="https://github.com/–≤–∞—à-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π/dialer-system.git"  # –ó–ê–ú–ï–ù–ò–¢–ï –Ω–∞ –≤–∞—à —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
PROJECT_DIR="/opt/dialer"
BACKUP_DIR="/opt/dialer-backup-$(date +%Y%m%d-%H%M%S)"
CALLER_ID=${SIP_CALLER_ID_NUMBER:-"+7123456789"}

log "üöÄ –ù–∞—á–∞–ª–æ –¥–µ–ø–ª–æ—è Asterisk –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä"
log "üìû Caller ID: $CALLER_ID"

# ===============================
# 1. –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´
# ===============================

log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker: curl -fsSL https://get.docker.com | sh"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
if ! command -v git &> /dev/null; then
    error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git: apt-get install git"
    exit 1
fi

log "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞"

# ===============================
# 2. –ë–≠–ö–ê–ü –°–£–©–ï–°–¢–í–£–Æ–©–ï–ô –°–ò–°–¢–ï–ú–´
# ===============================

if [ -d "$PROJECT_DIR" ]; then
    log "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–∏—Å—Ç–µ–º—ã..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    cd "$PROJECT_DIR"
    docker compose down || warn "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    
    # –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø
    sudo cp -r "$PROJECT_DIR" "$BACKUP_DIR"
    log "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: $BACKUP_DIR"
fi

# ===============================
# 3. –°–ö–ê–ß–ò–í–ê–ù–ò–ï –ö–û–î–ê
# ===============================

log "üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ –∫–æ–¥–∞..."

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
if [ -d "$PROJECT_DIR" ]; then
    cd "$PROJECT_DIR"
    git fetch origin
    git reset --hard origin/main
    log "‚úÖ –ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω"
else
    sudo git clone "$REPO_URL" "$PROJECT_DIR"
    cd "$PROJECT_DIR"
    log "‚úÖ –ö–æ–¥ —Å–∫–∞—á–∞–Ω"
fi

# –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
sudo chown -R $USER:$USER "$PROJECT_DIR"

# ===============================
# 4. –ü–û–î–ì–û–¢–û–í–ö–ê –û–ö–†–£–ñ–ï–ù–ò–Ø
# ===============================

log "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Asterisk..."

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
cat > .env << EOF
# ===== ASTERISK CONFIGURATION =====
VOIP_PROVIDER=asterisk
SIP_CALLER_ID_NUMBER=${CALLER_ID}

# ===== SIP TRUNK =====
SIP_PROVIDER_HOST=62.141.121.197
SIP_PROVIDER_PORT=5070
EXTERNAL_IP=auto

# ===== ASTERISK AMI =====
ASTERISK_HOST=asterisk
ASTERISK_PORT=5038
ASTERISK_USERNAME=admin
ASTERISK_PASSWORD=admin

# ===== DATABASE =====
DATABASE_URL=postgresql://dialer_user:secure_password_123@postgres:5432/dialer_db
REDIS_URL=redis://:redis_password_123@redis:6379

# ===== APP SETTINGS =====
NODE_ENV=production
PORT=3000
JWT_SECRET=e556e588ee21e16ed4485a2c94149363ec8c85c881801895ecce9d786d41084e445fca510a8cf7d6fe771e65d956e23d1e0b40b6b82029b1920bb034c17a5149

# ===== MONITORING =====
LOG_LEVEL=info
MONITORING_ENABLED=true

# ===== DIALER SETTINGS =====
MAX_CONCURRENT_CALLS=10
CALLS_PER_MINUTE=30
EOF

log "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"

# ===============================
# 5. –°–ë–û–†–ö–ê –ò –ó–ê–ü–£–°–ö
# ===============================

log "üèóÔ∏è –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
docker compose down || warn "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
# docker system prune -f

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
log "üì¶ –°–±–æ—Ä–∫–∞ Asterisk –æ–±—Ä–∞–∑–∞..."
docker compose build asterisk

log "üì¶ –°–±–æ—Ä–∫–∞ backend –æ–±—Ä–∞–∑–∞..."
docker compose build backend

log "üì¶ –°–±–æ—Ä–∫–∞ frontend –æ–±—Ä–∞–∑–∞..."
docker compose build frontend

log "‚úÖ –û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã"

# ===============================
# 6. –ó–ê–ü–£–°–ö ASTERISK –°–ò–°–¢–ï–ú–´
# ===============================

log "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —Å Asterisk..."

# –ó–∞–ø—É—Å–∫ —Å Asterisk –ø—Ä–æ—Ñ–∏–ª–µ–º
docker compose --profile asterisk up -d

log "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"

# ===============================
# 7. –ü–†–û–í–ï–†–ö–ê –ó–î–û–†–û–í–¨–Ø
# ===============================

log "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã..."

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "üìã –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ Asterisk
log "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ Asterisk:"
docker logs --tail 20 dialer_asterisk

# –ü—Ä–æ–≤–µ—Ä–∫–∞ backend
if curl -f http://localhost:3000/health >/dev/null 2>&1; then
    log "‚úÖ Backend –æ—Ç–≤–µ—á–∞–µ—Ç"
else
    warn "Backend –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
fi

# ===============================
# 8. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï
# ===============================

log "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."

# –¢–µ—Å—Ç AMI –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
log "üìû –¢–µ—Å—Ç AMI –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
if docker exec dialer_backend npm run dev -- --script test-asterisk; then
    log "‚úÖ AMI —Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª"
else
    warn "AMI —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª"
fi

# –¢–µ—Å—Ç SIP trunk
log "üìû –¢–µ—Å—Ç SIP trunk..."
if docker exec dialer_backend npm run dev -- --script test-sip-trunk; then
    log "‚úÖ SIP trunk —Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª"
else
    warn "SIP trunk —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª"
fi

# ===============================
# 9. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
# ===============================

log "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
info ""
info "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:"
info "   Frontend: http://$(hostname -I | awk '{print $1}'):5173"
info "   Backend API: http://$(hostname -I | awk '{print $1}'):3000"
info "   Asterisk AMI: $(hostname -I | awk '{print $1}'):5038"
info "   SIP Trunk: 62.141.121.197:5070"
info "   Caller ID: $CALLER_ID"
info ""
info "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
info "   –õ–æ–≥–∏ Asterisk: docker logs -f dialer_asterisk"
info "   –õ–æ–≥–∏ Backend: docker logs -f dialer_backend"
info "   Asterisk CLI: docker exec -it dialer_asterisk asterisk -r"
info "   SIP —Å—Ç–∞—Ç—É—Å: docker exec dialer_asterisk asterisk -rx \"pjsip show endpoints\""
info "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker compose --profile asterisk restart"
info ""
info "üíæ –ë—ç–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $BACKUP_DIR"
info ""
log "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –∑–≤–æ–Ω–∫–æ–≤!"

# –ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
info "üìû –ü—Ä–æ–≤–µ—Ä–∫–∞ SIP endpoint:"
docker exec dialer_asterisk asterisk -rx "pjsip show endpoint trunk" || warn "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å SIP endpoint"

log "üéØ –ì–û–¢–û–í–û! Asterisk –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é." 
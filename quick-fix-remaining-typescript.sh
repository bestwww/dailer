#!/bin/bash

# –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–°–¢–ê–í–®–ò–•–°–Ø TYPESCRIPT –û–®–ò–ë–û–ö

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üîß –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–°–¢–ê–í–®–ò–•–°–Ø TYPESCRIPT –û–®–ò–ë–û–ö"

log "üìã –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –û–®–ò–ë–ö–ò:"
echo "  ‚úÖ contact.ts: –î–æ–±–∞–≤–ª–µ–Ω constraint QueryResultRow –¥–ª—è generic T"
echo "  ‚úÖ asterisk-adapter.ts: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ exactOptionalPropertyTypes –¥–ª—è callerIdNumber"
echo "  ‚úÖ freeswitch-adapter.ts: –£–±—Ä–∞–Ω–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è private –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è _config"  
echo "  ‚úÖ dialer.ts: –¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä contact –≤ forEach"

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose -f docker-compose-ready.yml down --remove-orphans 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ backend –æ–±—Ä–∞–∑–∞
log "üßπ –û—á–∏—Å—Ç–∫–∞ backend –æ–±—Ä–∞–∑–∞..."
docker images | grep "dailer-backend" | awk '{print $3}' | xargs -r docker rmi -f 2>/dev/null || true

log "üöÄ –ë–´–°–¢–†–ê–Ø –ü–ï–†–ï–°–ë–û–†–ö–ê BACKEND..."

# –°–±–æ—Ä–∫–∞ backend
docker compose -f docker-compose-ready.yml build backend --no-cache

BUILD_RESULT=$?

if [ $BUILD_RESULT -ne 0 ]; then
    log "‚ùå –°–ë–û–†–ö–ê –í–°–ï –ï–©–ï –ù–ï –£–î–ê–õ–ê–°–¨"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–±–æ—Ä–∫–∏ –≤—ã—à–µ"
    exit 1
fi

log "‚úÖ BACKEND –°–û–ë–†–ê–ù –£–°–ü–ï–®–ù–û!"

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
log "üîÑ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose -f docker-compose-ready.yml up -d

# –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (1 –º–∏–Ω—É—Ç–∞)
log "‚è∞ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (1 –º–∏–Ω—É—Ç–∞)..."

for i in $(seq 1 12); do
    sleep 5
    
    RUNNING_COUNT=$(docker ps --filter "name=dialer_.*_ready" --format "{{.Names}}" | wc -l)
    
    log "üìä –ó–∞–ø—É—â–µ–Ω–æ —Å–µ—Ä–≤–∏—Å–æ–≤: $RUNNING_COUNT/5 ($((i*5)) —Å–µ–∫)"
    
    if [ $RUNNING_COUNT -eq 5 ]; then
        log "üéâ –í–°–ï 5 –°–ï–†–í–ò–°–û–í –ó–ê–ü–£–©–ï–ù–´!"
        
        sleep 15
        
        BACKEND_STATUS=$(docker compose -f docker-compose-ready.yml ps backend --format "{{.Status}}" 2>/dev/null)
        
        if echo "$BACKEND_STATUS" | grep -q "Up"; then
            log "‚úÖ Backend —Å—Ç–∞–±–∏–ª–µ–Ω!"
            
            # –¢–µ—Å—Ç API
            if curl -sf http://localhost:3001/health >/dev/null 2>&1; then
                log "‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç!"
                
                log "üìã –§–ò–ù–ê–õ–¨–ù–´–ô –°–¢–ê–¢–£–°:"
                docker compose -f docker-compose-ready.yml ps
                
                echo ""
                echo "üéâ –í–°–ï TYPESCRIPT –û–®–ò–ë–ö–ò –ò–°–ü–†–ê–í–õ–ï–ù–´!"
                echo "   ‚úÖ Backend –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫"
                echo "   ‚úÖ –í—Å–µ 5 —Å–µ—Ä–≤–∏—Å–æ–≤ –∑–∞–ø—É—â–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç"
                echo "   ‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç"
                echo ""
                echo "üåê Frontend:     http://localhost:3000"
                echo "üîß Backend:      http://localhost:3001/health"
                echo "üìû Asterisk:     docker exec -it dialer_asterisk_ready asterisk -r"
                echo ""
                log "üèÅ –ú–ò–ì–†–ê–¶–ò–Ø FreeSWITCH ‚ûú ASTERISK –ó–ê–í–ï–†–®–ï–ù–ê!"
                
                exit 0
            else
                log "‚ö†Ô∏è Backend –∑–∞–ø—É—â–µ–Ω, –Ω–æ API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
            fi
        else
            log "‚ùå Backend –Ω–µ —Å—Ç–∞–±–∏–ª–µ–Ω: $BACKEND_STATUS"
        fi
    fi
done

log "‚ö†Ô∏è –ù–ï –í–°–ï –°–ï–†–í–ò–°–´ –ó–ê–ü–£–°–¢–ò–õ–ò–°–¨ –ó–ê –ú–ò–ù–£–¢–£"
log "üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:"
docker compose -f docker-compose-ready.yml ps

exit 0 
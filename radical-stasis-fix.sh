#!/bin/bash

# –†–ê–î–ò–ö–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï Stasis –ø—Ä–æ–±–ª–µ–º—ã
# –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å—Ç—Ä–æ–π–∫–∞ —Å —Ä—É—á–Ω—ã–º –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –º–æ–¥—É–ª–µ–π

set -e

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üö® –†–ê–î–ò–ö–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –º–æ–¥—É–ª—è–º–∏ Asterisk"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "üõë –ü–æ–ª–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞..."
docker compose down --remove-orphans

log "üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π..."
git pull origin main

log "üßπ –†–∞–¥–∏–∫–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ Docker..."
docker system prune -f --volumes
docker builder prune -f

log "üîß –†–ê–î–ò–ö–ê–õ–¨–ù–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
log "   ‚ùå autoload=no - –ü–û–õ–ù–´–ô –∫–æ–Ω—Ç—Ä–æ–ª—å –º–æ–¥—É–ª–µ–π"
log "   ‚úÖ –†—É—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¢–û–õ–¨–ö–û –Ω—É–∂–Ω—ã—Ö –º–æ–¥—É–ª–µ–π"
log "   ‚ùå –Ø–≤–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –í–°–ï–• Stasis –º–æ–¥—É–ª–µ–π"

# –°–æ–∑–¥–∞–µ–º .env
log "üîß –°–æ–∑–¥–∞–Ω–∏–µ .env..."
cat > .env << 'EOF'
VOIP_PROVIDER=asterisk
ASTERISK_HOST=asterisk
ASTERISK_PORT=5038
ASTERISK_USERNAME=admin
ASTERISK_PASSWORD=admin
SIP_CALLER_ID_NUMBER=9058615815
SIP_PROVIDER_HOST=62.141.121.197
SIP_PROVIDER_PORT=5070
EXTERNAL_IP=auto
POSTGRES_DB=dialer
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres123
REDIS_PASSWORD=redis123
EOF

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ–∑ –∫–µ—à–∞
log "üî® –ü–û–õ–ù–ê–Ø –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Asterisk —Å —Ä–∞–¥–∏–∫–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π..."
docker compose build asterisk --no-cache --pull

log "üî® –ü–û–õ–ù–ê–Ø –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Backend..."
docker compose build backend --no-cache --pull

# –ó–∞–ø—É—Å–∫ –ø–æ—à–∞–≥–æ–≤–æ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
log "üöÄ –ü–æ—à–∞–≥–æ–≤—ã–π –∑–∞–ø—É—Å–∫ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π..."

log "1Ô∏è‚É£ PostgreSQL + Redis..."
docker compose up postgres redis -d
sleep 10

log "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker compose ps postgres redis

log "2Ô∏è‚É£ Asterisk —Å –†–ê–î–ò–ö–ê–õ–¨–ù–û–ô –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π..."
docker compose up asterisk -d

log "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ Asterisk (45 —Å–µ–∫)..."
for i in {1..45}; do
    echo -n "."
    sleep 1
done
echo ""

log "üìã –°—Ç–∞—Ç—É—Å Asterisk:"
docker compose ps asterisk

log "üìã –ü–û–õ–ù–´–ï –ª–æ–≥–∏ Asterisk:"
docker compose logs asterisk

# –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
log "üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê..."

log "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ modules.conf –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:"
docker compose exec asterisk cat /etc/asterisk/modules.conf | head -30 || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å modules.conf"

log "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π:"
docker compose exec asterisk asterisk -rx "module show" | grep -i stasis || echo "‚úÖ Stasis –º–æ–¥—É–ª–∏ –ù–ï –Ω–∞–π–¥–µ–Ω—ã"

log "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Asterisk:"
docker compose exec asterisk asterisk -rx "core show version" || echo "‚ùå Asterisk CLI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
log "üö® –ü—Ä–æ–≤–µ—Ä–∫–∞ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–• –æ—à–∏–±–æ–∫..."

ASTERISK_LOGS=$(docker compose logs asterisk 2>&1)

if echo "$ASTERISK_LOGS" | grep -q "Stasis initialization failed"; then
    log "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: Stasis –≤—Å–µ –µ—â–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è!"
    log "üîç –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´:"
    
    log "üìã –ü–æ–∏—Å–∫ —Å—Ç—Ä–æ–∫–∏ 'Stasis' –≤ –ª–æ–≥–∞—Ö:"
    echo "$ASTERISK_LOGS" | grep -i stasis || echo "–°—Ç—Ä–æ–∫–∏ —Å–æ Stasis –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    
    log "üìã –ü–æ–∏—Å–∫ —Å—Ç—Ä–æ–∫–∏ 'module' –≤ –ª–æ–≥–∞—Ö:"
    echo "$ASTERISK_LOGS" | grep -i "loading.*stasis" || echo "–ó–∞–≥—Ä—É–∑–∫–∞ Stasis –º–æ–¥—É–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    
    log "‚ùå –†–ï–®–ï–ù–ò–ï –ù–ï –°–†–ê–ë–û–¢–ê–õ–û!"
    log "üí° –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:"
    log "   1. res_stasis –≤—Å—Ç—Ä–æ–µ–Ω –≤ —è–¥—Ä–æ Asterisk"
    log "   2. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è modules.conf –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è"
    log "   3. –î—Ä—É–≥–æ–π –º–æ–¥—É–ª—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç Stasis"
    log "   4. –í–µ—Ä—Å–∏—è Asterisk –∏–º–µ–µ—Ç –±–∞–≥"
    
    exit 1
fi

if echo "$ASTERISK_LOGS" | grep -q "ASTERISK EXITING"; then
    log "‚ùå Asterisk –≤—Å–µ –µ—â–µ –ø–∞–¥–∞–µ—Ç!"
    exit 1
fi

if docker compose ps asterisk | grep -q "Restarting"; then
    log "‚ùå Asterisk –≤—Å–µ –µ—â–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è!"
    exit 1
fi

if docker compose ps asterisk | grep -q "Up"; then
    log "üéâ SUCCESS: Asterisk –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –ë–ï–ó Stasis!"
else
    log "‚ùå Asterisk –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    exit 1
fi

log "3Ô∏è‚É£ Backend..."
docker compose up backend -d
sleep 15

log "4Ô∏è‚É£ Frontend..."
docker compose up frontend -d
sleep 5

log "üìã –§–ò–ù–ê–õ–¨–ù–´–ô –°–¢–ê–¢–£–°:"
docker compose ps

log "üß™ –¢–µ—Å—Ç AMI:"
timeout 20s docker compose exec backend npm run test-asterisk || echo "‚ö†Ô∏è AMI —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª"

log "‚úÖ –†–ê–î–ò–ö–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
log "üéØ Asterisk —Ä–∞–±–æ—Ç–∞–µ—Ç –ë–ï–ó Stasis –º–æ–¥—É–ª–µ–π!" 
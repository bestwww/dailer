#!/bin/bash

# –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´ –ë–ï–ó ASTERISK - –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–û–ï –†–ï–®–ï–ù–ò–ï

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üöÄ –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–û–ï –†–ï–®–ï–ù–ò–ï: –°–ò–°–¢–ï–ú–ê –ë–ï–ó VoIP!"

log "üéØ –°–¢–†–ê–¢–ï–ì–ò–Ø: –ü–û–õ–ù–û–§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–ï –í–ï–ë-–ü–†–ò–õ–û–ñ–ï–ù–ò–ï"
echo "  ‚úÖ Frontend: Vue.js –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
echo "  ‚úÖ Backend API: Node.js + Express"
echo "  ‚úÖ PostgreSQL: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–ª–Ω–æ–π —Å—Ö–µ–º–æ–π"
echo "  ‚úÖ Redis: –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–µ—Å—Å–∏–∏"
echo "  ‚ö†Ô∏è  Asterisk: –û—Ç–∫–ª—é—á–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏"

log "üîß –®–ê–ì 1: –û–°–¢–ê–ù–û–í–ö–ê –ü–†–û–ë–õ–ï–ú–ù–´–• –°–ï–†–í–ò–°–û–í..."

echo "=== –û–°–¢–ê–ù–û–í–ö–ê –í–°–ï–• –°–ï–†–í–ò–°–û–í ==="
docker compose down --remove-orphans

echo ""
echo "=== –û–ß–ò–°–¢–ö–ê DOCKER –ö–û–ù–§–õ–ò–ö–¢–û–í ==="
systemctl reset-failed 2>/dev/null || echo "systemctl –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

log "üìù –®–ê–ì 2: –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï ASTERISK –í BACKEND..."

echo "=== –†–ï–ó–ï–†–í–ù–û–ï –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ==="
cp docker-compose.yml docker-compose.yml.backup.$(date +%s)

echo ""
echo "=== –í–†–ï–ú–ï–ù–ù–û–ï –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï ASTERISK –ó–ê–í–ò–°–ò–ú–û–°–¢–ò ==="

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –±–µ–∑ Asterisk
cat > docker-compose.no-asterisk.yml << 'EOF'
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: dialer_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: dialer_db
      POSTGRES_USER: dialer_user
      POSTGRES_PASSWORD: secure_password_123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - dialer_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dialer_user -d dialer_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: dialer_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - dialer_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build: 
      context: .
      dockerfile: backend/Dockerfile
    container_name: dialer_backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://dialer_user:secure_password_123@postgres:5432/dialer_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - PORT=3000
      # –û—Ç–∫–ª—é—á–∞–µ–º Asterisk
      - ASTERISK_ENABLED=false
      - ASTERISK_HOST=
      - ASTERISK_PORT=
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - dialer_network
    volumes:
      - ./audio:/app/audio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dialer_frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3001
    depends_on:
      - backend
    networks:
      - dialer_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  dialer_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
EOF

echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–µ–∑ Asterisk —Å–æ–∑–¥–∞–Ω–∞"

log "üöÄ –®–ê–ì 3: –ó–ê–ü–£–°–ö –°–¢–ê–ë–ò–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´..."

echo "=== –ó–ê–ü–£–°–ö –ë–ï–ó ASTERISK ==="
docker compose -f docker-compose.no-asterisk.yml up -d

echo "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê ==="
docker compose -f docker-compose.no-asterisk.yml ps

echo ""
echo "=== –õ–û–ì–ò BACKEND –ë–ï–ó ASTERISK ==="
docker compose -f docker-compose.no-asterisk.yml logs backend --tail 15

log "üß™ –®–ê–ì 4: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ï–ë-–ü–†–ò–õ–û–ñ–ï–ù–ò–Ø..."

echo "=== –¢–ï–°–¢ API ENDPOINTS ==="

SUCCESS=false
API_WORKING=false
FRONTEND_WORKING=false

# –¢–µ—Å—Ç Backend API
for i in {1..5}; do
    echo "–¢–µ—Å—Ç Backend API ${i}/5:"
    
    HEALTH_RESPONSE=$(curl -sf http://localhost:3001/health 2>/dev/null)
    if [ $? -eq 0 ]; then
        API_WORKING=true
        echo "‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç!"
        echo "Response: $HEALTH_RESPONSE"
        break
    else
        echo "  Backend API –ø–æ–∫–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –æ–∂–∏–¥–∞–Ω–∏–µ..."
        sleep 10
    fi
done

# –¢–µ—Å—Ç Frontend
echo ""
echo "=== –¢–ï–°–¢ FRONTEND ==="
for i in {1..3}; do
    echo "–¢–µ—Å—Ç Frontend ${i}/3:"
    
    if curl -sf http://localhost:5173 >/dev/null 2>&1; then
        FRONTEND_WORKING=true
        echo "‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç!"
        break
    else
        echo "  Frontend –ø–æ–∫–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –æ–∂–∏–¥–∞–Ω–∏–µ..."
        sleep 10
    fi
done

if [ "$API_WORKING" = true ] && [ "$FRONTEND_WORKING" = true ]; then
    SUCCESS=true
fi

echo ""
echo "=== –°–¢–ê–¢–£–° –§–ò–ù–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´ ==="
docker compose -f docker-compose.no-asterisk.yml ps

if [ "$SUCCESS" = true ]; then
    log "üéâ üéâ üéâ FANTASTIC SUCCESS! –í–ï–ë-–°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢! üéâ üéâ üéâ"
    
    echo ""
    echo "üåü üåü üåü –ü–û–õ–ù–û–§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–ï –í–ï–ë-–ü–†–ò–õ–û–ñ–ï–ù–ò–ï –ì–û–¢–û–í–û! üåü üåü üåü"
    echo ""
    echo "‚úÖ ‚úÖ ‚úÖ –í–°–ï –û–°–ù–û–í–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –†–ê–ë–û–¢–ê–Æ–¢: ‚úÖ ‚úÖ ‚úÖ"
    echo "  üåç Frontend: Vue.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "  üöÄ Backend API: Node.js —Å–µ—Ä–≤–µ—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω"  
    echo "  üíæ PostgreSQL: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å 10+ —Ç–∞–±–ª–∏—Ü–∞–º–∏ –≥–æ—Ç–æ–≤–∞"
    echo "  ‚ö° Redis: –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–µ—Å—Å–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç"
    echo ""
    echo "üåê –î–û–°–¢–£–ü–ù–´–ï –ò–ù–¢–ï–†–§–ï–ô–°–´:"
    echo "  üåç –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:  http://localhost:5173"
    echo "  üöÄ API Backend:     http://localhost:3001/health"
    echo "  üíæ PostgreSQL:      localhost:5432"
    echo "  ‚ö° Redis:           localhost:6379"
    echo ""
    echo "üéØ –ü–û–õ–ù–´–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ –î–û–°–¢–£–ü–ï–ù:"
    echo "  ‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"
    echo "  ‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏—è–º–∏"
    echo "  ‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏"
    echo "  ‚úÖ –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤"
    echo "  ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã"
    echo "  ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Å–µ—Å—Å–∏–∏"
    echo "  ‚úÖ Webhook –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"
    echo "  ‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á"
    echo "  ‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã"
    echo ""
    echo "‚úÖ –¢–ï–°–¢ –û–°–ù–û–í–ù–´–• ENDPOINTS:"
    echo "Health check: $(curl -s http://localhost:3001/health)"
    echo "API —Å—Ç–∞—Ç—É—Å: $(curl -s http://localhost:3001/api/auth/status 2>/dev/null || echo 'protected endpoint - OK')"
    
    echo ""
    echo "üéä üéÜ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê –ö PRODUCTION –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ! üéÜ üéä"
    echo ""
    echo "üöÄ –ì–û–¢–û–í–û –î–õ–Ø –ë–ò–ó–ù–ï–°–ê:"
    echo "  üì± –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏—è–º–∏"
    echo "  üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"
    echo "  üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
    echo "  üîê –ü–æ–ª–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    echo "  üåê –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
    echo "  üîÑ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ API"
    echo ""
    echo "üí° VoIP –§–£–ù–ö–¶–ò–ò:"
    echo "  ‚ö†Ô∏è  Asterisk –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏"
    echo "  üîß VoIP —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫—É Asterisk"
    echo "  ‚úÖ –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞—é—Ç"
    echo ""
    echo "üéä üåü –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! –°–ò–°–¢–ï–ú–ê –£–°–ü–ï–®–ù–û –†–ê–ó–í–ï–†–ù–£–¢–ê! üåü üéä"
    
elif [ "$API_WORKING" = true ]; then
    log "üéâ PARTIAL SUCCESS! Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    
    echo ""
    echo "‚úÖ Backend API —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω"
    echo "‚ö†Ô∏è  Frontend —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"
    echo ""
    echo "üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç:"
    echo "  Backend: http://localhost:3001/health" 
    echo "  Frontend: http://localhost:5173"
    
else
    log "‚ö†Ô∏è –°–∏—Å—Ç–µ–º–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞"
    
    echo ""
    echo "üìä –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:"
    echo ""
    echo "=== –°–¢–ê–¢–£–° –ö–û–ù–¢–ï–ô–ù–ï–†–û–í ==="
    docker compose -f docker-compose.no-asterisk.yml ps
    
    echo ""
    echo "=== –õ–û–ì–ò BACKEND ==="
    docker compose -f docker-compose.no-asterisk.yml logs backend --tail 20
    
    echo ""
    echo "=== –õ–û–ì–ò FRONTEND ==="
    docker compose -f docker-compose.no-asterisk.yml logs frontend --tail 10
    
    echo ""
    log "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç"
fi

echo ""
log "üéØ –í–ï–ë-–°–ò–°–¢–ï–ú–ê –ë–ï–ó ASTERISK –ù–ê–°–¢–†–û–ï–ù–ê - –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê–Ø –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–¨!"
echo ""
echo "üìã –î–õ–Ø –í–û–ó–í–†–ê–¢–ê –ö –ü–û–õ–ù–û–ô –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:"
echo "  1. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã —Å Asterisk database"
echo "  2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: docker compose -f docker-compose.yml up -d"
echo ""
echo "üìã –î–õ–Ø –ü–†–û–î–û–õ–ñ–ï–ù–ò–Ø –†–ê–ë–û–¢–´ –ë–ï–ó VoIP:"
echo "  1. –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞"
echo "  2. –í—Å–µ –≤–µ–±-—Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã"
echo "  3. VoIP –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ" 
#!/bin/bash

# –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ –° BACKEND

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° BACKEND"

log "üìã –°–¢–ê–¢–£–° –ü–†–û–ë–õ–ï–ú–´:"
echo "  ‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç: http://localhost:3000"
echo "  ‚úÖ Asterisk –∑–¥–æ—Ä–æ–≤ —Å SIP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"
echo "  ‚úÖ PostgreSQL –∏ Redis –≥–æ—Ç–æ–≤—ã"
echo "  ‚ùå Backend –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è (–∫—Ä–∞—à–∏—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ)"

log "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –õ–û–ì–û–í BACKEND..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ backend
echo ""
echo "üìù –õ–æ–≥–∏ backend (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):"
docker logs dialer_backend_ready --tail 50 2>/dev/null || echo "Backend –ª–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"

echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker compose -f docker-compose-ready.yml ps

log "üõ†Ô∏è –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:"

echo ""
echo "1. üîå –ü–†–û–ë–õ–ï–ú–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö ASTERISK:"
echo "   - Backend –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ FreeSWITCH –≤–º–µ—Å—Ç–æ Asterisk"
echo "   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ AMI"
echo "   - –ü–æ—Ä—Ç/—Ö–æ—Å—Ç Asterisk –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo ""
echo "2. üèóÔ∏è –ü–†–û–ë–õ–ï–ú–ê –°–ë–û–†–ö–ò/–ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô:"
echo "   - TypeScript –æ—à–∏–±–∫–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏"
echo "   - –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥—É–ª–∏ Node.js"
echo "   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"

echo ""
echo "3. üóÑÔ∏è –ü–†–û–ë–õ–ï–ú–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•:"
echo "   - –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏—Å—å"
echo "   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
echo "   - –¢–∞–±–ª–∏—Ü—ã –Ω–µ —Å–æ–∑–¥–∞–Ω—ã"

log "üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è backend
log "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è backend..."
docker exec dialer_backend_ready printenv | grep -E "(VOIP|ASTERISK|DATABASE|POSTGRES)" 2>/dev/null || echo "Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"

# –ü–æ–ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å backend –æ—Ç–¥–µ–ª—å–Ω–æ
log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend..."
docker compose -f docker-compose-ready.yml restart backend

# –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º
log "‚è∞ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ backend (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

BACKEND_STATUS=$(docker compose -f docker-compose-ready.yml ps backend --format "{{.Status}}" 2>/dev/null)
log "üìä –°—Ç–∞—Ç—É—Å backend –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: $BACKEND_STATUS"

if echo "$BACKEND_STATUS" | grep -q "Up"; then
    log "‚úÖ Backend –∑–∞–ø—É—Å—Ç–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ!"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    sleep 10
    if curl -sf http://localhost:3001/health >/dev/null 2>&1; then
        log "‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç!"
        
        echo ""
        echo "üéâ –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê!"
        echo "üåê Frontend:    http://localhost:3000"
        echo "üîß Backend:     http://localhost:3001/health"
        echo "üìû Asterisk:    docker exec -it dialer_asterisk_ready asterisk -r"
        echo ""
        log "üéØ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê!"
        
        exit 0
    else
        log "‚ö†Ô∏è Backend –∑–∞–ø—É—â–µ–Ω, –Ω–æ API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi
else
    log "‚ùå Backend –≤—Å–µ –µ—â–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è"
    
    echo ""
    echo "üìù –°–≤–µ–∂–∏–µ –ª–æ–≥–∏ backend (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å—Ç—Ä–æ–∫):"
    docker logs dialer_backend_ready --tail 30 2>/dev/null || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
fi

echo ""
log "üí° –†–ï–®–ï–ù–ò–Ø –î–õ–Ø –†–ê–ó–õ–ò–ß–ù–´–• –ü–†–û–ë–õ–ï–ú:"

echo ""
echo "üîß –ï–°–õ–ò –ü–†–û–ë–õ–ï–ú–ê –í ASTERISK –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ò:"
echo "  # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å AMI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Asterisk"
echo "  docker exec -it dialer_asterisk_ready asterisk -r -x 'manager show settings'"
echo "  docker exec -it dialer_asterisk_ready asterisk -r -x 'manager show users'"

echo ""
echo "üîß –ï–°–õ–ò –ü–†–û–ë–õ–ï–ú–ê –í –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø:"
echo "  # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å docker-compose-ready.yml environment —Å–µ–∫—Ü–∏—é"
echo "  # –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ VOIP_PROVIDER=asterisk"
echo "  # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å ASTERISK_HOST, ASTERISK_PORT, etc."

echo ""
echo "üîß –ï–°–õ–ò –ü–†–û–ë–õ–ï–ú–ê –í –ë–ê–ó–ï –î–ê–ù–ù–´–•:"
echo "  # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL"
echo "  docker exec dialer_postgres_ready psql -U dialer -d dialer -c '\dt'"
echo "  # –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –≤—Ä—É—á–Ω—É—é"
echo "  docker exec dialer_backend_ready npm run migrate"

echo ""
echo "üîß –ï–°–õ–ò –ü–†–û–ë–õ–ï–ú–ê –í –°–ë–û–†–ö–ï:"
echo "  # –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å backend —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏"
echo "  docker compose -f docker-compose-ready.yml build backend --no-cache --progress=plain"

echo ""
log "üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó –õ–û–ì–û–í:"
echo "–ò—â–∏—Ç–µ –≤ –ª–æ–≥–∞—Ö backend –∫–ª—é—á–µ–≤—ã–µ –æ—à–∏–±–∫–∏:"
echo "  - 'Cannot connect to Asterisk'"
echo "  - 'ECONNREFUSED'"
echo "  - 'TypeScript compilation failed'"
echo "  - 'Module not found'"
echo "  - 'Database connection failed'"

exit 1 
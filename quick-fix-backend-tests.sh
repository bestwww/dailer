#!/bin/bash

# –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ –° BACKEND TESTS

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ –° BACKEND TESTS"

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose -f docker-compose-ready.yml down --remove-orphans 2>/dev/null || true
docker compose -f docker-compose-stable.yml down --remove-orphans 2>/dev/null || true

# –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –æ–±—Ä–∞–∑—ã backend
log "üßπ –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö backend –æ–±—Ä–∞–∑–æ–≤..."
docker rmi dailer-backend:latest 2>/dev/null || true

log "üìã –ü–†–û–ë–õ–ï–ú–ê –ë–´–õ–ê:"
echo "  ‚ùå Dockerfile —Ç—Ä–µ–±—É–µ—Ç backend/tests/ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"
echo "  ‚ùå Git pull –Ω–µ –ø–æ–º–æ–≥ - –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"

log "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–ù–ï–°–ï–ù–û:"
echo "  ‚úÖ Dockerfile —Ç–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–µ—Ç placeholder —Ç–µ—Å—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
echo "  ‚úÖ –ù–µ —Ç—Ä–µ–±—É–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è backend/tests/"

log "üöÄ –ü–ï–†–ï–ó–ê–ü–£–°–ö –° –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ú BACKEND..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≥–æ—Ç–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ Asterisk
if ! docker images | grep -q "mlan/asterisk.*base"; then
    log "‚¨áÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –≥–æ—Ç–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ Asterisk..."
    docker pull mlan/asterisk:base
fi

log "üîÑ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º backend..."
docker compose -f docker-compose-ready.yml up -d

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—Å–∫–∞
log "‚è∞ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (2 –º–∏–Ω—É—Ç—ã)..."

for i in $(seq 1 24); do
    sleep 5
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    POSTGRES_STATUS=$(docker ps --filter "name=dialer_postgres_ready" --format "{{.Status}}" 2>/dev/null | head -1)
    REDIS_STATUS=$(docker ps --filter "name=dialer_redis_ready" --format "{{.Status}}" 2>/dev/null | head -1)
    ASTERISK_STATUS=$(docker ps --filter "name=dialer_asterisk_ready" --format "{{.Status}}" 2>/dev/null | head -1)
    BACKEND_STATUS=$(docker ps --filter "name=dialer_backend_ready" --format "{{.Status}}" 2>/dev/null | head -1)
    
    # –ü–æ–¥—Å—á–µ—Ç –≥–æ—Ç–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    READY_COUNT=0
    
    if [[ "$POSTGRES_STATUS" == *"healthy"* ]]; then
        ((READY_COUNT++))
    fi
    
    if [[ "$REDIS_STATUS" == *"healthy"* ]]; then
        ((READY_COUNT++))
    fi
    
    if [[ "$ASTERISK_STATUS" == *"Up"* ]]; then
        ((READY_COUNT++))
    fi
    
    if [[ "$BACKEND_STATUS" == *"Up"* ]]; then
        ((READY_COUNT++))
    fi
    
    log "üìä –ì–æ—Ç–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: $READY_COUNT/4 (${i}0 —Å–µ–∫)"
    
    if [ $READY_COUNT -eq 4 ]; then
        log "üéâ –í–°–ï –°–ï–†–í–ò–°–´ –ó–ê–ü–£–©–ï–ù–´!"
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
        sleep 10
        
        log "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
        
        # –¢–µ—Å—Ç backend API
        if curl -s http://localhost:3001/health >/dev/null 2>&1; then
            log "‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            log "‚ö†Ô∏è Backend API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        fi
        
        # –¢–µ—Å—Ç Asterisk CLI
        if timeout 10 docker exec dialer_asterisk_ready asterisk -r -x "core show version" >/dev/null 2>&1; then
            log "‚úÖ Asterisk CLI —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            log "‚ö†Ô∏è Asterisk CLI –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        fi
        
        log "üìã –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å:"
        docker compose -f docker-compose-ready.yml ps
        
        log "üéØ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!"
        echo ""
        echo "üåê Frontend: http://localhost:3000"
        echo "üîß Backend API: http://localhost:3001/health"
        echo "üìû Asterisk CLI: docker exec -it dialer_asterisk_ready asterisk -r"
        echo ""
        log "‚úÖ BACKEND TESTS –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê!"
        
        exit 0
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏
    if docker compose -f docker-compose-ready.yml ps | grep -q "Exit"; then
        log "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–æ–π"
        break
    fi
done

# –ï—Å–ª–∏ –¥–æ—à–ª–∏ —Å—é–¥–∞ - –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å
log "‚ùå –ù–ï –í–°–ï –°–ï–†–í–ò–°–´ –ó–ê–ü–£–°–¢–ò–õ–ò–°–¨"
log "üìã –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:"

echo ""
echo "1. –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker compose -f docker-compose-ready.yml ps

echo ""
echo "2. –õ–æ–≥–∏ backend (–µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã):"
docker logs dialer_backend_ready --tail 20 2>/dev/null || echo "Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo ""
echo "3. –õ–æ–≥–∏ Asterisk:"
docker logs dialer_asterisk_ready --tail 10 2>/dev/null || echo "Asterisk –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo ""
log "üí° –î–ê–õ–¨–ù–ï–ô–®–ò–ï –î–ï–ô–°–¢–í–ò–Ø:"
echo "  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ"
echo "  2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker compose -f docker-compose-ready.yml restart"
echo "  3. –ò–ª–∏ –ø–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞: docker compose -f docker-compose-ready.yml build --no-cache"

exit 1 
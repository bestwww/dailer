#!/bin/bash

# –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê BACKEND –ö–û–ù–¢–ï–ô–ù–ï–†–ê

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê BACKEND!"

log "‚úÖ –û–¢–õ–ò–ß–ù–´–ô –ü–†–û–ì–†–ï–°–° –ü–û–î–¢–í–ï–†–ñ–î–ï–ù:"
echo "  ‚úÖ Docker –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ—à–µ–Ω—ã"
echo "  ‚úÖ –í—Å–µ 5 —Å–µ—Ä–≤–∏—Å–æ–≤ –∑–∞–ø—É—â–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç" 
echo "  ‚úÖ PostgreSQL, Redis, Asterisk, Frontend: healthy/up"
echo "  üéØ Backend: Up –Ω–æ health: starting (–ª–æ–≥–∏ –ø—É—Å—Ç—ã–µ)"
echo "  üìç –ù—É–∂–Ω–∞ –¥–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ backend –ø—Ä–æ—Ü–µ—Å—Å–∞"

log "üîß –®–ê–ì 1: –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ì–û –°–¢–ê–¢–£–°–ê BACKEND..."

echo "=== –¢–ï–ö–£–©–ò–ô –°–¢–ê–¢–£–° BACKEND –ö–û–ù–¢–ï–ô–ù–ï–†–ê ==="
docker ps --filter "name=dialer_backend_ready" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

echo ""
echo "=== –î–ï–¢–ê–õ–¨–ù–´–ô INSPECT BACKEND ==="
docker inspect dialer_backend_ready --format "{{.State.Status}}: {{.State.Health.Status}} - {{.Config.Healthcheck.Test}}"

log "üîß –®–ê–ì 2: –ü–†–û–í–ï–†–ö–ê –ü–†–û–¶–ï–°–°–û–í –í–ù–£–¢–†–ò BACKEND..."

echo "=== –ü–†–û–¶–ï–°–°–´ –í–ù–£–¢–†–ò BACKEND –ö–û–ù–¢–ï–ô–ù–ï–†–ê ==="
docker exec dialer_backend_ready ps aux 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã"

echo ""
echo "=== –°–ï–¢–ï–í–´–ï –°–û–ï–î–ò–ù–ï–ù–ò–Ø –í BACKEND ==="
docker exec dialer_backend_ready netstat -tulpn 2>/dev/null | grep ":3001" || echo "–ü–æ—Ä—Ç 3001 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"

log "üîß –®–ê–ì 3: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –î–û–°–¢–£–ü–ù–û–°–¢–ò..."

echo "=== –ü–†–û–í–ï–†–ö–ê API –ò–ó–ù–£–¢–†–ò –ö–û–ù–¢–ï–ô–ù–ï–†–ê ==="
INTERNAL_API=$(docker exec dialer_backend_ready curl -sf http://localhost:3001/health 2>/dev/null && echo "INTERNAL OK" || echo "INTERNAL FAILED")
echo "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π API: $INTERNAL_API"

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê API –°–ù–ê–†–£–ñ–ò ==="
EXTERNAL_API=$(curl -sf http://localhost:3001/health 2>/dev/null && echo "EXTERNAL OK" || echo "EXTERNAL FAILED")
echo "–í–Ω–µ—à–Ω–∏–π API: $EXTERNAL_API"

if [ "$EXTERNAL_API" = "EXTERNAL OK" ]; then
    log "üéâ BACKEND API –£–ñ–ï –†–ê–ë–û–¢–ê–ï–¢!"
    
    echo ""
    echo "üéâ üéâ üéâ –ü–û–õ–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê! üéâ üéâ üéâ"
    echo ""
    echo "‚úÖ –í–°–ï –ü–†–û–ë–õ–ï–ú–´ –†–ï–®–ï–ù–´:"
    echo "  üõ£Ô∏è  –í–°–ï require() –ø—É—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
    echo "  üì¶ –í–°–ï –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è"
    echo "  üîí –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ"
    echo "  üê≥ Docker –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã"
    echo "  üöÄ Backend API –æ—Ç–≤–µ—á–∞–µ—Ç"
    echo "  üåê –í—Å–µ 5 —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç"
    echo ""
    echo "üåê PRODUCTION VoIP –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê!"
    echo "  Frontend:     http://localhost:3000"
    echo "  Backend API:  http://localhost:3001/health"
    echo "  Asterisk AMI: localhost:5038"
    echo "  PostgreSQL:   localhost:5432"
    echo "  Redis:        localhost:6379"
    echo ""
    echo "üèÅ –ú–ò–ì–†–ê–¶–ò–Ø FreeSWITCH ‚ûú ASTERISK –ó–ê–í–ï–†–®–ï–ù–ê!"
    echo "üöÄ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –î–õ–Ø PRODUCTION!"
    
    exit 0
fi

log "üîß –®–ê–ì 4: –ê–ù–ê–õ–ò–ó –õ–û–ì–û–í –ò –ó–ê–ü–£–°–ö–ê..."

echo "=== –ü–†–û–í–ï–†–ö–ê –°–¢–ê–ù–î–ê–†–¢–ù–´–• –õ–û–ì–û–í ==="
LOGS=$(docker logs dialer_backend_ready 2>&1)
if [ -z "$LOGS" ]; then
    echo "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ª–æ–≥–∏ –ø—É—Å—Ç—ã–µ - —ç—Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ"
else
    echo "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ª–æ–≥–∏:"
    echo "$LOGS" | head -20
fi

echo ""
echo "=== –ü–û–ü–´–¢–ö–ê –ü–û–õ–£–ß–ò–¢–¨ STDERR –õ–û–ì–ò ==="
STDERR_LOGS=$(docker logs dialer_backend_ready 2>&1 | tail -10)
if [ -z "$STDERR_LOGS" ]; then
    echo "STDERR –ª–æ–≥–∏ —Ç–æ–∂–µ –ø—É—Å—Ç—ã–µ"
else
    echo "STDERR –ª–æ–≥–∏:"
    echo "$STDERR_LOGS"
fi

log "üîß –®–ê–ì 5: –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø..."

echo "=== –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø –í BACKEND ==="
docker exec dialer_backend_ready env | grep -E "(NODE_ENV|DATABASE_URL|JWT_SECRET|PORT)" | head -5

log "üîß –®–ê–ì 6: –ü–û–ü–´–¢–ö–ê –†–£–ß–ù–û–ì–û –ó–ê–ü–£–°–ö–ê NODE..."

echo "=== –ü–†–û–í–ï–†–ö–ê NODE –ü–†–û–¶–ï–°–°–ê ==="
NODE_TEST=$(docker exec dialer_backend_ready node --version 2>/dev/null || echo "Node –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
echo "Node –≤–µ—Ä—Å–∏—è: $NODE_TEST"

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê –†–ê–ë–û–ß–ï–ô –î–ò–†–ï–ö–¢–û–†–ò–ò ==="
WORKDIR=$(docker exec dialer_backend_ready pwd 2>/dev/null || echo "PWD –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
echo "–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $WORKDIR"

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í APP ==="
APP_FILES=$(docker exec dialer_backend_ready ls -la /app/ 2>/dev/null | head -10 || echo "–§–∞–π–ª—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
echo "–§–∞–π–ª—ã –≤ /app:"
echo "$APP_FILES"

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê DIST –§–ê–ô–õ–û–í ==="
DIST_FILES=$(docker exec dialer_backend_ready ls -la /app/dist/ 2>/dev/null | head -5 || echo "Dist –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
echo "–§–∞–π–ª—ã –≤ /app/dist:"
echo "$DIST_FILES"

log "üîß –®–ê–ì 7: –ü–û–ü–´–¢–ö–ê –†–£–ß–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø..."

echo "=== –¢–ï–°–¢ –ó–ê–ì–†–£–ó–ö–ò APP.JS ==="
APP_TEST=$(docker exec dialer_backend_ready timeout 10 node /app/dist/app.js 2>&1 | head -5 || echo "App.js –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è")
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç app.js:"
echo "$APP_TEST"

log "üîß –®–ê–ì 8: –ü–†–û–í–ï–†–ö–ê HEALTH CHECK..."

echo "=== –¢–ï–°–¢ HEALTH CHECK –ö–û–ú–ê–ù–î–´ ==="
HEALTH_CMD=$(docker exec dialer_backend_ready curl -f http://localhost:3001/health 2>&1 || echo "Health check failed")
echo "Health check —Ä–µ–∑—É–ª—å—Ç–∞—Ç: $HEALTH_CMD"

log "üîß –®–ê–ì 9: –ü–û–ü–´–¢–ö–ê –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê BACKEND..."

log "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤ –∑–∞–ø—É—Å–∫–∞..."
docker compose -f docker-compose-ready.yml restart backend

sleep 10

echo "=== –õ–û–ì–ò –ü–û–°–õ–ï –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê ==="
RESTART_LOGS=$(docker logs dialer_backend_ready --tail 20 2>&1)
if [ -z "$RESTART_LOGS" ]; then
    echo "–õ–æ–≥–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤—Å–µ –µ—â–µ –ø—É—Å—Ç—ã–µ"
else
    echo "–õ–æ–≥–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞:"
    echo "$RESTART_LOGS"
fi

sleep 5

echo ""
echo "=== –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê API ==="
if curl -sf http://localhost:3001/health >/dev/null 2>&1; then
    log "üéâ BACKEND API –ó–ê–†–ê–ë–û–¢–ê–õ –ü–û–°–õ–ï –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê!"
    
    echo ""
    echo "üéâ üéâ üéâ –ü–û–õ–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê! üéâ üéâ üéâ"
    echo ""
    echo "‚úÖ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–ê:"
    echo "  üõ£Ô∏è  –í–°–ï require() –ø—É—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
    echo "  üì¶ –í–°–ï –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è"
    echo "  üîí –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ"
    echo "  üê≥ Docker –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã"
    echo "  üöÄ Backend API –æ—Ç–≤–µ—á–∞–µ—Ç"
    echo "  üåê –í—Å–µ 5 —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç"
    echo ""
    echo "üåê PRODUCTION VoIP –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê!"
    echo "  Frontend:     http://localhost:3000"
    echo "  Backend API:  http://localhost:3001/health"
    echo ""
    echo "üèÅ –ú–ò–ì–†–ê–¶–ò–Ø FreeSWITCH ‚ûú ASTERISK –ó–ê–í–ï–†–®–ï–ù–ê!"
else
    log "‚ö†Ô∏è API –≤—Å–µ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"
    echo ""
    echo "üìä –ò–¢–û–ì–û–í–û–ï –°–û–°–¢–û–Ø–ù–ò–ï:"
    docker compose -f docker-compose-ready.yml ps
    echo ""
    echo "üìù –ò–¢–û–ì–û–í–´–ï –õ–û–ì–ò:"
    docker logs dialer_backend_ready --tail 25 2>&1 || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
fi 
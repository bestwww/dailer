#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */

import { userModel } from '@/models/user';
import { createPool, closePool } from '@/config/database';

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function checkUserPermissions(username: string = 'admin'): Promise<void> {
  try {
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${username}`);
    
    // –°–æ–∑–¥–∞–µ–º –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
    createPool();
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await userModel.findByUsername(username);
    
    if (!user) {
      console.error(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${username} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }
    
    console.log(`\nüë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:`);
    console.log(`   ID: ${user.id}`);
    console.log(`   –õ–æ–≥–∏–Ω: ${user.username}`);
    console.log(`   Email: ${user.email}`);
    console.log(`   –†–æ–ª—å: ${user.role}`);
    console.log(`   –ê–∫—Ç–∏–≤–µ–Ω: ${user.isActive}`);
    
    console.log(`\nüîê –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`);
    
    if (user.permissions && typeof user.permissions === 'object') {
      Object.entries(user.permissions).forEach(([permission, hasPermission]) => {
        const status = hasPermission ? '‚úÖ' : '‚ùå';
        console.log(`   ${status} ${permission}: ${hasPermission}`);
      });
    } else {
      console.log(`   ‚ùå –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –∏–º–µ—é—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç`);
    }
    
    console.log(`\nüìä –ò—Ç–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: ${Object.keys(user.permissions || {}).length}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π:', error);
  } finally {
    await closePool();
  }
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function updateUserPermissions(username: string, role: string): Promise<void> {
  try {
    console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${username} (—Ä–æ–ª—å: ${role})`);
    
    createPool();
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await userModel.findByUsername(username);
    
    if (!user) {
      console.error(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${username} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
    const updatedUser = await userModel.updateUserPermissionsByRole(user.id, role);
    
    if (updatedUser) {
      console.log(`‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${username} –æ–±–Ω–æ–≤–ª–µ–Ω—ã`);
      console.log(`üìä –ù–æ–≤—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:`);
      
      Object.entries(updatedUser.permissions || {}).forEach(([permission, hasPermission]) => {
        const status = hasPermission ? '‚úÖ' : '‚ùå';
        console.log(`   ${status} ${permission}: ${hasPermission}`);
      });
    } else {
      console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${username}`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π:', error);
  } finally {
    await closePool();
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2);
const command = args[0];

if (command === 'check') {
  const username = args[1] || 'admin';
  checkUserPermissions(username);
} else if (command === 'update') {
  const username = args[1];
  const role = args[2];
  
  if (!username || !role) {
    console.error('‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npm run check-permissions update <username> <role>');
    console.error('   –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏: admin, manager, user, viewer');
    process.exit(1);
  }
  
  updateUserPermissions(username, role);
} else {
  console.log('üîß –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
  console.log('');
  console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
  console.log('  npm run check-permissions check [username]     - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  console.log('  npm run check-permissions update <username> <role> - –û–±–Ω–æ–≤–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  console.log('');
  console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏: admin, manager, user, viewer');
  console.log('');
  console.log('–ü—Ä–∏–º–µ—Ä—ã:');
  console.log('  npm run check-permissions check admin');
  console.log('  npm run check-permissions update admin admin');
} 
#!/bin/bash

# –≠–ö–°–¢–†–ï–ù–ù–û–ï –†–ï–®–ï–ù–ò–ï DOCKER SYSTEMD CGROUP –ö–û–ù–§–õ–ò–ö–¢–ê

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –†–ï–®–ï–ù–ò–ï DOCKER CGROUP –ö–û–ù–§–õ–ò–ö–¢–ê"

log "‚ùå –ü–†–û–ë–õ–ï–ú–ê –ù–ê–ô–î–ï–ù–ê:"
echo "  Docker –Ω–µ –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å backend –∏–∑-–∑–∞ –∑–∞–≤–∏—Å—à–∏—Ö systemd cgroup units"
echo "  –°—Ç–∞—Ä—ã–µ docker scope units –±–ª–æ–∫–∏—Ä—É—é—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
echo ""
echo "  ‚úÖ –í–°–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –†–ê–ë–û–¢–ê–Æ–¢:"
echo "     PostgreSQL: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç"
echo "     Redis: ‚úÖ PONG –æ—Ç–≤–µ—á–∞–µ—Ç" 
echo "     Asterisk: ‚úÖ Admin –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

log "üîß –®–ê–ì 1: –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–°–¢–ê–ù–û–í–ö–ê –í–°–ï–• –ö–û–ù–¢–ï–ô–ù–ï–†–û–í..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
docker compose -f docker-compose-ready.yml down --remove-orphans --volumes --timeout 30 2>/dev/null || true

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö dialer –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker ps -a --filter "name=dialer" -q | xargs -r docker rm -f 2>/dev/null || true

log "üßπ –®–ê–ì 2: –û–ß–ò–°–¢–ö–ê –ó–ê–í–ò–°–®–ò–• SYSTEMD UNITS..."

# –û—á–∏—â–∞–µ–º –≤—Å–µ –∑–∞–≤–∏—Å—à–∏–µ docker systemd units
systemctl reset-failed 2>/dev/null || true

# –ù–∞—Ö–æ–¥–∏–º –∏ –æ—á–∏—â–∞–µ–º –≤—Å–µ docker scope units
for unit in $(systemctl list-units --failed --no-legend | grep docker | awk '{print $1}'); do
    log "  –û—á–∏—â–∞—é –∑–∞–≤–∏—Å—à–∏–π unit: $unit"
    systemctl stop "$unit" 2>/dev/null || true
    systemctl reset-failed "$unit" 2>/dev/null || true
done

# –û—á–∏—â–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ docker scope units
for scope_file in /run/systemd/system/docker-*.scope; do
    if [[ -f "$scope_file" ]]; then
        scope_name=$(basename "$scope_file")
        log "  –£–¥–∞–ª—è—é —Ñ–∞–π–ª scope: $scope_name"
        systemctl stop "$scope_name" 2>/dev/null || true
        rm -f "$scope_file" 2>/dev/null || true
    fi
done

log "üîÑ –®–ê–ì 3: –ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ê SYSTEMD –ò DOCKER..."

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd
systemctl daemon-reload

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º docker daemon
log "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker daemon..."
systemctl restart docker

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ docker
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å docker
if systemctl is-active docker --quiet; then
    log "‚úÖ Docker daemon –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    log "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: Docker daemon –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    systemctl status docker --no-pager
    exit 1
fi

log "üßπ –®–ê–ì 4: –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê DOCKER –†–ï–°–£–†–°–û–í..."

# –û—á–∏—â–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞—Ç–∫–∏
docker system prune -af --volumes 2>/dev/null || true

# –£–¥–∞–ª—è–µ–º —Å–µ—Ç—å –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
docker network rm dialer-ready_dialer_network 2>/dev/null || true

log "üöÄ –®–ê–ì 5: –ß–ò–°–¢–´–ô –ü–ï–†–ï–ó–ê–ü–£–°–ö –í–°–ï–• –°–ï–†–í–ò–°–û–í..."

# –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –∑–∞–Ω–æ–≤–æ
docker compose -f docker-compose-ready.yml up -d --build

log "‚è∞ –®–ê–ì 6: –ú–û–ù–ò–¢–û–†–ò–ù–ì –ó–ê–ü–£–°–ö–ê (2 –º–∏–Ω—É—Ç—ã)..."

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –∑–∞–ø—É—Å–∫ 2 –º–∏–Ω—É—Ç—ã
for i in {1..24}; do
    sleep 5
    RUNNING_COUNT=$(docker compose -f docker-compose-ready.yml ps --format="{{.Status}}" | grep -c "Up" || echo "0")
    log "üìä –ó–∞–ø—É—â–µ–Ω–æ —Å–µ—Ä–≤–∏—Å–æ–≤: $RUNNING_COUNT/5 (${i}*5 —Å–µ–∫)"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ª–∏ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã
    if [[ "$RUNNING_COUNT" -eq "5" ]]; then
        log "üéâ –í–°–ï 5 –°–ï–†–í–ò–°–û–í –ó–ê–ü–£–©–ï–ù–´!"
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º backend API
        sleep 10
        if curl -sf http://localhost:3001/health >/dev/null 2>&1; then
            log "‚úÖ BACKEND API –†–ê–ë–û–¢–ê–ï–¢!"
            
            echo ""
            echo "üéâ üéâ üéâ –ü–†–û–ë–õ–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –†–ï–®–ï–ù–ê! üéâ üéâ üéâ"
            echo ""
            echo "üåê Frontend:     http://localhost:3000"
            echo "üîß Backend API:  http://localhost:3001/health"  
            echo "üìû Asterisk CLI: docker exec -it dialer_asterisk_ready asterisk -r"
            echo "üíæ PostgreSQL:   docker exec -it dialer_postgres_ready psql -U dialer -d dialer"
            echo "üî¥ Redis CLI:    docker exec -it dialer_redis_ready redis-cli"
            echo ""
            echo "üèÅ –ú–ò–ì–†–ê–¶–ò–Ø FreeSWITCH ‚ûú ASTERISK –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!"
            echo ""
            echo "üéØ –ì–û–¢–û–í–û –ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ SIP –ó–í–û–ù–ö–û–í!"
            
            exit 0
        else
            log "‚ö†Ô∏è Backend –∑–∞–ø—É—â–µ–Ω, –Ω–æ API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü–æ–∫–∞–∑—ã–≤–∞—é –ª–æ–≥–∏..."
        fi
        break
    fi
done

if [[ "$RUNNING_COUNT" -ne "5" ]]; then
    log "‚ö†Ô∏è –ù–ï –í–°–ï –°–ï–†–í–ò–°–´ –ó–ê–ü–£–°–¢–ò–õ–ò–°–¨ –ó–ê 2 –ú–ò–ù–£–¢–´"
fi

echo ""
log "üìä –§–ò–ù–ê–õ–¨–ù–´–ô –°–¢–ê–¢–£–°:"
docker compose -f docker-compose-ready.yml ps

echo ""
log "üìù –õ–û–ì–ò BACKEND (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):"
docker logs dialer_backend_ready --tail 20 2>/dev/null || echo "Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo ""
log "üí° –ï–°–õ–ò –ü–†–û–ë–õ–ï–ú–´ –û–°–¢–ê–õ–ò–°–¨:"
echo "  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker logs dialer_backend_ready"
echo "  2. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: sudo reboot"
echo "  3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏"

exit 1 
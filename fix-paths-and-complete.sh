#!/bin/bash

# üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–£–¢–ï–ô –ò –ó–ê–í–ï–†–®–ï–ù–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò
# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—É—Ç—è–º–∏ FreeSWITCH –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ

CONTAINER_NAME="freeswitch-test"

echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–£–¢–ï–ô –ò –ó–ê–í–ï–†–®–ï–ù–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò"
echo "============================================="
echo ""

echo "üö® –û–ë–ù–ê–†–£–ñ–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:"
echo "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ FreeSWITCH"
echo "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ –ª–æ–≥–∞–º"
echo "‚ö†Ô∏è –ê–∫—Ç–∏–≤–Ω—ã–π –∑–≤–æ–Ω–æ–∫ —Ç—Ä–µ–±—É–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"
echo ""

# –≠–¢–ê–ü 1: –°—Ä–æ—á–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–≤–æ–Ω–∫–æ–≤
echo "üìã –≠–¢–ê–ü 1: –ó–ê–í–ï–†–®–ï–ù–ò–ï –ê–ö–¢–ò–í–ù–´–• –ó–í–û–ù–ö–û–í"
echo "======================================="

echo ""
echo "1. üõë –ó–∞–≤–µ—Ä—à–∞–µ–º –í–°–ï –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–≤–æ–Ω–∫–∏..."
docker exec "$CONTAINER_NAME" fs_cli -x "hupall MANAGER_REQUEST"

echo ""
echo "2. üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ã..."
docker exec "$CONTAINER_NAME" fs_cli -x "show calls"

# –≠–¢–ê–ü 2: –ü–æ–∏—Å–∫ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π FreeSWITCH
echo ""
echo "üìã –≠–¢–ê–ü 2: –ü–û–ò–°–ö –ü–†–ê–í–ò–õ–¨–ù–´–• –ü–£–¢–ï–ô"
echo "=================================="

echo ""
echo "3. üîç –ò—â–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã FreeSWITCH..."

# –ò—â–µ–º –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è FreeSWITCH
echo "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
docker exec "$CONTAINER_NAME" find / -name "freeswitch.xml" -type f 2>/dev/null | head -5
docker exec "$CONTAINER_NAME" find / -name "dialplan" -type d 2>/dev/null | head -5

echo ""
echo "4. üîç –ò—â–µ–º —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤..."
docker exec "$CONTAINER_NAME" find / -name "freeswitch.log" -type f 2>/dev/null | head -5
docker exec "$CONTAINER_NAME" find / -name "*.log" -path "*/freeswitch/*" 2>/dev/null | head -5

echo ""
echo "5. üìÇ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—É—Ç–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—É—Ç–∏
POSSIBLE_PATHS=(
    "/etc/freeswitch"
    "/opt/freeswitch/etc/freeswitch" 
    "/usr/share/freeswitch"
    "/var/lib/freeswitch"
    "/usr/local/etc/freeswitch"
)

for path in "${POSSIBLE_PATHS[@]}"; do
    if docker exec "$CONTAINER_NAME" test -d "$path"; then
        echo "‚úÖ –ù–∞–π–¥–µ–Ω: $path"
        docker exec "$CONTAINER_NAME" ls -la "$path" 2>/dev/null | head -3
    else
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω: $path"
    fi
done

# –≠–¢–ê–ü 3: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–±–æ—á–∏—Ö –ø—É—Ç–µ–π
echo ""
echo "üìã –≠–¢–ê–ü 3: –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –†–ê–ë–û–ß–ò–• –ü–£–¢–ï–ô"
echo "===================================="

echo ""
echo "6. üéØ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ fs_cli
CONFIG_INFO=$(docker exec "$CONTAINER_NAME" fs_cli -x "eval \${conf_dir}")
echo "–ê–∫—Ç–∏–≤–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: $CONFIG_INFO"

LOG_INFO=$(docker exec "$CONTAINER_NAME" fs_cli -x "eval \${log_dir}")
echo "–ê–∫—Ç–∏–≤–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤: $LOG_INFO"

SOUND_INFO=$(docker exec "$CONTAINER_NAME" fs_cli -x "eval \${sound_dir}")
echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∑–≤—É–∫–æ–≤: $SOUND_INFO"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏
if [ ! -z "$CONFIG_INFO" ] && [ "$CONFIG_INFO" != "undefined" ]; then
    CONF_DIR="$CONFIG_INFO"
    echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: $CONF_DIR"
else
    CONF_DIR="/etc/freeswitch"
    echo "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $CONF_DIR"
fi

if [ ! -z "$LOG_INFO" ] && [ "$LOG_INFO" != "undefined" ]; then
    LOG_DIR="$LOG_INFO"
    echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–≥–∏: $LOG_DIR"
else
    LOG_DIR="/var/log/freeswitch"
    echo "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $LOG_DIR"
fi

# –≠–¢–ê–ü 4: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–ª–ø–ª–∞–Ω–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ
echo ""
echo "üìã –≠–¢–ê–ü 4: –°–û–ó–î–ê–ù–ò–ï –ü–†–ê–í–ò–õ–¨–ù–û–ì–û –î–ò–ê–õ–ü–õ–ê–ù–ê"
echo "=========================================="

echo ""
echo "7. üîß –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–ø–ª–∞–Ω –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–∏–∞–ª–ø–ª–∞–Ω–∞
docker exec "$CONTAINER_NAME" bash -c "
if [ ! -d '$CONF_DIR/dialplan/default' ]; then
    echo '–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–∏–∞–ª–ø–ª–∞–Ω–∞...'
    mkdir -p '$CONF_DIR/dialplan/default'
fi
"

# –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–∏–∞–ª–ø–ª–∞–Ω 1201
docker exec "$CONTAINER_NAME" bash -c "cat > '$CONF_DIR/dialplan/default/1201_safe_ivr.xml' << 'EOF'
<!-- üìö –ë–ï–ó–û–ü–ê–°–ù–´–ô IVR –ü–û –û–§–ò–¶–ò–ê–õ–¨–ù–û–ô –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò -->
<include>
  <extension name=\"safe_ivr_1201\">
    <condition field=\"destination_number\" expression=\"^1201\$\">
      
      <!-- –ü–†–ê–í–ò–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò -->
      <action application=\"set\" data=\"originate_timeout=60\"/>
      <action application=\"set\" data=\"hangup_after_bridge=true\"/>
      <action application=\"set\" data=\"playback_terminators=*#\"/>
      <action application=\"set\" data=\"dtmf_verbose=true\"/>
      
      <!-- –ù–ê–ß–ê–õ–û IVR -->
      <action application=\"answer\"/>
      <action application=\"log\" data=\"INFO –ë–ï–ó–û–ü–ê–°–ù–´–ô IVR 1201 –ó–ê–ü–£–©–ï–ù\"/>
      <action application=\"sleep\" data=\"1000\"/>
      
      <!-- –ú–ï–ù–Æ -->
      <action application=\"playback\" data=\"tone_stream://%(1000,0,400)\"/>
      <action application=\"sleep\" data=\"500\"/>
      <action application=\"playback\" data=\"tone_stream://%(500,500,800);%(500,500,1000)\"/>
      
      <!-- –ë–ï–ó–û–ü–ê–°–ù–´–ô –°–ë–û–† DTMF (10 –°–ï–ö–£–ù–î) -->
      <action application=\"log\" data=\"INFO –ñ–î–ï–ú DTMF 10 –°–ï–ö–£–ù–î\"/>
      <action application=\"read\" data=\"dtmf_choice,1,10,tone_stream://%(200,100,400),timeout,10000\"/>
      <action application=\"log\" data=\"INFO –ü–û–õ–£–ß–ï–ù DTMF: \${dtmf_choice}\"/>
      
      <!-- –û–ë–†–ê–ë–û–¢–ö–ê –í–´–ë–û–†–ê -->
      <action application=\"execute_extension\" data=\"handle_\${dtmf_choice} XML default\"/>
      
      <!-- –ë–ï–ó–û–ü–ê–°–ù–û–ï –ó–ê–í–ï–†–®–ï–ù–ò–ï -->
      <action application=\"log\" data=\"INFO –ó–ê–í–ï–†–®–ï–ù–ò–ï –ë–ï–ó –ó–ê–¶–ò–ö–õ–ò–í–ê–ù–ò–Ø\"/>
      <action application=\"hangup\" data=\"NORMAL_CLEARING\"/>
      
    </condition>
  </extension>

  <!-- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –í–´–ë–û–†–ê -->
  <extension name=\"handle_1\">
    <condition field=\"destination_number\" expression=\"^handle_1\$\">
      <action application=\"log\" data=\"INFO –í–´–ë–û–† 1 - –í–ï–ë–•–£–ö 1\"/>
      <action application=\"playback\" data=\"tone_stream://%(1000,0,600)\"/>
      <action application=\"hangup\" data=\"NORMAL_CLEARING\"/>
    </condition>
  </extension>

  <extension name=\"handle_2\">
    <condition field=\"destination_number\" expression=\"^handle_2\$\">
      <action application=\"log\" data=\"INFO –í–´–ë–û–† 2 - –í–ï–ë–•–£–ö 2\"/>
      <action application=\"playback\" data=\"tone_stream://%(1000,0,800)\"/>
      <action application=\"hangup\" data=\"NORMAL_CLEARING\"/>
    </condition>
  </extension>

  <!-- –û–ë–†–ê–ë–û–¢–ß–ò–ö –ü–£–°–¢–û–ì–û DTMF -->
  <extension name=\"handle_\">
    <condition field=\"destination_number\" expression=\"^handle_\$\">
      <action application=\"log\" data=\"WARNING DTMF –ù–ï –ü–û–õ–£–ß–ï–ù - –ó–ê–í–ï–†–®–ï–ù–ò–ï\"/>
      <action application=\"playback\" data=\"tone_stream://%(250,250,300)\"/>
      <action application=\"hangup\" data=\"NORMAL_CLEARING\"/>
    </condition>
  </extension>

</include>
EOF"

echo "   ‚úÖ –°–æ–∑–¥–∞–Ω –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–∏–∞–ª–ø–ª–∞–Ω 1201"

# –°–æ–∑–¥–∞–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π DTMF —Ç–µ—Å—Ç 1202  
docker exec "$CONTAINER_NAME" bash -c "cat > '$CONF_DIR/dialplan/default/1202_dtmf_test.xml' << 'EOF'
<include>
  <extension name=\"dtmf_test_1202\">
    <condition field=\"destination_number\" expression=\"^1202\$\">
      
      <!-- –í–ö–õ–Æ–ß–ï–ù–ò–ï –í–°–ï–• DTMF –ú–ï–¢–û–î–û–í -->
      <action application=\"answer\"/>
      <action application=\"start_dtmf\"/>
      <action application=\"start_dtmf_generate\"/>
      
      <!-- –†–ê–°–®–ò–†–ï–ù–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò DTMF -->
      <action application=\"set\" data=\"dtmf_verbose=true\"/>
      <action application=\"set\" data=\"spandsp_dtmf_rx_threshold=-30\"/>
      <action application=\"set\" data=\"spandsp_dtmf_rx_twist=8\"/>
      
      <action application=\"log\" data=\"INFO DTMF –¢–ï–°–¢ 1202 - –í–°–ï –ú–ï–¢–û–î–´\"/>
      
      <!-- –ö–û–†–û–¢–ö–ò–ô –¢–ï–°–¢ 5 –°–ï–ö–£–ù–î -->
      <action application=\"playback\" data=\"tone_stream://%(2000,0,350+440)\"/>
      <action application=\"read\" data=\"test_dtmf,1,5,tone_stream://%(200,100,600),timeout,5000\"/>
      <action application=\"log\" data=\"INFO –¢–ï–°–¢ DTMF: \${test_dtmf}\"/>
      
      <!-- –ó–ê–í–ï–†–®–ï–ù–ò–ï -->
      <action application=\"hangup\" data=\"NORMAL_CLEARING\"/>
      
    </condition>
  </extension>
</include>
EOF"

echo "   ‚úÖ –°–æ–∑–¥–∞–Ω DTMF —Ç–µ—Å—Ç 1202"

# –≠–¢–ê–ü 5: –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
echo ""
echo "üìã –≠–¢–ê–ü 5: –ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ê –ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï"
echo "======================================"

echo ""
echo "8. üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
docker exec "$CONTAINER_NAME" fs_cli -x "reloadxml"

echo ""
echo "9. üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–ª–ø–ª–∞–Ω..."
docker exec "$CONTAINER_NAME" fs_cli -x "xml_locate dialplan destination_number 1201"

echo ""
echo "10. üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–∏–∞–ª–ø–ª–∞–Ω–∞..."

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –ª–æ–≥–∞–º –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
if docker exec "$CONTAINER_NAME" test -f "$LOG_DIR/freeswitch.log"; then
    LOG_FILE="$LOG_DIR/freeswitch.log"
elif docker exec "$CONTAINER_NAME" test -f "/var/log/freeswitch.log"; then
    LOG_FILE="/var/log/freeswitch.log"
elif docker exec "$CONTAINER_NAME" test -f "/tmp/freeswitch.log"; then
    LOG_FILE="/tmp/freeswitch.log"
else
    LOG_FILE="/dev/null"
    echo "‚ö†Ô∏è –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ç–∫–ª—é—á–µ–Ω"
fi

echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–π–ª –ª–æ–≥–æ–≤: $LOG_FILE"

# –¢–µ—Å—Ç–æ–≤—ã–π –∑–≤–æ–Ω–æ–∫ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º
echo ""
echo "üìû –¢–µ—Å—Ç–æ–≤—ã–π –∑–≤–æ–Ω–æ–∫ –Ω–∞ 1201..."

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ñ–æ–Ω–µ –Ω–∞ 15 —Å–µ–∫—É–Ω–¥
if [ "$LOG_FILE" != "/dev/null" ]; then
    docker exec "$CONTAINER_NAME" bash -c "timeout 15 tail -f '$LOG_FILE' | grep -E '(1201|–ë–ï–ó–û–ü–ê–°–ù–´–ô|DTMF)' &"
fi

# –ó–≤–æ–Ω–æ–∫
docker exec "$CONTAINER_NAME" fs_cli -x "originate sofia/gateway/sip_trunk/79206054020 1201 XML default" &

# –ñ–¥–µ–º 12 —Å–µ–∫—É–Ω–¥
sleep 12

echo ""
echo "11. üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–≤–æ–Ω–∫–∏
ACTIVE_CALLS=$(docker exec "$CONTAINER_NAME" fs_cli -x "show calls count")
echo "–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–≤–æ–Ω–∫–∏: $ACTIVE_CALLS"

ACTIVE_CHANNELS=$(docker exec "$CONTAINER_NAME" fs_cli -x "show channels count")  
echo "–ê–∫—Ç–∏–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã: $ACTIVE_CHANNELS"

# –ò–¢–û–ì–ò
echo ""
echo "üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø"
echo "========================="
echo ""
echo "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û:"
echo "‚Ä¢ –ù–∞–π–¥–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏ FreeSWITCH"
echo "‚Ä¢ –°–æ–∑–¥–∞–Ω—ã –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –¥–∏–∞–ª–ø–ª–∞–Ω—ã"
echo "‚Ä¢ –í—Å–µ –∑–≤–æ–Ω–∫–∏ –∑–∞–≤–µ—Ä—à–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
echo "‚Ä¢ –ù–µ—Ç –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏—è"
echo ""
echo "üß™ –¢–ï–°–¢–ò–†–£–ô–¢–ï:"
echo "‚Ä¢ –ù–æ–º–µ—Ä 1201 - –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π IVR (10 —Å–µ–∫ –∞–≤—Ç–æ–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ)"
echo "‚Ä¢ –ù–æ–º–µ—Ä 1202 - DTMF —Ç–µ—Å—Ç (5 —Å–µ–∫, –≤—Å–µ –º–µ—Ç–æ–¥—ã)"
echo ""
echo "üìù –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
echo "1. –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞ 1201"
echo "2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∞—Ç—å 1 –∏–ª–∏ 2"
echo "3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∑–≤–æ–Ω–æ–∫ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥"
echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤"
echo ""
echo "üîß –ï–°–õ–ò DTMF –ù–ï –†–ê–ë–û–¢–ê–ï–¢:"
echo "‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–æ–º–µ—Ä 1202"
echo "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–∫–æ–π –º–µ—Ç–æ–¥ DTMF —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ" 
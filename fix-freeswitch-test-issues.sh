#!/bin/bash

# üîß –°–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ freeswitch-test
# –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç Caller ID, –ø–æ—Ä—Ç—ã, SIP –ø—Ä–æ—Ñ–∏–ª–∏ –∏ dialplan

set -e

# üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∏
CONTAINER_NAME="freeswitch-test"
NEW_CALLER_ID="79058615815"

# üé® –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
log_info() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') [INFO] $1"
}

log_success() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') [SUCCESS] ‚úÖ $1"
}

log_warning() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') [WARNING] ‚ö†Ô∏è $1"
}

log_error() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') [ERROR] ‚ùå $1"
}

echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú –í –ö–û–ù–¢–ï–ô–ù–ï–†–ï: $CONTAINER_NAME"
echo "====================================================="
echo ""
echo "üìã –ß—Ç–æ –±—É–¥–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:"
echo "   üÜî Caller ID: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ $NEW_CALLER_ID"
echo "   üåê SIP –ø—Ä–æ—Ñ–∏–ª—å external: —Å–æ–∑–¥–∞–Ω–∏–µ –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
echo "   üìû Dialplan: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–∑–æ–≤–æ–≤"
echo "   üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤"
echo ""

# üîç –≠–¢–ê–ü 1: –ü–†–û–í–ï–†–ö–ê –ö–û–ù–¢–ï–ô–ù–ï–†–ê
echo "üîç –≠–¢–ê–ü 1: –ü–†–û–í–ï–†–ö–ê –ö–û–ù–¢–ï–ô–ù–ï–†–ê"
echo "=============================="

if ! docker ps --filter "name=$CONTAINER_NAME" --filter "status=running" | grep -q "$CONTAINER_NAME"; then
    log_error "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME –Ω–µ –∑–∞–ø—É—â–µ–Ω!"
    log_info "–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞..."
    if docker start "$CONTAINER_NAME"; then
        log_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
        sleep 15
    else
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
        exit 1
    fi
fi

log_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME –∑–∞–ø—É—â–µ–Ω"

# üîß –≠–¢–ê–ü 2: –û–ë–ù–û–í–õ–ï–ù–ò–ï CALLER ID
echo ""
echo "üîß –≠–¢–ê–ü 2: –û–ë–ù–û–í–õ–ï–ù–ò–ï CALLER ID"
echo "==============================="

log_info "–û–±–Ω–æ–≤–ª—è–µ–º Caller ID –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# –û–±–Ω–æ–≤–ª—è–µ–º vars.xml
if [ -f "freeswitch/conf/vars.xml" ]; then
    log_info "–û–±–Ω–æ–≤–ª—è–µ–º vars.xml..."
    cp freeswitch/conf/vars.xml freeswitch/conf/vars.xml.backup.$(date +%s)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ Caller ID –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (Linux –≤–µ—Ä—Å–∏—è)
    sed -i "s/<X-PRE-PROCESS cmd=\"set\" data=\"default_caller_id_number=[^\"]*\"/<X-PRE-PROCESS cmd=\"set\" data=\"default_caller_id_number=$NEW_CALLER_ID\"/g" freeswitch/conf/vars.xml
    sed -i "s/<X-PRE-PROCESS cmd=\"set\" data=\"outbound_caller_id_number=[^\"]*\"/<X-PRE-PROCESS cmd=\"set\" data=\"outbound_caller_id_number=$NEW_CALLER_ID\"/g" freeswitch/conf/vars.xml
    sed -i "s/<X-PRE-PROCESS cmd=\"set\" data=\"emergency_caller_id_number=[^\"]*\"/<X-PRE-PROCESS cmd=\"set\" data=\"emergency_caller_id_number=$NEW_CALLER_ID\"/g" freeswitch/conf/vars.xml
    
    log_success "vars.xml –æ–±–Ω–æ–≤–ª–µ–Ω"
else
    log_warning "vars.xml –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –û–±–Ω–æ–≤–ª—è–µ–º dialplan
if [ -f "freeswitch/conf/dialplan/default.xml" ]; then
    log_info "–û–±–Ω–æ–≤–ª—è–µ–º dialplan/default.xml..."
    cp freeswitch/conf/dialplan/default.xml freeswitch/conf/dialplan/default.xml.backup.$(date +%s)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º Caller ID –≤ dialplan (Linux –≤–µ—Ä—Å–∏—è)
    sed -i "s/caller_id_number=\"[^\"]*\"/caller_id_number=\"$NEW_CALLER_ID\"/g" freeswitch/conf/dialplan/default.xml
    sed -i "s/effective_caller_id_number=[^,}]*/effective_caller_id_number=$NEW_CALLER_ID/g" freeswitch/conf/dialplan/default.xml
    
    log_success "dialplan –æ–±–Ω–æ–≤–ª–µ–Ω"
fi

# üîß –≠–¢–ê–ü 3: –°–û–ó–î–ê–ù–ò–ï/–û–ë–ù–û–í–õ–ï–ù–ò–ï SIP –ü–†–û–§–ò–õ–Ø EXTERNAL
echo ""
echo "üîß –≠–¢–ê–ü 3: –ù–ê–°–¢–†–û–ô–ö–ê SIP –ü–†–û–§–ò–õ–ï–ô"
echo "================================="

log_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Sofia SIP..."

# –°–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º sofia.conf.xml
cat > freeswitch/conf/autoload_configs/sofia.conf.xml << 'EOF'
<configuration name="sofia.conf" description="Sofia SIP">
  <global_settings>
    <param name="log-level" value="0"/>
    <param name="auto-restart" value="false"/>
    <param name="debug-presence" value="0"/>
  </global_settings>
  
  <profiles>
    <!-- Internal Profile -->
    <profile name="internal">
      <gateways>
        <X-PRE-PROCESS cmd="include" data="internal/*.xml"/>
      </gateways>
      <domains>
        <domain name="all" alias="false" parse="true"/>
      </domains>
      <settings>
        <param name="debug" value="0"/>
        <param name="sip-trace" value="no"/>
        <param name="sip-capture" value="no"/>
        <param name="rfc2833-pt" value="101"/>
        <param name="sip-port" value="5060"/>
        <param name="dialplan" value="XML"/>
        <param name="context" value="default"/>
        <param name="dtmf-duration" value="2000"/>
        <param name="inbound-codec-prefs" value="OPUS,G722,PCMU,PCMA,H264,VP8"/>
        <param name="outbound-codec-prefs" value="OPUS,G722,PCMU,PCMA,H264,VP8"/>
        <param name="rtp-timer-name" value="soft"/>
        <param name="local-network-acl" value="localnet.auto"/>
        <param name="manage-presence" value="false"/>
        <param name="inbound-codec-negotiation" value="generous"/>
        <param name="nonce-ttl" value="60"/>
        <param name="auth-calls" value="false"/>
        <param name="inbound-late-negotiation" value="true"/>
        <param name="inbound-zrtp-passthru" value="true"/>
        <param name="rtp-ip" value="auto"/>
        <param name="sip-ip" value="auto"/>
        <param name="ext-rtp-ip" value="auto-nat"/>
        <param name="ext-sip-ip" value="auto-nat"/>
        <param name="rtp-timeout-sec" value="300"/>
        <param name="rtp-hold-timeout-sec" value="1800"/>
        <param name="enable-3pcc" value="true"/>
      </settings>
    </profile>
    
    <!-- External Profile -->
    <profile name="external">
      <gateways>
        <!-- SIP Trunk Gateway -->
        <gateway name="sip_trunk">
          <param name="username" value="79058615815"/>
          <param name="realm" value="sip.beget.com"/>
          <param name="from-user" value="79058615815"/>
          <param name="from-domain" value="sip.beget.com"/>
          <param name="password" value="$external_sip_password"/>
          <param name="extension" value="79058615815"/>
          <param name="proxy" value="sip.beget.com"/>
          <param name="register-proxy" value="sip.beget.com"/>
          <param name="expire-seconds" value="600"/>
          <param name="register" value="true"/>
          <param name="retry-seconds" value="30"/>
          <param name="caller-id-in-from" value="79058615815"/>
          <param name="contact-params" value="transport=udp"/>
          <param name="ping" value="25"/>
        </gateway>
      </gateways>
      <settings>
        <param name="debug" value="0"/>
        <param name="sip-trace" value="no"/>
        <param name="sip-capture" value="no"/>
        <param name="rfc2833-pt" value="101"/>
        <param name="sip-port" value="5080"/>
        <param name="dialplan" value="XML"/>
        <param name="context" value="public"/>
        <param name="dtmf-duration" value="2000"/>
        <param name="inbound-codec-prefs" value="PCMU,PCMA"/>
        <param name="outbound-codec-prefs" value="PCMU,PCMA"/>
        <param name="rtp-timer-name" value="soft"/>
        <param name="manage-presence" value="false"/>
        <param name="inbound-codec-negotiation" value="generous"/>
        <param name="nonce-ttl" value="60"/>
        <param name="auth-calls" value="false"/>
        <param name="inbound-late-negotiation" value="true"/>
        <param name="rtp-ip" value="auto"/>
        <param name="sip-ip" value="auto"/>
        <param name="ext-rtp-ip" value="auto-nat"/>
        <param name="ext-sip-ip" value="auto-nat"/>
        <param name="rtp-timeout-sec" value="300"/>
        <param name="rtp-hold-timeout-sec" value="1800"/>
        <param name="enable-3pcc" value="true"/>
      </settings>
    </profile>
  </profiles>
</configuration>
EOF

log_success "Sofia SIP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∞"

# üîß –≠–¢–ê–ü 4: –û–ë–ù–û–í–õ–ï–ù–ò–ï DIALPLAN
echo ""
echo "üîß –≠–¢–ê–ü 4: –û–ë–ù–û–í–õ–ï–ù–ò–ï DIALPLAN"
echo "=============================="

log_info "–°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π dialplan..."

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
if [ -f "freeswitch/conf/dialplan/default.xml" ]; then
    cp freeswitch/conf/dialplan/default.xml freeswitch/conf/dialplan/default.xml.backup.$(date +%s)
fi

 # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π dialplan —Å IVR –º–µ–Ω—é
 cat > freeswitch/conf/dialplan/default.xml << 'EOF'
 <?xml version="1.0" encoding="utf-8"?>
 <include>
   <context name="default">
     
     <!-- –ò—Å—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏ –æ—Ç –±—ç–∫–µ–Ω–¥–∞ —Å IVR –º–µ–Ω—é -->
     <extension name="outbound_calls_with_ivr">
       <condition field="destination_number" expression="^(\d{10,11})$">
         <action application="set" data="caller_id_number=79058615815"/>
         <action application="set" data="caller_id_name=Dailer System"/>
         <action application="set" data="effective_caller_id_number=79058615815"/>
         <action application="set" data="effective_caller_id_name=Dailer System"/>
         <action application="set" data="call_timeout=30"/>
         <action application="set" data="hangup_after_bridge=true"/>
         <action application="bridge" data="sofia/gateway/sip_trunk/$1"/>
         <!-- –ï—Å–ª–∏ –∑–≤–æ–Ω–æ–∫ –æ—Ç–≤–µ—á–µ–Ω, –ø–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞ IVR -->
         <action application="transfer" data="ivr_menu XML default"/>
       </condition>
     </extension>
     
     <!-- –ò—Å—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏ —Å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º -->
     <extension name="outbound_international">
       <condition field="destination_number" expression="^(\+\d{10,15})$">
         <action application="set" data="caller_id_number=79058615815"/>
         <action application="set" data="caller_id_name=Dailer System"/>
         <action application="bridge" data="sofia/gateway/sip_trunk/$1"/>
         <action application="transfer" data="ivr_menu XML default"/>
       </condition>
     </extension>
     
     <!-- IVR –ú–µ–Ω—é -->
     <extension name="ivr_menu">
       <condition field="destination_number" expression="^ivr_menu$">
         <action application="answer"/>
         <action application="sleep" data="1000"/>
         <action application="set" data="playback_terminators=#"/>
         <action application="playback" data="silence_stream://1000"/>
         
         <!-- –û—Å–Ω–æ–≤–Ω–æ–µ IVR –º–µ–Ω—é -->
         <action application="lua" data="ivr_menu.lua"/>
         
         <!-- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ –ø—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é –±–µ–∑ Lua -->
         <!-- <action application="playback" data="ivr/ivr-welcome.wav"/>
         <action application="playback" data="ivr/ivr-please_hold.wav"/>
         <action application="sleep" data="2000"/>
         <action application="hangup"/> -->
       </condition>
     </extension>
     
     <!-- –í—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏ - –Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ IVR -->
     <extension name="inbound_calls">
       <condition field="destination_number" expression="^(79058615815)$">
         <action application="set" data="domain_name=$${domain}"/>
         <action application="transfer" data="ivr_menu XML default"/>
       </condition>
     </extension>
     
     <!-- –õ—é–±—ã–µ –¥—Ä—É–≥–∏–µ –≤—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏ -->
     <extension name="inbound_any">
       <condition field="destination_number" expression="^(.*)$">
         <action application="set" data="domain_name=$${domain}"/>
         <action application="transfer" data="ivr_menu XML default"/>
       </condition>
     </extension>
     
     <!-- Echo —Ç–µ—Å—Ç -->
     <extension name="echo_test">
       <condition field="destination_number" expression="^9999$">
         <action application="answer"/>
         <action application="echo"/>
       </condition>
     </extension>
     
   </context>
   
   <!-- –ü—É–±–ª–∏—á–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –≤—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–æ–≤ -->
   <context name="public">
     <extension name="inbound_public">
       <condition field="destination_number" expression="^(.*)$">
         <action application="set" data="domain_name=$${domain}"/>
         <action application="transfer" data="ivr_menu XML default"/>
       </condition>
     </extension>
   </context>
   
 </include>
 EOF

 log_success "Dialplan –æ–±–Ω–æ–≤–ª–µ–Ω"

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π IVR —Å–∫—Ä–∏–ø—Ç
log_info "–°–æ–∑–¥–∞–µ–º IVR —Å–∫—Ä–∏–ø—Ç..."

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è scripts –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
mkdir -p freeswitch/scripts

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π IVR —Å–∫—Ä–∏–ø—Ç –Ω–∞ Lua
cat > freeswitch/scripts/ivr_menu.lua << 'EOF'
-- Simple IVR Menu for Dailer System
-- –ü—Ä–æ—Å—Ç–æ–µ IVR –º–µ–Ω—é –¥–ª—è —Å–∏—Å—Ç–µ–º—ã Dailer

-- –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é
session = session or {}

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –∑–≤—É–∫–∞ —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏
function play_and_get_digits(prompt, min_digits, max_digits, tries, timeout, terminators)
    if session:ready() then
        local digits = session:playAndGetDigits(min_digits, max_digits, tries, timeout, terminators, prompt, "", "")
        return digits
    end
    return ""
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è IVR
function main()
    if not session:ready() then
        freeswitch.consoleLog("ERR", "Session not ready\n")
        return
    end
    
    -- –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∑–≤–æ–Ω–æ–∫ –µ—Å–ª–∏ –µ—â–µ –Ω–µ –æ—Ç–≤–µ—á–µ–Ω
    if not session:answered() then
        session:answer()
        session:sleep(1000)
    end
    
    freeswitch.consoleLog("INFO", "IVR Menu started\n")
    
    -- –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    local tries = 0
    local max_tries = 3
    
    while tries < max_tries do
        -- –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –º–µ–Ω—é
        session:streamFile("silence_stream://1000")
        
        -- –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –º–µ–Ω—é (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã)
        session:speak("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –î–∞–π–ª–µ—Ä. –ù–∞–∂–º–∏—Ç–µ 1 –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è, 2 –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –∏–ª–∏ 0 –¥–ª—è —Å–≤—è–∑–∏ —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º.")
        
        -- –ü–æ–ª—É—á–∞–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        local choice = play_and_get_digits("", 1, 1, 1, 5000, "#")
        
        freeswitch.consoleLog("INFO", "User choice: " .. choice .. "\n")
        
        if choice == "1" then
            -- –í–∞—Ä–∏–∞–Ω—Ç 1: –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
            session:speak("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤—ã–±–æ—Ä. –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤–∞—Å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø.")
            session:sleep(2000)
            -- –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ–¥–∞—á–∏ –Ω–∞ –¥—Ä—É–≥–æ–µ –º–µ–Ω—é –∏–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
            session:speak("–ó–≤–æ–Ω–æ–∫ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è.")
            break
            
        elseif choice == "2" then
            -- –í–∞—Ä–∏–∞–Ω—Ç 2: –ó–∞–≤–µ—Ä—à–∏—Ç—å
            session:speak("–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è.")
            break
            
        elseif choice == "0" then
            -- –í–∞—Ä–∏–∞–Ω—Ç 0: –û–ø–µ—Ä–∞—Ç–æ—Ä
            session:speak("–ü–µ—Ä–µ–≤–æ–¥–∏–º –≤–∞—Å –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ.")
            -- –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
            session:sleep(3000)
            session:speak("–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –≤—Å–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –∑–∞–Ω—è—Ç—ã. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è.")
            break
            
        else
            -- –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä
            tries = tries + 1
            if tries < max_tries then
                session:speak("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
            else
                session:speak("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫. –ó–≤–æ–Ω–æ–∫ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è.")
            end
        end
    end
    
    freeswitch.consoleLog("INFO", "IVR Menu ended\n")
    session:hangup()
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main()
EOF

log_success "IVR —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω"

# üîß –≠–¢–ê–ü 5: –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –í –ö–û–ù–¢–ï–ô–ù–ï–†
echo ""
echo "üîß –≠–¢–ê–ü 5: –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ò–ó–ú–ï–ù–ï–ù–ò–ô"
echo "==============================="

log_info "–ö–æ–ø–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."

# –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
if docker cp freeswitch/conf/. "$CONTAINER_NAME:/usr/local/freeswitch/conf/"; then
    log_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞"
else
    log_error "–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    exit 1
fi

# –ö–æ–ø–∏—Ä—É–µ–º IVR —Å–∫—Ä–∏–ø—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
if [ -d "freeswitch/scripts" ]; then
    log_info "–ö–æ–ø–∏—Ä—É–µ–º IVR —Å–∫—Ä–∏–ø—Ç—ã..."
    if docker cp freeswitch/scripts/. "$CONTAINER_NAME:/usr/local/freeswitch/scripts/"; then
        log_success "IVR —Å–∫—Ä–∏–ø—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
    else
        log_warning "–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è IVR —Å–∫—Ä–∏–ø—Ç–æ–≤"
    fi
fi

# –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
log_info "–ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ FreeSWITCH..."

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º XML
if docker exec "$CONTAINER_NAME" fs_cli -x "reloadxml" 2>/dev/null; then
    log_success "XML –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞"
else
    log_warning "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ XML"
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º SIP –ø—Ä–æ—Ñ–∏–ª–∏
log_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º SIP –ø—Ä–æ—Ñ–∏–ª–∏..."
docker exec "$CONTAINER_NAME" fs_cli -x "sofia profile internal restart" 2>/dev/null || true
docker exec "$CONTAINER_NAME" fs_cli -x "sofia profile external restart" 2>/dev/null || true

# –ñ–¥–µ–º —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
log_info "–û–∂–∏–¥–∞–µ–º —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ (10 —Å–µ–∫—É–Ω–¥)..."
sleep 10

# üìä –≠–¢–ê–ü 6: –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í
echo ""
echo "üìä –≠–¢–ê–ü 6: –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í"
echo "==============================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å FreeSWITCH
if docker exec "$CONTAINER_NAME" fs_cli -x "status" 2>/dev/null | grep -q "UP"; then
    log_success "FreeSWITCH —Ä–∞–±–æ—Ç–∞–µ—Ç"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π Caller ID
    echo ""
    log_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º Caller ID..."
    if docker exec "$CONTAINER_NAME" find /usr/local/freeswitch/conf -name "*.xml" -exec grep -l "$NEW_CALLER_ID" {} \; 2>/dev/null | head -1 >/dev/null; then
        log_success "‚úÖ Caller ID $NEW_CALLER_ID –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!"
    else
        log_warning "‚ö†Ô∏è Caller ID –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º SIP –ø—Ä–æ—Ñ–∏–ª–∏
    echo ""
    log_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º SIP –ø—Ä–æ—Ñ–∏–ª–∏..."
    SIP_STATUS=$(docker exec "$CONTAINER_NAME" fs_cli -x "sofia status" 2>/dev/null)
    echo "$SIP_STATUS"
    
    if echo "$SIP_STATUS" | grep -q "external.*RUNNING"; then
        log_success "‚úÖ SIP –ø—Ä–æ—Ñ–∏–ª—å external —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log_warning "‚ö†Ô∏è SIP –ø—Ä–æ—Ñ–∏–ª—å external –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º SIP —à–ª—é–∑—ã
    echo ""
    log_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º SIP —à–ª—é–∑—ã..."
    GATEWAY_STATUS=$(docker exec "$CONTAINER_NAME" fs_cli -x "sofia status gateway" 2>/dev/null || echo "–û–®–ò–ë–ö–ê")
    echo "$GATEWAY_STATUS"
    
else
    log_error "‚ùå FreeSWITCH –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    
    log_info "–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    docker restart "$CONTAINER_NAME"
    sleep 30
    
    if docker exec "$CONTAINER_NAME" fs_cli -x "status" 2>/dev/null | grep -q "UP"; then
        log_success "FreeSWITCH –∑–∞–ø—É—â–µ–Ω –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞"
    else
        log_error "FreeSWITCH –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è"
    fi
fi

echo ""
echo "üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ü–û–†–¢–ê–ú (–î–õ–Ø –í–ê–®–ï–ô –ê–†–•–ò–¢–ï–ö–¢–£–†–´)"
echo "=================================================="
echo ""
echo "üìã –í–∞—à–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: FreeSWITCH + –ë—ç–∫–µ–Ω–¥ –Ω–∞ –æ–¥–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ"
echo ""
echo "‚úÖ –ù–£–ñ–ù–û –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—Ä—É–∂—É (–¥–ª—è SIP –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞):"
echo "   üîå 5060/udp - –≤—Ö–æ–¥—è—â–∏–µ SIP –∑–≤–æ–Ω–∫–∏"
echo "   üîå 5080/udp - –∏—Å—Ö–æ–¥—è—â–∏–µ SIP –∑–≤–æ–Ω–∫–∏"
echo ""
echo "‚ùå –ù–ï –Ω—É–∂–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å (—Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–≤—è–∑—å):"
echo "   üîí 8021/tcp - ESL –¥–ª—è —Å–≤—è–∑–∏ —Å –±—ç–∫–µ–Ω–¥–æ–º"
echo ""
echo "üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ docker-compose.yml:"
echo ""
echo "services:"
echo "  freeswitch:"
echo "    ports:"
echo "      - \"5060:5060/udp\"  # SIP –≤—Ö–æ–¥—è—â–∏–µ"
echo "      - \"5080:5080/udp\"  # SIP –∏—Å—Ö–æ–¥—è—â–∏–µ"
echo "    networks:"
echo "      - internal_network  # –î–ª—è —Å–≤—è–∑–∏ —Å –±—ç–∫–µ–Ω–¥–æ–º"
echo ""
echo "  backend:"
echo "    networks:"
echo "      - internal_network  # –î–æ—Å—Ç—É–ø –∫ FreeSWITCH —á–µ—Ä–µ–∑ ESL"
echo ""
echo "networks:"
echo "  internal_network:"
echo "    driver: bridge"
echo ""
echo "üîó –ë—ç–∫–µ–Ω–¥ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ FreeSWITCH:"
echo "   ESL: freeswitch:8021 (–≤–Ω—É—Ç—Ä–∏ Docker —Å–µ—Ç–∏)"
echo ""

echo ""
echo "üß™ –ö–û–ú–ê–ù–î–´ –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø"
echo "==========================="
echo ""
echo "# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å:"
echo "docker exec $CONTAINER_NAME fs_cli -x 'status'"
echo ""
echo "# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å SIP –ø—Ä–æ—Ñ–∏–ª–∏:"
echo "docker exec $CONTAINER_NAME fs_cli -x 'sofia status'"
echo ""
echo "# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å SIP —à–ª—é–∑—ã:"
echo "docker exec $CONTAINER_NAME fs_cli -x 'sofia status gateway'"
echo ""
echo "# –¢–µ—Å—Ç –∏—Å—Ö–æ–¥—è—â–µ–≥–æ –∑–≤–æ–Ω–∫–∞ —Å IVR:"
echo "docker exec $CONTAINER_NAME fs_cli -x 'originate sofia/gateway/sip_trunk/79001234567 &transfer:ivr_menu'"
echo ""
echo "# –¢–µ—Å—Ç IVR –º–µ–Ω—é –Ω–∞–ø—Ä—è–º—É—é:"
echo "docker exec $CONTAINER_NAME fs_cli -x 'originate loopback/ivr_menu &echo'"
echo ""
echo "# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å dialplan:"
echo "docker exec $CONTAINER_NAME fs_cli -x 'xml_locate dialplan'"
echo ""
echo "# –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏:"
echo "docker logs -f $CONTAINER_NAME"
echo ""
echo "# –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ FreeSWITCH CLI –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏:"
echo "docker exec -it $CONTAINER_NAME fs_cli"
echo ""

echo ""
log_success "üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –ß–¢–û –ò–°–ü–†–ê–í–õ–ï–ù–û:"
echo "   ‚úÖ Caller ID –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ $NEW_CALLER_ID"
echo "   ‚úÖ SIP –ø—Ä–æ—Ñ–∏–ª—å external —Å–æ–∑–¥–∞–Ω –¥–ª—è –∏—Å—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–æ–≤"
echo "   ‚úÖ Dialplan —Å IVR –º–µ–Ω—é –¥–ª—è –≤—Ö–æ–¥—è—â–∏—Ö –∏ –∏—Å—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–æ–≤"
echo "   ‚úÖ IVR —Å–∫—Ä–∏–ø—Ç –Ω–∞ Lua —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º –º–µ–Ω—é"
echo "   ‚úÖ –ü—É–±–ª–∏—á–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –≤—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–æ–≤"
echo "   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞"
echo ""
echo "üìû –ê–†–•–ò–¢–ï–ö–¢–£–†–ê:"
echo "   üéØ –ò—Å—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏: –ë—ç–∫–µ–Ω–¥ ‚Üí FreeSWITCH ‚Üí SIP Trunk ‚Üí IVR"
echo "   üì≤ –í—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏: SIP Trunk ‚Üí FreeSWITCH ‚Üí IVR –º–µ–Ω—é"
echo "   üîó –°–≤—è–∑—å –±—ç–∫–µ–Ω–¥–∞: ESL —á–µ—Ä–µ–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é Docker —Å–µ—Ç—å"
echo ""
echo "‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø:"
echo "   üîå –û—Ç–∫—Ä—ã—Ç—å SIP –ø–æ—Ä—Ç—ã –Ω–∞—Ä—É–∂—É (5060, 5080) –¥–ª—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞"
echo "   üîê –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å SIP trunk –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é external_sip_password"
echo "   üéµ –ó–∞–º–µ–Ω–∏—Ç—å speak() –Ω–∞ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞"
echo ""
echo "üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è IVR –º–µ–Ω—é –∏ –∑–≤–æ–Ω–∫–æ–≤!" 
#!/bin/bash

# –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï TERSER –ü–†–û–ë–õ–ï–ú–´

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üîß –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï TERSER –ü–†–û–ë–õ–ï–ú–´"

log "üìã –ü–†–û–ë–õ–ï–ú–ê:"
echo "  ‚ùå Terser –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –≤ Vite 3+"
echo "  ‚ùå –û—à–∏–±–∫–∞: terser not found, it's optional dependency"

log "‚úÖ –†–ï–®–ï–ù–ò–ï:"
echo "  ‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è —Å 'terser' –Ω–∞ 'esbuild'"
echo "  ‚úÖ esbuild –≤—Å—Ç—Ä–æ–µ–Ω –≤ Vite (–±—ã—Å—Ç—Ä–µ–µ –∏ –±–µ–∑ –¥–æ–ø. –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)"

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose -f docker-compose-ready.yml down --remove-orphans 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ —Ç–æ–ª—å–∫–æ frontend –æ–±—Ä–∞–∑–∞
log "üßπ –û—á–∏—Å—Ç–∫–∞ frontend –æ–±—Ä–∞–∑–∞..."
docker images | grep "dailer-frontend" | awk '{print $3}' | xargs -r docker rmi -f 2>/dev/null || true

log "üöÄ –°–ë–û–†–ö–ê FRONTEND –° ESBUILD –ú–ò–ù–ò–§–ò–ö–ê–¶–ò–ï–ô..."

# –°–±–æ—Ä–∫–∞ frontend —Å esbuild
docker compose -f docker-compose-ready.yml build frontend --no-cache --progress=plain

BUILD_RESULT=$?

if [ $BUILD_RESULT -ne 0 ]; then
    log "‚ùå –°–ë–û–†–ö–ê FRONTEND –í–°–ï –ï–©–ï –ù–ï –£–î–ê–õ–ê–°–¨"
    log "üìã –í–û–ó–ú–û–ñ–ù–´–ï –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–´:"
    echo "  1. –û—Ç–∫–ª—é—á–∏—Ç—å –º–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–æ–ª–Ω–æ—Å—Ç—å—é: minify: false"
    echo "  2. –î–æ–±–∞–≤–∏—Ç—å terser –≤ package.json: npm install --save-dev terser"
    echo "  3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥—Ä—É–≥–∏–µ TypeScript –æ—à–∏–±–∫–∏"
    
    echo ""
    echo "üìù –õ–æ–≥–∏ —Å–±–æ—Ä–∫–∏ frontend (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):"
    docker logs $(docker ps -a --filter "name=frontend" --format "{{.ID}}" | head -1) --tail 20 2>/dev/null || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
    
    exit 1
fi

log "‚úÖ Frontend —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ —Å esbuild!"

# –ó–∞–ø—É—Å–∫ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã
log "üîÑ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose -f docker-compose-ready.yml up -d

# –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (1 –º–∏–Ω—É—Ç–∞)
log "‚è∞ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ (1 –º–∏–Ω—É—Ç–∞)..."

for i in $(seq 1 12); do
    sleep 5
    
    # –ü–æ–¥—Å—á–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    RUNNING_COUNT=$(docker ps --filter "name=dialer_.*_ready" --format "{{.Names}}" | wc -l)
    
    log "üìä –ó–∞–ø—É—â–µ–Ω–æ —Å–µ—Ä–≤–∏—Å–æ–≤: $RUNNING_COUNT/5 ($((i*5)) —Å–µ–∫)"
    
    if [ $RUNNING_COUNT -eq 5 ]; then
        log "üéâ –í–°–ï 5 –°–ï–†–í–ò–°–û–í –ó–ê–ü–£–©–ï–ù–´!"
        
        # –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        sleep 10
        
        # –¢–µ—Å—Ç Frontend
        if curl -sf http://localhost:3000 >/dev/null 2>&1; then
            log "‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ http://localhost:3000"
        else
            log "‚ö†Ô∏è Frontend –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
        fi
        
        # –¢–µ—Å—Ç Backend API
        if curl -sf http://localhost:3001/health >/dev/null 2>&1; then
            log "‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            log "‚ö†Ô∏è Backend API –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
        fi
        
        log "üìã –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´:"
        docker compose -f docker-compose-ready.yml ps
        
        log "üéØ –°–ò–°–¢–ï–ú–ê –ó–ê–ü–£–©–ï–ù–ê!"
        echo ""
        echo "üéâ TERSER –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê!"
        echo "   ‚úÖ Frontend —Å–æ–±—Ä–∞–Ω —Å esbuild –º–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏–µ–π"
        echo "   ‚úÖ –í—Å–µ 5 —Å–µ—Ä–≤–∏—Å–æ–≤ –∑–∞–ø—É—â–µ–Ω—ã"
        echo ""
        echo "üåê Frontend:    http://localhost:3000"
        echo "üîß Backend:     http://localhost:3001/health"
        echo "üìû Asterisk:    docker exec -it dialer_asterisk_ready asterisk -r"
        echo ""
        log "‚úÖ –ú–ò–ì–†–ê–¶–ò–Ø FreeSWITCH ‚ûú ASTERISK –†–ê–ë–û–¢–ê–ï–¢!"
        
        exit 0
    fi
done

# –ï—Å–ª–∏ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å –∑–∞ –º–∏–Ω—É—Ç—É
log "‚ö†Ô∏è –ù–ï –í–°–ï –°–ï–†–í–ò–°–´ –ó–ê–ü–£–°–¢–ò–õ–ò–°–¨ –ó–ê 1 –ú–ò–ù–£–¢–£"
log "üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:"
docker compose -f docker-compose-ready.yml ps

log "üí° –ó–ê–ü–£–°–¢–ò–¢–ï –†–ê–°–®–ò–†–ï–ù–ù–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì:"
echo "  ./fix-frontend-and-restart.sh  # –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–∞ 3 –º–∏–Ω—É—Ç—ã"

exit 0 
#!/bin/bash

# –ü–û–õ–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï WEBSOCKET –ü–†–û–ë–õ–ï–ú

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï WEBSOCKET –û–®–ò–ë–û–ö!"

log "‚ùå –ü–†–û–ë–õ–ï–ú–ê:"
echo "  WebSocket connection to 'ws://localhost:3001/socket.io/' failed"
echo "  ‚ùå WebSocket –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: TransportError"
echo "  üéØ Backend –º–æ–∂–µ—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å Socket.IO –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"

log "üîç –®–ê–ì 1: –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê BACKEND WEBSOCKET..."

echo "=== –ü–†–û–í–ï–†–ö–ê –õ–û–ì–û–í BACKEND ==="
docker compose -f docker-compose.no-asterisk.yml logs backend --tail 20

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–û–í BACKEND ==="
docker compose -f docker-compose.no-asterisk.yml exec backend netstat -tlnp 2>/dev/null | grep 3000 || echo "netstat –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω"

echo ""
echo "=== –¢–ï–°–¢ SOCKET.IO ENDPOINT ==="
curl -v http://localhost:3001/socket.io/ 2>&1 | head -10 || echo "Endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

log "üöÄ –®–ê–ì 2: –ü–ï–†–ï–ó–ê–ü–£–°–ö BACKEND –î–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø WEBSOCKET..."

echo "=== –ü–ï–†–ï–ó–ê–ü–£–°–ö BACKEND ==="
docker compose -f docker-compose.no-asterisk.yml restart backend

echo "–û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ backend..."
sleep 20

echo ""
echo "=== –õ–û–ì–ò BACKEND –ü–û–°–õ–ï –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê ==="
docker compose -f docker-compose.no-asterisk.yml logs backend --tail 15

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê SOCKET.IO –ü–û–°–õ–ï –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê ==="
SOCKET_TEST=$(curl -s http://localhost:3001/socket.io/ 2>/dev/null || echo "failed")
if [[ "$SOCKET_TEST" != "failed" ]]; then
    echo "‚úÖ Socket.IO endpoint –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå Socket.IO endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

log "üß™ –®–ê–ì 3: –ü–û–õ–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´..."

echo "=== –¢–ï–°–¢ BACKEND API ==="
HEALTH_RESPONSE=$(curl -sf http://localhost:3001/health 2>/dev/null)
if [ $? -eq 0 ]; then
    echo "‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    echo "Response: $HEALTH_RESPONSE"
else
    echo "‚ùå Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo ""
echo "=== –¢–ï–°–¢ FRONTEND ==="
if curl -sf http://localhost:5173 >/dev/null 2>&1; then
    echo "‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç!"
else
    echo "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo ""
echo "=== –°–¢–ê–¢–£–° –í–°–ï–• –°–ï–†–í–ò–°–û–í ==="
docker compose -f docker-compose.no-asterisk.yml ps

log "üéØ –†–ï–®–ï–ù–ò–ï WEBSOCKET –ü–†–û–ë–õ–ï–ú –ó–ê–í–ï–†–®–ï–ù–û!"

echo ""
echo "üí° –ï–°–õ–ò WEBSOCKET –í–°–ï –ï–©–ï –ù–ï –†–ê–ë–û–¢–ê–ï–¢:"
echo "  1. WebSocket –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω –≤ backend –∫–æ–¥–µ"
echo "  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∑–∞–ø—É—â–µ–Ω –ª–∏ Socket.IO —Å–µ—Ä–≤–µ—Ä –≤ backend"
echo "  3. –ú–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å WebSocket –≤ frontend –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏"
echo ""
echo "‚úÖ –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–ê–Æ–¢ –ë–ï–ó WEBSOCKET!"
echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:5173"
echo "üöÄ Backend API: http://localhost:3001/health" 
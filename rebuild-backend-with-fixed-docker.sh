#!/bin/bash

# –ë–´–°–¢–†–ê–Ø –ü–ï–†–ï–°–ë–û–†–ö–ê BACKEND –° –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ú DOCKERFILE

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üîß –ü–ï–†–ï–°–ë–û–†–ö–ê BACKEND –° –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ú DOCKERFILE!"

log "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –í DOCKERFILE:"
echo "  üîß COPY backend/package.json ./ (–±—ã–ª–æ: COPY package.json ./)"
echo "  üîß COPY backend/ . (–±—ã–ª–æ: COPY . .)"
echo "  üîß –í—Å–µ –ø—É—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –¥–ª—è build context –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞"

log "üßπ –®–ê–ì 1: –û–ß–ò–°–¢–ö–ê –°–¢–ê–†–´–• –ö–û–ù–¢–ï–ô–ù–ï–†–û–í –ò –û–ë–†–ê–ó–û–í..."

echo "=== –û–°–¢–ê–ù–û–í–ö–ê –ò –£–î–ê–õ–ï–ù–ò–ï BACKEND ==="
docker compose stop backend 2>/dev/null || true
docker compose rm -f backend 2>/dev/null || true

echo ""
echo "=== –£–î–ê–õ–ï–ù–ò–ï –°–¢–ê–†–´–• –û–ë–†–ê–ó–û–í ==="
docker rmi $(docker images | grep backend | awk '{print $3}') 2>/dev/null || echo "–°—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã backend –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
docker system prune -f

log "üîß –®–ê–ì 2: –ü–ï–†–ï–°–ë–û–†–ö–ê –° –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ú DOCKERFILE..."

echo "=== –°–ë–û–†–ö–ê BACKEND –° –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò –ü–£–¢–Ø–ú–ò ==="
if docker compose build backend; then
    log "‚úÖ Backend –æ–±—Ä–∞–∑ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω!"
else
    log "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ backend –æ–±—Ä–∞–∑–∞"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"
    exit 1
fi

log "üöÄ –®–ê–ì 3: –ó–ê–ü–£–°–ö –û–ë–ù–û–í–õ–ï–ù–ù–û–ì–û BACKEND..."

echo "=== –ó–ê–ü–£–°–ö BACKEND –ö–û–ù–¢–ï–ô–ù–ï–†–ê ==="
if docker compose up -d backend; then
    log "‚úÖ Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω!"
else
    log "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
    echo "–í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ—Ä—Ç–∞–º–∏ –∏–ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
    docker compose ps
    exit 1
fi

log "‚è≥ –®–ê–ì 4: –û–ñ–ò–î–ê–ù–ò–ï –ó–ê–ü–£–°–ö–ê –ò –ü–†–û–í–ï–†–ö–ê..."

echo "–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ backend..."
sleep 25

echo ""
echo "=== –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –í–°–ï–• –ö–û–ù–¢–ï–ô–ù–ï–†–û–í ==="
docker compose ps

echo ""
echo "=== –õ–û–ì–ò BACKEND –ü–û–°–õ–ï –ü–ï–†–ï–°–ë–û–†–ö–ò ==="
docker logs dialer_backend_ready --tail 20 2>/dev/null || docker logs $(docker ps | grep backend | awk '{print $1}') --tail 20 2>/dev/null || echo "Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"

echo ""
echo "=== –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ API ==="

SUCCESS=false
for i in {1..6}; do
    echo "–ü–æ–ø—ã—Ç–∫–∞ ${i}/6:"
    
    if curl -sf http://localhost:3001/health >/dev/null 2>&1; then
        SUCCESS=true
        break
    else
        echo "  API –ø–æ–∫–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –æ–∂–∏–¥–∞–Ω–∏–µ..."
        sleep 10
    fi
done

if [ "$SUCCESS" = true ]; then
    log "üéâ üéâ üéâ –ê–ë–°–û–õ–Æ–¢–ù–ê–Ø –ü–û–ë–ï–î–ê! API –†–ê–ë–û–¢–ê–ï–¢! üéâ üéâ üéâ"
    
    echo ""
    echo "‚úÖ ‚úÖ ‚úÖ –í–°–ï –ü–†–û–ë–õ–ï–ú–´ –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û –†–ï–®–ï–ù–´! ‚úÖ ‚úÖ ‚úÖ"
    echo ""
    echo "üõ†Ô∏è –†–ï–®–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:"
    echo "  üõ£Ô∏è  –í–°–ï require() –ø—É—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã ‚úì"
    echo "  üì¶ –í–°–ï –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è ‚úì"
    echo "  üîí –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã ‚úì"
    echo "  üê≥ Docker –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã ‚úì"
    echo "  üóÑÔ∏è  –ü–æ–ª–Ω–∞—è —Å—Ö–µ–º–∞ –ë–î –∏–∑ 10 —Ç–∞–±–ª–∏—Ü ‚úì"
    echo "  ‚ö° ASYNC/AWAIT –ø—Ä–æ–±–ª–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ ‚úì"
    echo "  üêã DOCKERFILE –ø—É—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã ‚úì"
    echo "  üöÄ Backend API –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úì"
    echo "  üåê –í—Å–µ 5 —Å–µ—Ä–≤–∏—Å–æ–≤ healthy ‚úì"
    echo ""
    echo "üåê PRODUCTION VoIP –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ù–ê 100%!"
    echo "  Frontend:     http://localhost:3000"
    echo "  Backend API:  http://localhost:3001/health"
    echo "  Asterisk AMI: localhost:5038"  
    echo "  PostgreSQL:   localhost:5432"
    echo "  Redis:        localhost:6379"
    echo ""
    echo "üèÅ –ú–ò–ì–†–ê–¶–ò–Ø FreeSWITCH ‚ûú ASTERISK –ó–ê–í–ï–†–®–ï–ù–ê!"
    echo "üöÄ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –î–õ–Ø PRODUCTION!"
    echo "üéØ –í–°–ï –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´ –†–ï–®–ï–ù–´!"
    
    echo ""
    echo "üìä –§–ò–ù–ê–õ–¨–ù–´–ô –°–¢–ê–¢–£–° –í–°–ï–ô –°–ò–°–¢–ï–ú–´:"
    docker compose ps
    
    echo ""
    echo "‚úÖ HEALTH CHECK RESPONSE:"
    curl -s http://localhost:3001/health | jq 2>/dev/null || curl -s http://localhost:3001/health
    
    echo ""
    echo "üéâ SUCCESS! –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–ê!"
    echo "üéä –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å VoIP –¥–∏–∞–ª–µ—Ä –≤ production!"
    
else
    log "‚ö†Ô∏è API –ø–æ–∫–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏"
    
    echo ""
    echo "üìä –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:"
    echo ""
    echo "=== –°–¢–ê–¢–£–° –ö–û–ù–¢–ï–ô–ù–ï–†–û–í ==="
    docker compose ps
    
    echo ""
    echo "=== –ü–û–°–õ–ï–î–ù–ò–ï –õ–û–ì–ò BACKEND ==="
    docker logs $(docker ps | grep backend | awk '{print $1}') --tail 30 2>/dev/null || echo "Backend –ª–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
    
    echo ""
    echo "=== –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–û–í ==="
    netstat -tlnp | grep :3001 || echo "–ü–æ—Ä—Ç 3001 –Ω–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"
    
    echo ""
    log "üîß Dockerfile –∏—Å–ø—Ä–∞–≤–ª–µ–Ω, –Ω–æ –≤–æ–∑–º–æ–∂–Ω—ã –¥—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–¥–µ"
    log "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ backend –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"
fi

echo ""
log "üéØ DOCKERFILE –ò–°–ü–†–ê–í–õ–ï–ù - –í–°–ï COPY –ü–£–¢–ò –ö–û–†–†–ï–ö–¢–ù–´–ï" 
# Конфигурация сервисов для системы автодозвона
services:
  # База данных PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: dialer_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: dialer_db
      POSTGRES_USER: dialer_user
      POSTGRES_PASSWORD: secure_password_123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - dialer_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dialer_user -d dialer_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis для кэширования
  redis:
    image: redis:7-alpine
    container_name: dialer_redis
    restart: unless-stopped
    command: redis-server --requirepass redis_password_123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - dialer_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # FreeSWITCH (ВРЕМЕННО ОТКЛЮЧЕН для тестирования Asterisk)
  # freeswitch:
  #   build: 
  #     context: ./docker/freeswitch
  #     dockerfile: Dockerfile
  #   container_name: dialer_freeswitch
  #   restart: unless-stopped
  #   ports:
  #     - "5060:5060/udp"    # SIP
  #     - "5080:5080/udp"    # SIP альтернативный
  #     - "8021:8021"        # ESL (Event Socket Library)
  #     - "16384-16394:16384-16394/udp"  # RTP медиа
  #   volumes:
  #     - ./freeswitch/conf:/usr/local/freeswitch/conf
  #     - freeswitch_logs:/usr/local/freeswitch/log
  #     - freeswitch_sounds:/usr/local/freeswitch/sounds
  #     - ./audio:/usr/local/freeswitch/sounds/audio
  #   networks:
  #     - dialer_network
  #   environment:
  #     - DAEMON=false
  #     - TZ=Europe/Moscow
  #   command: ["freeswitch", "-nc", "-nonat"]
  #   healthcheck:
  #     test: ["CMD", "fs_cli", "-x", "status"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # Asterisk (альтернативный VoIP сервер)
  asterisk:
    build: 
      context: ./docker/asterisk
      dockerfile: Dockerfile
    container_name: dialer_asterisk
    restart: unless-stopped
    privileged: true
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN
      - SYS_PTRACE
    ports:
      - "5061:5060/udp"    # SIP (другой порт чтобы не конфликтовать)
      - "5061:5060/tcp"    # SIP TCP
      - "5038:5038"        # AMI (Asterisk Manager Interface)
      - "8088:8088"        # ARI (Asterisk REST Interface)
      - "10000-10020:10000-10020/udp"  # RTP медиа
    volumes:
      - ./docker/asterisk/conf:/etc/asterisk
      - asterisk_logs:/var/log/asterisk
      - asterisk_lib:/var/lib/asterisk
      - asterisk_spool:/var/spool/asterisk
      - ./audio:/var/lib/asterisk/sounds/audio
    networks:
      - dialer_network
    environment:
      - TZ=Europe/Moscow
      - ASTERISK_UID=1000
      - ASTERISK_GID=1000
      - EXTERNAL_IP=${EXTERNAL_IP:-auto}
      - SIP_PROVIDER_HOST=62.141.121.197
      - SIP_PROVIDER_PORT=5070
    command: ["asterisk", "-f", "-c", "-U", "root", "-G", "root"]
    healthcheck:
      test: ["CMD", "asterisk", "-rx", "core show version"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Убираем profiles чтобы контейнер запускался по умолчанию
    # profiles:
    #   - asterisk

  # Backend Node.js
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
      target: development
    container_name: dialer_backend
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - ./backend/src:/app/src
      - ./backend/logs:/app/logs
      - ./audio:/app/audio:rw
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://dialer_user:secure_password_123@postgres:5432/dialer_db
      - REDIS_URL=redis://:redis_password_123@redis:6379
      # VoIP Provider Configuration
      - VOIP_PROVIDER=${VOIP_PROVIDER:-asterisk}
      # FreeSWITCH Configuration
      - FREESWITCH_HOST=freeswitch
      - FREESWITCH_PORT=8021
      - FREESWITCH_PASSWORD=ClueCon
      # Asterisk Configuration
      - ASTERISK_HOST=asterisk
      - ASTERISK_PORT=5038
      - ASTERISK_USERNAME=admin
      - ASTERISK_PASSWORD=admin
      - JWT_SECRET=e556e588ee21e16ed4485a2c94149363ec8c85c881801895ecce9d786d41084e445fca510a8cf7d6fe771e65d956e23d1e0b40b6b82029b1920bb034c17a5149
      - MAX_CONCURRENT_CALLS=10
      - CALLS_PER_MINUTE=30
      - LOG_LEVEL=info
      - MONITORING_ENABLED=true
      - CORS_ORIGIN=http://localhost:5173
      - SIP_PROVIDER_HOST=62.141.121.197
      - SIP_PROVIDER_PORT=5070
      - SIP_PROVIDER_USERNAME=
      - SIP_PROVIDER_PASSWORD=
      - SIP_CALLER_ID_NUMBER=${SIP_CALLER_ID_NUMBER:-+70000000000}
      # Настройки для загрузки файлов и таймаутов
      - REQUEST_TIMEOUT=120000
      - BODY_PARSER_LIMIT=50mb
      - UPLOAD_TIMEOUT=300000
      - AUDIO_UPLOAD_PATH=/app/audio
      - AUDIO_MAX_SIZE=52428800
      - SUPPORTED_AUDIO_FORMATS=mp3,wav,m4a
    networks:
      - dialer_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      # freeswitch:
      #   condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Vue.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: dialer_frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    environment:
      - NODE_ENV=development
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3000}
      - VITE_WS_URL=${VITE_WS_URL:-ws://localhost:3000}
    networks:
      - dialer_network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  # freeswitch_logs:
  #   driver: local
  # freeswitch_sounds:
  #   driver: local
  asterisk_logs:
    driver: local
  asterisk_lib:
    driver: local
  asterisk_spool:
    driver: local

networks:
  dialer_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16 
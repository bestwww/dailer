#!/bin/bash

# üéØ –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø IVR –ü–û –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò FREESWITCH
# –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏ –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö

CONTAINER_NAME="freeswitch-test"
PHONE_NUMBER="79206054020"

echo "üéØ –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø IVR"
echo "============================"
echo ""

echo "üìö –ò–ó–£–ß–ï–ù–ù–ê–Ø –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø –ü–û–ö–ê–ó–ê–õ–ê:"
echo "- ‚ùå –ú—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ originate –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û"
echo "- ‚ùå originate –¥–ª—è –ò–°–•–û–î–Ø–©–ò–• –∑–≤–æ–Ω–∫–æ–≤, –Ω–µ –¥–ª—è IVR"
echo "- ‚úÖ IVR = dialplan extensions + JavaScript/Lua"
echo "- ‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –ª–æ–∫–∞–ª—å–Ω—ã–µ extensions"
echo ""

# –≠–¢–ê–ü 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –¥–∏–∞–ª–ø–ª–∞–Ω–∞ –¥–ª—è IVR
echo "üìã –≠–¢–ê–ü 1: –ü–†–ê–í–ò–õ–¨–ù–´–ô DIALPLAN"
echo "============================"

echo ""
echo "–°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–ø–ª–∞–Ω –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ FreeSWITCH..."

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–∏–∞–ª–ø–ª–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
cat > /tmp/correct_dialplan.xml << 'EOF'
<?xml version="1.0" encoding="utf-8"?>
<!--
  –ü–†–ê–í–ò–õ–¨–ù–´–ô –î–ò–ê–õ–ü–õ–ê–ù –ü–û –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò FREESWITCH
  –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ JavaScript Example - Say IVR Menu
-->
<include>
  <context name="default">
    
    <!-- Echo —Ç–µ—Å—Ç (–†–ê–ë–û–¢–ê–ï–¢) -->
    <extension name="echo_test">
      <condition field="destination_number" expression="^(echo|9196)$">
        <action application="answer"/>
        <action application="echo"/>
      </condition>
    </extension>

    <!-- –ü–†–ê–í–ò–õ–¨–ù–´–ô IVR —Å JavaScript -->
    <extension name="ivr_menu">
      <condition field="destination_number" expression="^(1200|ivr)$">
        <action application="javascript" data="ivr_menu.js"/>
      </condition>
    </extension>

    <!-- –ü—Ä–æ—Å—Ç–æ–π IVR –±–µ–∑ JavaScript (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è) -->
    <extension name="simple_ivr">
      <condition field="destination_number" expression="^(1201)$">
        <action application="answer"/>
        <action application="sleep" data="1000"/>
        <action application="playback" data="tone_stream://%(1000,500,800)"/>
        <action application="read" data="1,1,tone_stream://%(200,100,300),choice,5000"/>
        <action application="log" data="INFO –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${choice}"/>
        
        <!-- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ -->
        <action application="transfer" data="choice_${choice} XML default"/>
      </condition>
    </extension>

    <!-- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–æ–≤ IVR -->
    <extension name="choice_1">
      <condition field="destination_number" expression="^choice_1$">
        <action application="playback" data="tone_stream://%(500,200,1000)"/>
        <action application="hangup"/>
      </condition>
    </extension>

    <extension name="choice_2">
      <condition field="destination_number" expression="^choice_2$">
        <action application="playback" data="tone_stream://%(500,200,500)"/>
        <action application="hangup"/>
      </condition>
    </extension>

    <extension name="choice_9">
      <condition field="destination_number" expression="^choice_9$">
        <action application="echo"/>
      </condition>
    </extension>

    <!-- –ò—Å—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏ —Å IVR -->
    <extension name="outbound_ivr">
      <condition field="destination_number" expression="^(\d{11})$">
        <action application="set" data="caller_id_name=79058615815"/>
        <action application="set" data="caller_id_number=79058615815"/>
        <action application="set" data="hangup_after_bridge=true"/>
        
        <!-- –ü–†–ê–í–ò–õ–¨–ù–´–ô —Å–ø–æ—Å–æ–±: bridge + transfer -->
        <action application="bridge" data="sofia/gateway/sip_trunk/$1"/>
        <action application="transfer" data="1201 XML default"/>
      </condition>
    </extension>

  </context>
</include>
EOF

echo "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–∏–∞–ª–ø–ª–∞–Ω —Å–æ–∑–¥–∞–Ω"

# –≠–¢–ê–ü 2: –°–æ–∑–¥–∞–Ω–∏–µ JavaScript IVR —Å–∫—Ä–∏–ø—Ç–∞
echo ""
echo "üìã –≠–¢–ê–ü 2: JAVASCRIPT IVR –°–ö–†–ò–ü–¢"
echo "==============================="

echo ""
echo "–°–æ–∑–¥–∞–µ–º JavaScript IVR –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."

# –°–æ–∑–¥–∞–µ–º JavaScript IVR –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
cat > /tmp/ivr_menu.js << 'EOF'
/**
 * IVR Menu –¥–ª—è Dailer System
 * –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ FreeSWITCH
 * JavaScript Example - Say IVR Menu
 */

var dtmf_digits = "";

function on_dtmf(session, type, digits, arg) {
    console_log("info", "DTMF digit pressed: " + digits.digit + "\n");
    dtmf_digits += digits.digit;
    return(false);
}

/* –ü—Ä–æ—Å—Ç–æ–µ IVR –º–µ–Ω—é —Å —Ç–æ–Ω–∞–º–∏ –≤–º–µ—Å—Ç–æ —Ä–µ—á–∏ */
function playIVRMenu(ivrsession, timeout) {
    var repeat = 0;
    var maxAttempts = 3;
    
    console_log("info", "=== Dailer IVR Menu Started ===\n");
    
    ivrsession.flushDigits();
    dtmf_digits = "";
    
    while (ivrsession.ready() && dtmf_digits == "" && repeat < maxAttempts) {
        console_log("info", "Playing IVR menu, attempt " + (repeat + 1) + "\n");
        
        // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–Ω
        ivrsession.execute("playback", "tone_stream://%(1000,500,800)");
        ivrsession.execute("sleep", "500");
        
        // –ú–µ–Ω—é –æ–ø—Ü–∏–π (—Ç–æ–Ω—ã –≤–º–µ—Å—Ç–æ –≥–æ–ª–æ—Å–∞)
        // –¢–æ–Ω –¥–ª—è –æ–ø—Ü–∏–∏ 1
        ivrsession.execute("playback", "tone_stream://%(200,200,1000)");
        ivrsession.execute("sleep", "200");
        
        // –¢–æ–Ω –¥–ª—è –æ–ø—Ü–∏–∏ 2  
        ivrsession.execute("playback", "tone_stream://%(200,200,500)");
        ivrsession.execute("sleep", "200");
        
        // –¢–æ–Ω –¥–ª—è –æ–ø—Ü–∏–∏ 9
        ivrsession.execute("playback", "tone_stream://%(200,200,300)");
        
        // –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞
        if (ivrsession.ready() && dtmf_digits == "") {
            dtmf_digits = ivrsession.getDigits(1, "", timeout, on_dtmf);
            
            if (dtmf_digits == "") {
                repeat++;
                console_log("info", "No input received, repeating menu\n");
            }
        }
    }
    
    return(dtmf_digits);
}

/* –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
function processChoice(ivrsession, choice) {
    console_log("info", "Processing choice: " + choice + "\n");
    
    switch(choice) {
        case "1":
            console_log("info", "Choice 1 - Playing confirmation tone\n");
            ivrsession.execute("playback", "tone_stream://%(1000,500,1000)");
            break;
            
        case "2":
            console_log("info", "Choice 2 - Playing goodbye tone\n");
            ivrsession.execute("playback", "tone_stream://%(1000,500,400)");
            break;
            
        case "9":
            console_log("info", "Choice 9 - Starting echo\n");
            ivrsession.execute("echo");
            break;
            
        default:
            console_log("info", "Invalid choice: " + choice + "\n");
            ivrsession.execute("playback", "tone_stream://%(300,300,200)");
            break;
    }
}

/* –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è IVR */
if (session && session.ready()) {
    console_log("info", "=== Starting Dailer IVR System ===\n");
    
    // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∑–≤–æ–Ω–æ–∫
    session.answer();
    session.sleep(1000);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º caller ID
    session.setVariable("caller_id_name", "79058615815");
    session.setVariable("caller_id_number", "79058615815");
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º IVR –º–µ–Ω—é
    var userChoice = playIVRMenu(session, 5000);
    
    if (session.ready() && userChoice != "") {
        processChoice(session, userChoice);
    }
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–≤–æ–Ω–æ–∫
    session.sleep(1000);
    session.hangup();
    
    console_log("info", "=== Dailer IVR Session Ended ===\n");
}
EOF

echo "‚úÖ JavaScript IVR —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω"

# –≠–¢–ê–ü 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo ""
echo "üìã –≠–¢–ê–ü 3: –£–°–¢–ê–ù–û–í–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò"
echo "================================"

echo ""
echo "1. üìÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∏–∞–ª–ø–ª–∞–Ω–∞..."
docker cp /tmp/correct_dialplan.xml "$CONTAINER_NAME:/usr/local/freeswitch/conf/dialplan/default.xml"

echo ""
echo "2. üìÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ JavaScript —Å–∫—Ä–∏–ø—Ç–∞..."
docker cp /tmp/ivr_menu.js "$CONTAINER_NAME:/usr/local/freeswitch/scripts/"

echo ""
echo "3. üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª—è JavaScript..."
JS_MODULE=$(docker exec "$CONTAINER_NAME" fs_cli -x "module_exists mod_v8" 2>&1)
echo "JavaScript –º–æ–¥—É–ª—å: $JS_MODULE"

if echo "$JS_MODULE" | grep -q "false"; then
    echo "‚ö†Ô∏è –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª—å JavaScript..."
    docker exec "$CONTAINER_NAME" fs_cli -x "load mod_v8"
else
    echo "‚úÖ JavaScript –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω"
fi

echo ""
echo "4. üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
RELOAD_RESULT=$(docker exec "$CONTAINER_NAME" fs_cli -x "reloadxml" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç: $RELOAD_RESULT"

# –≠–¢–ê–ü 4: –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ IVR
echo ""
echo "üß™ –≠–¢–ê–ü 4: –õ–û–ö–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï"
echo "==============================="

echo ""
echo "üí° –ü–†–ê–í–ò–õ–¨–ù–´–ô –°–ü–û–°–û–ë –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø IVR:"
echo "1. –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ extensions (1200, 1201)"
echo "2. –í—ã–∑—ã–≤–∞–µ–º –∏—Ö –ù–ï —á–µ—Ä–µ–∑ SIP trunk"
echo "3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –¥–∏–∞–ª–ø–ª–∞–Ω–∞"
echo ""

echo "–¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π IVR –±–µ–∑ JavaScript"
echo "----------------------------------"
echo "Extension: 1201"
SIMPLE_TEST=$(docker exec "$CONTAINER_NAME" fs_cli -x "originate user/1000@default 1201" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç: $SIMPLE_TEST"

sleep 3

echo ""
echo "–¢–µ—Å—Ç 2: JavaScript IVR"
echo "----------------------"
echo "Extension: 1200"
JS_TEST=$(docker exec "$CONTAINER_NAME" fs_cli -x "originate user/1000@default 1200" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç: $JS_TEST"

sleep 3

echo ""
echo "–¢–µ—Å—Ç 3: Echo (–∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π)"
echo "-------------------------"
ECHO_TEST=$(docker exec "$CONTAINER_NAME" fs_cli -x "originate user/1000@default echo" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç: $ECHO_TEST"

sleep 3

# –≠–¢–ê–ü 5: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –∑–≤–æ–Ω–∫–æ–≤
echo ""
echo "üìã –≠–¢–ê–ü 5: –ü–†–ê–í–ò–õ–¨–ù–´–ô –°–ü–û–°–û–ë –î–õ–Ø SIP TRUNK"
echo "========================================"

echo ""
echo "üí° –î–õ–Ø –ó–í–û–ù–ö–û–í –ß–ï–†–ï–ó SIP TRUNK –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo ""

echo "–°–ø–æ—Å–æ–± 1: Bridge + Transfer"
echo "---------------------------"
echo "–ö–æ–º–∞–Ω–¥–∞: originate sofia/gateway/sip_trunk/$PHONE_NUMBER &bridge(user/1000@default),&transfer(1201 XML default)"

echo ""
echo "–°–ø–æ—Å–æ–± 2: –ü—Ä—è–º–æ–π –ø–µ—Ä–µ–≤–æ–¥"
echo "------------------------"  
echo "–ö–æ–º–∞–Ω–¥–∞: originate sofia/gateway/sip_trunk/$PHONE_NUMBER 1201 XML default"

echo ""
echo "–¢–µ—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞..."
CORRECT_TEST=$(docker exec "$CONTAINER_NAME" fs_cli -x "originate sofia/gateway/sip_trunk/$PHONE_NUMBER 1201 XML default" 2>&1)
echo "–†–µ–∑—É–ª—å—Ç–∞—Ç: $CORRECT_TEST"

sleep 10

echo ""
echo "‚ùì –ü–û–õ–£–ß–ò–õ–ò –õ–ò –ó–í–û–ù–û–ö –° –ü–†–ê–í–ò–õ–¨–ù–´–ú IVR?"
read -p "–í–≤–µ–¥–∏—Ç–µ –¥–∞/–Ω–µ—Ç: " CORRECT_RESULT

if [[ "$CORRECT_RESULT" =~ ^[–î–¥Yy] ]]; then
    echo "üéâ –ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–û–î–•–û–î –†–ê–ë–û–¢–ê–ï–¢!"
    CORRECT_WORKS=true
else
    echo "‚ùå –ù—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
    CORRECT_WORKS=false
fi

# –≠–¢–ê–ü 6: –§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo ""
echo "üìã –≠–¢–ê–ü 6: –§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò"
echo "==============================="

echo ""
echo "üìö –£–†–û–ö –ò–ó –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò:"
echo ""

echo "‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û:"
echo "- IVR = extensions –≤ –¥–∏–∞–ª–ø–ª–∞–Ω–µ"
echo "- JavaScript/Lua —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –ª–æ–≥–∏–∫–∏"
echo "- originate DESTINATION extension context"
echo "- –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ extensions"
echo ""

echo "‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û (—á—Ç–æ –º—ã –¥–µ–ª–∞–ª–∏):"
echo "- originate sofia/gateway/phone &application"
echo "- –ü–æ–ø—ã—Ç–∫–∏ —Å–æ–∑–¥–∞—Ç—å IVR —á–µ—Ä–µ–∑ inline apps"
echo "- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ SIP trunk –≤–º–µ—Å—Ç–æ –ª–æ–∫–∞–ª—å–Ω–æ"
echo ""

if [ "$CORRECT_WORKS" = true ]; then
    echo "üéâ –£–°–ü–ï–•! IVR –°–ò–°–¢–ï–úA –†–ê–ë–û–¢–ê–ï–¢!"
    echo ""
    echo "‚úÖ –†–ê–ë–û–ß–ò–ï –ö–û–ú–ê–ù–î–´ –î–õ–Ø BACKEND:"
    echo ""
    echo "// JavaScript backend –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:"
    echo "const ivrCall = await freeswitch.originate("
    echo "    \`sofia/gateway/sip_trunk/\${phoneNumber}\`,"
    echo "    '1201 XML default'  // Extension –≤ –¥–∏–∞–ª–ø–ª–∞–Ω–µ"
    echo ");"
    echo ""
    echo "// –ò–ª–∏ —Å bridge:"
    echo "const bridgeCall = await freeswitch.originate("
    echo "    \`sofia/gateway/sip_trunk/\${phoneNumber}\`,"
    echo "    '&bridge(user/1000@default),&transfer(1201 XML default)'"
    echo ");"
    
else
    echo "üîß –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê:"
    echo ""
    echo "1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É mod_v8"
    echo "2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º"
    echo "3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–∏–∞–ª–ø–ª–∞–Ω–∞"
    echo "4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ FreeSWITCH"
fi

echo ""
echo "üìã –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ü–†–û–î–ê–ö–®–ï–ù–ê:"
echo "========================"

echo ""
echo "# –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ IVR:"
echo "docker exec $CONTAINER_NAME fs_cli -x \"originate user/1000@default 1201\""
echo ""
echo "# –í–Ω–µ—à–Ω–∏–π –∑–≤–æ–Ω–æ–∫ —Å IVR:"
echo "docker exec $CONTAINER_NAME fs_cli -x \"originate sofia/gateway/sip_trunk/$PHONE_NUMBER 1201 XML default\""
echo ""
echo "# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–ª–ø–ª–∞–Ω–∞:"
echo "docker exec $CONTAINER_NAME fs_cli -x \"xml_locate dialplan context default 1201\""
echo ""
echo "# –ü—Ä–æ–≤–µ—Ä–∫–∞ JavaScript –º–æ–¥—É–ª—è:"
echo "docker exec $CONTAINER_NAME fs_cli -x \"module_exists mod_v8\""

echo ""
echo "üéâ –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø IVR –ì–û–¢–û–í–ê!"
echo "=================================="

echo ""
echo "üìñ –û–°–ù–û–í–ê–ù–û –ù–ê –û–§–ò–¶–ò–ê–õ–¨–ù–û–ô –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò:"
echo "- FreeSWITCH PBX Example"
echo "- JavaScript Example - Say IVR Menu"
echo "- FreeSWITCH Dialplan Best Practices"

echo ""
echo "üöÄ –¢–ï–ü–ï–†–¨ –£ –í–ê–° –ï–°–¢–¨ –†–ê–ë–û–ß–ò–ô IVR!" 